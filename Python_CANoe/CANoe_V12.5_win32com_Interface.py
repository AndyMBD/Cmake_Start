# -*- coding: mbcs -*-
# Created by makepy.py version 0.5.01
# By python version 3.12.1 (tags/v3.12.1:2305ca5, Dec  7 2023, 22:03:25) [MSC v.1937 64 bit (AMD64)]
# From type library 'CANoe64.exe'
# On Mon Feb 26 15:33:05 2024
'CANoe 12.0 Type Library'
makepy_version = '0.5.01'
python_version = 0x30c01f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{7F31DEB0-5BCC-11D3-8562-00105A3E017B}')
MajorVersion = 1
MinorVersion = 61
LibraryFlags = 8
LCID = 0x0

class constants:
	cSignalOfflineDefault         =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0001
	cSignalOfflinePrevious        =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0001
	cSignalOfflineTx              =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0001
	cSignalOnline                 =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0001
	cMostEventSource_AMSRx        =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_AMSSpy       =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_AMSTx        =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_CMSRx        =32         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_CMSSpy       =64         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_CMSTx        =16         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_LightLock    =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_OtherEvents  =128        # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_PacketRx     =512        # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_PacketSpy    =1024       # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cMostEventSource_PacketTx     =256        # from enum __MIDL___MIDL_itf_CANw_0000_0000_0002
	cVerdictErrorInTestSystem     =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0003
	cVerdictFailed                =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0003
	cVerdictInconclusive          =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0003
	cVerdictNone                  =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0003
	cVerdictNotAvailable          =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0003
	cVerdictPassed                =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0003
	cGeneralError                 =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0004
	cTestModuleEnd                =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0004
	cUserAbortion                 =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0004
	cStopReasonEnd                =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0005
	cStopReasonGeneralError       =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0005
	cStopReasonUserAbort          =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0005
	cStopReasonVerdictImpact      =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0005
	cA429                         =16         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cAFDX                         =14         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cCAN                          =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cEthernet                     =11         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cFLEXRAY                      =7          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cInvalid                      =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cJ1708                        =9          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cJ1939                        =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cKLineBt                      =15         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cLIN                          =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cMOST                         =6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cTTP                          =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cVAN                          =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cWlan                         =13         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	reserved                      =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0006
	cAllPanels                    =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0007
	cLoadAndStop                  =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0007
	cPermanent                    =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0007
	cStart                        =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0007
	cTemporary                    =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0007
	cDocking                      =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0008
	cFloating                     =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0008
	cFrame                        =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0008
	cMDI                          =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0008
	cAllEdges                     =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0009
	cRecessiveDominant            =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0009
	cDatabaseVariable             =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0010
	cVariable                     =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0010
	cDatabaseMessageSignal        =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0011
	cMessageSignal                =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0011
	cSignal                       =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0011
	cConstant                     =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0012
	cLinear                       =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0012
	cNone                         =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0012
	cCANTraceColumnLayout         =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0013
	cDiagnosticsTraceColumnLayout =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0013
	cISOTPTraceColumnLayout       =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0013
	cMOSTTraceColumnLayout        =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0013
	cDecimal                      =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0014
	cHexaDecimal                  =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0014
	cAbsolute                     =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0015
	cRelative                     =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0015
	cNumeric                      =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0016
	cSymbolic                     =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0016
	cOneTableEmptyCells           =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0017
	cOneTableKeepLastValues       =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0017
	cSeveralTables                =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0017
	cSeveralTablesSideBySide      =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0017
	cNewTimeAxisForAllSignals_InterpolatedValue=7          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0018
	cNewTimeAxisForAllSignals_LastValue=5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0018
	cNewTimeAxisForAllSignals_NextValue=6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0018
	cOneTimeAxisForAllSignals_CurrentValue=1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0018
	cOneTimeAxisForAllSignals_InterpolatedValue=4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0018
	cOneTimeAxisForAllSignals_LastValue=2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0018
	cOneTimeAxisForAllSignals_NextValue=3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0018
	cOneTimeAxisPerSignal         =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0018
	cDateAndTime                  =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0019
	cInSeconds                    =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0019
	cBusSleep                     =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cConfigStable                 =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cDriverOff                    =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cError                        =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cLimpHome                     =6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cNmOn                         =7          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cNotAvailable                 =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cRingDataAllowed              =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cSleepInd                     =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0020
	cMostIG                       =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0021
	cStandardIG                   =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0021
	cOfflineMode                  =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0022
	cOnlineMode                   =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0022
	cValue                        =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0023
	cValueAndTime                 =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0023
	cValueAndTimeU                =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0023
	cIdle                         =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0024
	cIdleU                        =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0024
	cVariableValue                =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0025
	cVariableValueAndTime         =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0025
	cMostRType_Alloc              =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0026
	cMostRType_Dealloc            =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0026
	cMostRType_GetSource          =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0026
	cMostRType_Normal             =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0026
	cMostRType_RemRead            =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0026
	cMostRType_RemWrite           =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0026
	cMostChip_OS8104              =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0027
	cMostChip_Unknown             =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0027
	cMostNetState_ConfigNotOk     =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0028
	cMostNetState_ConfigOk        =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0028
	cMostNetState_NetInterfaceInit=3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0028
	cMostNetState_NetOn           =6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0028
	cMostNetState_PowerOff        =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0028
	cMostNetState_Unknown         =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0028
	cMostLightLock_CriticalUnlock =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0029
	cMostLightLock_Lock           =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0029
	cMostLightLock_StableLock     =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0029
	cMostLightLock_Unknown        =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0029
	cMostLightLock_Unlock         =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0029
	cMostLineIn                   =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0030
	cMostLineOut                  =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0030
	eDiagDescriptionMode_EcuSimulation=2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0031
	eDiagDescriptionMode_FunctionalGroupDescription=4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0031
	eDiagDescriptionMode_InterpretationOnly=0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0031
	eDiagDescriptionMode_PhysicalNetworkRequest=3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0031
	eDiagDescriptionMode_SendOnly =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0031
	cBasicConfigurationServiceSupport=2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0032
	cInvalidConfigurationServiceSupport=0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0032
	cNoConfigurationServiceSupport=1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0032
	cPositiveResponseConfigurationServiceSupport=3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0032
	cClassB                       =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0033
	cClassC                       =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0033
	cInvalidDeviceClass           =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0033
	cInvalidIUTResetType          =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0034
	cManual                       =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0034
	cNoReset                      =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0034
	cRelayAndIOCab                =6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0034
	cSoftware                     =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0034
	cVH1100_Family                =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0034
	cVT7001                       =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0034
	cInvalidNodeCapabilitySource  =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0035
	cUseLDF                       =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0035
	cUseNCF                       =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0035
	cTestCase                     =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cTestCaseList                 =7          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cTestConfiguration            =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cTestFixture                  =6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cTestGroup                    =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cTestSequence                 =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cTestSequenceList             =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cTestTypeReserved             =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cTestUnit                     =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0036
	cAllTestSteps                 =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0037
	cFailedTestStepsOnly          =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0037
	cNoTestSteps                  =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0037
	cTestCaseAll                  =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0038
	cTestCaseFailed               =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0038
	cAllTestPatterns              =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0039
	cFailedTestPatternsOnly       =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0039
	cNoTestPatterns               =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0039
	cReportFormatDefault          =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0040
	cReportFormatVTestReport      =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0040
	cReportFormatXml              =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0040
	cCheckEvents                  =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cCommentsAndDetails           =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cComplexTimeoutResume         =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cConditionConstraintResultAndStatistics=6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cEngineerInfo                 =12         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cEnvironmentInfo              =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cFirstConditionConstraintOnly =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cGeneralInfo                  =10         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cHardware                     =7          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cSutAndTestSetupInfo          =11         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cTestElementInfo              =13         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cTimeoutResume                =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cVariableDefinition           =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0041
	cCompileError                 =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0042
	cCompileSuccess               =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0042
	cOpenConfigurationError       =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0043
	cOpenConfigurationSuccess     =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0043
	cOpenConfigurationWarning     =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0043
	cDefinedNumberOfRepeats       =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0044
	cRepeatForDefinedTime         =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0044
	cRepeatForever                =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0044
	cEndTestCaseOnFail            =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0045
	cEndTestModuleOnFail          =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0045
	cNoImpact                     =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0045
	cDebugPauseAfterEachTestCaseOrPattern=2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0046
	cDebugPauseAfterFailedTestCaseOrPattern=1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0046
	cNoDebugPause                 =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0046
	cPauseAfterTestCaseAndTestPattern=1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0047
	cPauseAfterTestCaseOnly       =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0047
	cContinuousExecution          =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0048
	cMultipleExecution            =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0048
	cSingleExecution              =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0048
	cTimedExecution               =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0048
	cTestConfigurationVerdictImpactEndOnErrorInTestSystem=2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0049
	cTestConfigurationVerdictImpactEndOnFail=1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0049
	cTestConfigurationVerdictImpactNone=0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0049
	cNoTestCase                   =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0050
	cTestCaseError                =16         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0050
	cTestCaseFail                 =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0050
	cTestCaseInconclusive         =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0050
	cTestCaseNone                 =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0050
	cTestCasePass                 =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0050
	cNoTestStepCommand            =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0051
	cTestStepCommandError         =16         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0051
	cTestStepCommandFail          =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0051
	cTestStepCommandInconclusive  =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0051
	cTestStepCommandPass          =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0051
	cTestStepCommandWhitoutVerdict=4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0051
	cNoPause                      =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0052
	cPauseAfterEachElement        =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0052
	cPauseAfterSpecificVerdict    =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0052
	cRandomizeEachCycle           =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0053
	cRandomizeOff                 =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0053
	cRandomizeOnce                =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0053
	cVerdictFlagDisabled          =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0054
	cVerdictFlagError             =16         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0054
	cVerdictFlagFail              =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0054
	cVerdictFlagInconclusive      =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0054
	cVerdictFlagNone              =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0054
	cVerdictFlagPass              =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0054
	cDoIP                         =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0055
	cKLine                        =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0055
	cCyclic                       =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0056
	cDAQ                          =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0056
	cOnConnect                    =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0056
	cPolling                      =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0056
	cUnused                       =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0056
	cCCP                          =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0057
	cXCP                          =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0057
	cBtA429                       =16         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtAFDX                       =14         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtBEAN                       =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtCAN                        =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtDAIO                       =10         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtEthernet                   =11         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtFlexRay                    =7          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtGlLogger                   =12         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtInvalid                    =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtJ1708                      =9          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtKLine                      =15         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtLIN                        =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtMOST                       =6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtVAN                        =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtWildcard                   =-1         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cBtWlan                       =13         # from enum __MIDL___MIDL_itf_CANw_0000_0000_0058
	cTlCan                        =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0059
	cTlFlexRay                    =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0059
	cTlTcp                        =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0059
	cTlUdp                        =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0059
	cBreakAtDateTime              =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cBreakAtTimeStamp             =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cEntire                       =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cIntervalBetweenTwoDateTimes  =6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cIntervalBetweenTwoTimeStamps =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cIntervalBetweenTwoTimeStampsInSeconds=8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cStartFromDateTime            =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cStartFromTimeStamp           =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cStartFromTimeStampInSeconds  =7          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0060
	cDriftJitterEvenDistribution  =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0061
	cDriftJitterFixedDeviation    =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0061
	cAllWindows                   =255        # from enum __MIDL___MIDL_itf_CANw_0000_0000_0062
	cDiagnosticConsole            =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0062
	cDiagnosticSessionControl     =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0062
	cFaultMemory                  =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0062
	cLogAllEvents                 =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cLogBusEvents                 =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cLogCaplEvents                =6          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cLogDiagEvents                =8          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cLogInternalEvents            =5          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cLogStatisticEvents           =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cLogSysVarEvents              =4          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cLogTestEvents                =7          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cLogTriggerEvents             =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0063
	cImageFolder                  =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0064
	cNoVideoInput                 =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0064
	cVideoFile                    =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0064
	cCamlog2                      =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0065
	cHostCam                      =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0065
	cSourceFormat_ARXML           =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0066
	cSourceFormat_Undetermined    =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0066
	cSourceFormat_vCDL            =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0066
	cSourceFormat_vCODM           =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0066
	cSourceType_Default           =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0067
	cSourceType_VTT               =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0067
	cImportStatus_Failed          =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0068
	cImportStatus_None            =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0068
	cImportStatus_Succeeded       =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0068
	cMergeStrategy_Abort          =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0069
	cMergeStrategy_DiscardAllManualChanges=3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0069
	cMergeStrategy_PreferIncomingChanges=1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0069
	cMergeStrategy_PreferManualChanges=0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0069
	cSeverity_Error               =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0070
	cSeverity_Informative         =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0070
	cSeverity_Warning             =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0070
	cARXMLLayer_COM               =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0071
	cARXMLLayer_COM_SWC           =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0071
	cARXMLLayer_None              =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0071
	cARXMLLayer_SWC               =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0071
	cWorkingModeRealBus           =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0072
	cWorkingModeSimulatedBusFast  =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0072
	cWorkingModeSimulatedBusWithFactor=2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0072
	cCentos64                     =3          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0073
	cUbuntu64                     =2          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0073
	cWin32                        =0          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0073
	cWin64                        =1          # from enum __MIDL___MIDL_itf_CANw_0000_0000_0073
	cGlobalStack                  =1          # from enum __MIDL___MIDL_itf_CANw_0001_0658_0001
	cNodeStack                    =2          # from enum __MIDL___MIDL_itf_CANw_0001_0658_0001
	cWinStack                     =0          # from enum __MIDL___MIDL_itf_CANw_0001_0658_0001
	cConfigMethodDhcp             =1          # from enum __MIDL___MIDL_itf_CANw_0001_0658_0002
	cConfigMethodDhcpPreassigned  =2          # from enum __MIDL___MIDL_itf_CANw_0001_0658_0002
	cConfigMethodLinkLocal        =3          # from enum __MIDL___MIDL_itf_CANw_0001_0658_0002
	cConfigMethodManual           =0          # from enum __MIDL___MIDL_itf_CANw_0001_0658_0002

from win32com.client import DispatchBaseClass
class IARXMLImportParameters(DispatchBaseClass):
	'IARXMLImportParameters Interface'
	CLSID = IID('{E56FBBB1-317E-4340-A588-0DDA95B2922E}')
	coclass_clsid = IID('{F38D7030-C528-4CE0-B38A-952EE58E0A7F}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BindingsNamespace": (107, 2, (8, 0), (), "BindingsNamespace", None),
		"ComCommunicationObjectsNamespace": (102, 2, (8, 0), (), "ComCommunicationObjectsNamespace", None),
		"ComDataTypesNamespace": (101, 2, (8, 0), (), "ComDataTypesNamespace", None),
		"LayerToImport": (100, 2, (3, 0), (), "LayerToImport", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ParticipantsNamespace": (106, 2, (8, 0), (), "ParticipantsNamespace", None),
		"SwcCommunicationObjectsNamespace": (104, 2, (8, 0), (), "SwcCommunicationObjectsNamespace", None),
		"SwcDataTypesNamespace": (103, 2, (8, 0), (), "SwcDataTypesNamespace", None),
		"TimingsNamespace": (105, 2, (8, 0), (), "TimingsNamespace", None),
	}
	_prop_map_put_ = {
		"BindingsNamespace": ((107, LCID, 4, 0),()),
		"ComCommunicationObjectsNamespace": ((102, LCID, 4, 0),()),
		"ComDataTypesNamespace": ((101, LCID, 4, 0),()),
		"LayerToImport": ((100, LCID, 4, 0),()),
		"ParticipantsNamespace": ((106, LCID, 4, 0),()),
		"SwcCommunicationObjectsNamespace": ((104, LCID, 4, 0),()),
		"SwcDataTypesNamespace": ((103, LCID, 4, 0),()),
		"TimingsNamespace": ((105, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAdditionalDescription(DispatchBaseClass):
	'IAdditonalDescription'
	CLSID = IID('{0B764757-2F83-4493-A185-E4AA29BD8EEF}')
	coclass_clsid = IID('{094FC1CC-96B5-43B9-84D0-4AED35E4678C}')

	def CloseWindows(self, windows=255):
		'method CloseWindows'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((3, 49),),windows
			)

	def OpenWindows(self, windows=255):
		'method OpenWindows'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((3, 49),),windows
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DiagVariants": (3, 2, (9, 0), (), "DiagVariants", None),
		"FilePath": (5, 2, (8, 0), (), "FilePath", None),
		"Language": (7, 2, (8, 0), (), "Language", None),
		# Method 'MasterDescription' returns object of type 'IDiagDescription'
		"MasterDescription": (8, 2, (9, 0), (), "MasterDescription", '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Qualifier": (4, 2, (8, 0), (), "Qualifier", None),
		"Variant": (6, 2, (8, 0), (), "Variant", None),
	}
	_prop_map_put_ = {
		"Language": ((7, LCID, 4, 0),()),
		"Variant": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAdditionalDescriptions(DispatchBaseClass):
	'IAdditionalDescriptions'
	CLSID = IID('{30A3777D-547E-4B3A-AE6E-242132FC426C}')
	coclass_clsid = IID('{A1082BC2-71A2-4390-8DE9-C887C889984A}')

	# Result is of type IAdditionalDescription
	def Add(self, FilePath=defaultNamedNotOptArg, ecuIdentifier=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (8, 17)),FilePath
			, ecuIdentifier)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0B764757-2F83-4493-A185-E4AA29BD8EEF}')
		return ret

	# Result is of type IAdditionalDescription
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0B764757-2F83-4493-A185-E4AA29BD8EEF}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0B764757-2F83-4493-A185-E4AA29BD8EEF}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0B764757-2F83-4493-A185-E4AA29BD8EEF}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IApplication(DispatchBaseClass):
	'IApplication Interface'
	CLSID = IID('{0B784BA8-4F32-11D3-854D-00105A3E017B}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication10(DispatchBaseClass):
	'IApplication10 Interface'
	CLSID = IID('{D3F8A64F-7847-40F9-AA19-B50918174FA1}')
	coclass_clsid = IID('{7F31DEB1-5BCC-11D3-8562-00105A3E017B}')

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetNetworks is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetworks(self, typeParam=defaultNamedOptArg):
		'property Networks'
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((12, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetworks', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def OpenLink(self, link=defaultNamedNotOptArg):
		'method OpenLink'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(30, LCID, 1, (8, 0), ((8, 1),),link
			)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def ReleaseDotNetAssemblies(self):
		'method ReleaseDotNetAssemblies'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	def ReloadDotNetAssemblies(self):
		'method ReloadDotNetAssemblies'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"ChannelMappingName": (29, 2, (8, 0), (), "ChannelMappingName", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Networks": (23, 2, (9, 0), ((12, 17),), "Networks", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Performance": (28, 2, (9, 0), (), "Performance", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"SharedMemorySetup": (26, 2, (9, 0), (), "SharedMemorySetup", None),
		"Signals": (24, 2, (9, 0), (), "Signals", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Version": (22, 2, (9, 0), (), "Version", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"ChannelMappingName": ((29, LCID, 4, 0),()),
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication2(DispatchBaseClass):
	'IApplication2 Interface'
	CLSID = IID('{828B275A-A2F3-4C5E-8A36-657577D39F93}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication3(DispatchBaseClass):
	'IApplication3 Interface'
	CLSID = IID('{BC190DA3-8645-4A14-BEE8-CE0486609043}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetNetworks is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetworks(self, typeParam=defaultNamedOptArg):
		'property Networks'
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((12, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetworks', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Networks": (23, 2, (9, 0), ((12, 17),), "Networks", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Version": (22, 2, (9, 0), (), "Version", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication4(DispatchBaseClass):
	'IApplication4 Interface'
	CLSID = IID('{7F4AF1B3-4CD9-495F-BD15-F95BD03A2516}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetNetworks is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetworks(self, typeParam=defaultNamedOptArg):
		'property Networks'
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((12, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetworks', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Networks": (23, 2, (9, 0), ((12, 17),), "Networks", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"Signals": (24, 2, (9, 0), (), "Signals", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Version": (22, 2, (9, 0), (), "Version", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication5(DispatchBaseClass):
	'IApplication5 Interface'
	CLSID = IID('{4B6659E2-C9F5-46D8-B497-1E364FCE5A7A}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetNetworks is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetworks(self, typeParam=defaultNamedOptArg):
		'property Networks'
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((12, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetworks', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def ReleaseDotNetAssemblies(self):
		'method ReleaseDotNetAssemblies'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Networks": (23, 2, (9, 0), ((12, 17),), "Networks", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"Signals": (24, 2, (9, 0), (), "Signals", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Version": (22, 2, (9, 0), (), "Version", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication6(DispatchBaseClass):
	'IApplication5 Interface'
	CLSID = IID('{4A0D68E0-E2E0-4260-A5EE-2363AD2BDB4B}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetNetworks is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetworks(self, typeParam=defaultNamedOptArg):
		'property Networks'
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((12, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetworks', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def ReleaseDotNetAssemblies(self):
		'method ReleaseDotNetAssemblies'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Networks": (23, 2, (9, 0), ((12, 17),), "Networks", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"SharedMemorySetup": (26, 2, (9, 0), (), "SharedMemorySetup", None),
		"Signals": (24, 2, (9, 0), (), "Signals", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Version": (22, 2, (9, 0), (), "Version", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication7(DispatchBaseClass):
	'IApplication7 Interface'
	CLSID = IID('{4C8C05A7-13BB-4B14-983C-10C739C0C089}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetNetworks is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetworks(self, typeParam=defaultNamedOptArg):
		'property Networks'
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((12, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetworks', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def ReleaseDotNetAssemblies(self):
		'method ReleaseDotNetAssemblies'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	def ReloadDotNetAssemblies(self):
		'method ReloadDotNetAssemblies'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Networks": (23, 2, (9, 0), ((12, 17),), "Networks", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"SharedMemorySetup": (26, 2, (9, 0), (), "SharedMemorySetup", None),
		"Signals": (24, 2, (9, 0), (), "Signals", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Version": (22, 2, (9, 0), (), "Version", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication8(DispatchBaseClass):
	'IApplication8 Interface'
	CLSID = IID('{EC124917-C29B-4DEE-9690-D5F8E5E3DF1B}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetNetworks is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetworks(self, typeParam=defaultNamedOptArg):
		'property Networks'
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((12, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetworks', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def ReleaseDotNetAssemblies(self):
		'method ReleaseDotNetAssemblies'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	def ReloadDotNetAssemblies(self):
		'method ReloadDotNetAssemblies'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Networks": (23, 2, (9, 0), ((12, 17),), "Networks", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Performance": (28, 2, (9, 0), (), "Performance", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"SharedMemorySetup": (26, 2, (9, 0), (), "SharedMemorySetup", None),
		"Signals": (24, 2, (9, 0), (), "Signals", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Version": (22, 2, (9, 0), (), "Version", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication9(DispatchBaseClass):
	'IApplication9 Interface'
	CLSID = IID('{C38503D5-925B-4025-A5FD-74078957B257}')
	coclass_clsid = None

	# The method GetBus is actually a property, but must be used as a method to correctly pass the arguments
	def GetBus(self, busTypeParam=defaultNamedNotOptArg):
		'property Bus'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((8, 17),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBus', None)
		return ret

	# The method GetNetworks is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetworks(self, typeParam=defaultNamedOptArg):
		'property Networks'
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((12, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetworks', None)
		return ret

	# The method GetSimulation is actually a property, but must be used as a method to correctly pass the arguments
	def GetSimulation(self, typeParam=defaultNamedNotOptArg):
		'property Simulation'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((8, 17),),typeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSimulation', None)
		return ret

	def New(self, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method New'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((11, 17), (11, 17)),autoSave
			, promptUser)

	def Open(self, config=defaultNamedNotOptArg, autoSave=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Open'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1), (11, 17), (11, 17)),config
			, autoSave, promptUser)

	def Quit(self):
		'method Quit'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def ReleaseDotNetAssemblies(self):
		'method ReleaseDotNetAssemblies'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	def ReloadDotNetAssemblies(self):
		'method ReloadDotNetAssemblies'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Bus": (13, 2, (9, 0), ((8, 17),), "Bus", None),
		"CAPL": (10, 2, (9, 0), (), "CAPL", None),
		"ChannelMappingName": (29, 2, (8, 0), (), "ChannelMappingName", None),
		"Configuration": (9, 2, (9, 0), (), "Configuration", None),
		"Environment": (11, 2, (9, 0), (), "Environment", None),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		"Measurement": (8, 2, (9, 0), (), "Measurement", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Networks": (23, 2, (9, 0), ((12, 17),), "Networks", None),
		"Parent": (3, 2, (9, 0), (), "Parent", None),
		"Path": (20, 2, (8, 0), (), "Path", None),
		"Performance": (28, 2, (9, 0), (), "Performance", None),
		"Reserved1": (15, 2, (9, 0), (), "Reserved1", None),
		"Reserved2": (16, 2, (9, 0), (), "Reserved2", None),
		"Reserved3": (17, 2, (9, 0), (), "Reserved3", None),
		"Reserved4": (18, 2, (9, 0), (), "Reserved4", None),
		"Reserved5": (19, 2, (9, 0), (), "Reserved5", None),
		"SharedMemorySetup": (26, 2, (9, 0), (), "SharedMemorySetup", None),
		"Signals": (24, 2, (9, 0), (), "Signals", None),
		"Simulation": (14, 2, (9, 0), ((8, 17),), "Simulation", None),
		"System": (21, 2, (9, 0), (), "System", None),
		"UI": (12, 2, (9, 0), (), "UI", None),
		"Version": (22, 2, (9, 0), (), "Version", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"ChannelMappingName": ((29, LCID, 4, 0),()),
		"Visible": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplicationModel(DispatchBaseClass):
	'IApplicationModel Interface'
	CLSID = IID('{E63A92E2-E07A-4781-9071-FE8071D9E9B7}')
	coclass_clsid = IID('{DAB1810C-B0CB-4D4C-9BFD-C9AB8FB2E68F}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		# Method 'ApplicationModelFiles' returns object of type 'IApplicationModelFiles'
		"ApplicationModelFiles": (3, 2, (9, 0), (), "ApplicationModelFiles", '{75202966-657C-40F0-942B-036353D2C52D}'),
		"IsActive": (5, 2, (11, 0), (), "IsActive", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Participants' returns object of type 'IParticipants'
		"Participants": (4, 2, (9, 0), (), "Participants", '{102584C6-E00E-4A63-B2FA-5B79F7DA4DD9}'),
	}
	_prop_map_put_ = {
		"IsActive": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplicationModelFile(DispatchBaseClass):
	'IApplicationModelFile Interface'
	CLSID = IID('{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}')
	coclass_clsid = IID('{2306E68C-5EFD-4CDF-9B1B-46A306C627F2}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplicationModelFiles(DispatchBaseClass):
	'IApplicationModelFiles Interface'
	CLSID = IID('{75202966-657C-40F0-942B-036353D2C52D}')
	coclass_clsid = IID('{14E96426-79F5-4D61-8B78-25CEDD7C8325}')

	# Result is of type IApplicationModelFile
	def Add(self, pApplicationModelFilePath=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),pApplicationModelFilePath
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}')
		return ret

	# Result is of type IApplicationModelFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}')
		return ret

	def Remove(self, pIndex=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),pIndex
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IApplicationModelSetup(DispatchBaseClass):
	'IApplicationModelSetup Interface'
	CLSID = IID('{20A1C9AC-399F-4D79-85FC-A8001A66BB53}')
	coclass_clsid = IID('{8727551E-24B3-46D2-8C63-FAF798CA70EB}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		# Method 'ApplicationModels' returns object of type 'IApplicationModels'
		"ApplicationModels": (3, 2, (9, 0), (), "ApplicationModels", '{C9ECF396-A1B4-4FB8-938E-0ED26AD41476}'),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplicationModels(DispatchBaseClass):
	'IApplicationModels Interface'
	CLSID = IID('{C9ECF396-A1B4-4FB8-938E-0ED26AD41476}')
	coclass_clsid = IID('{3FA83260-DC0B-4AA5-8550-8FAF585944F5}')

	# Result is of type IApplicationModel
	def Add(self, pApplicationModelFilePath=''):
		'method Add'
		return self._ApplyTypes_(4, 1, (9, 32), ((8, 49),), 'Add', '{E63A92E2-E07A-4781-9071-FE8071D9E9B7}',pApplicationModelFilePath
			)

	# Result is of type IApplicationModel
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E63A92E2-E07A-4781-9071-FE8071D9E9B7}')
		return ret

	def Remove(self, pIndex=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),pIndex
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E63A92E2-E07A-4781-9071-FE8071D9E9B7}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E63A92E2-E07A-4781-9071-FE8071D9E9B7}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IApplicationSocket(DispatchBaseClass):
	'IApplicationSocket Interface'
	CLSID = IID('{BD0A81B5-73E5-471E-BD7B-768BE955461E}')
	coclass_clsid = IID('{9894BF32-15B0-41D8-A5B8-C3CF911CF43C}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusRegistry": (3, 2, (12, 0), (), "BusRegistry", None),
		"FBlockList": (4, 2, (12, 0), (), "FBlockList", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAudioInterface(DispatchBaseClass):
	'IAudioInterface Interface'
	CLSID = IID('{C794A707-99AF-4ED8-9A19-C99200795EA1}')
	coclass_clsid = IID('{00F559D5-19A5-4118-BC6D-82EA6AF9749C}')

	def ConnectToLabel(self, lineInOut=defaultNamedNotOptArg, connectionLabel=defaultNamedNotOptArg):
		'method ConnectToLabel'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1), (3, 1)),lineInOut
			, connectionLabel)

	def DisconnectFromLabel(self, lineInOut=defaultNamedNotOptArg, connectionLabel=defaultNamedNotOptArg):
		'method DisconnectFromLabel'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((3, 1), (3, 1)),lineInOut
			, connectionLabel)

	# The method Mute is actually a property, but must be used as a method to correctly pass the arguments
	def Mute(self, lineInOut=defaultNamedNotOptArg):
		'property Mute'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (3, 0), ((3, 1),),lineInOut
			)

	# The method SetMute is actually a property, but must be used as a method to correctly pass the arguments
	def SetMute(self, lineInOut=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Mute'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (3, 1)),lineInOut
			, arg1)

	# The method SetVolume is actually a property, but must be used as a method to correctly pass the arguments
	def SetVolume(self, lineInOut=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Volume'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (3, 1)),lineInOut
			, arg1)

	# The method Volume is actually a property, but must be used as a method to correctly pass the arguments
	def Volume(self, lineInOut=defaultNamedNotOptArg):
		'property Volume'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (3, 0), ((3, 1),),lineInOut
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBus(DispatchBaseClass):
	'IBus Interface'
	CLSID = IID('{884DBC02-7A76-11D3-8571-00105A3E017B}')
	coclass_clsid = None

	# The method Baudrate is actually a property, but must be used as a method to correctly pass the arguments
	def Baudrate(self, Channel=defaultNamedNotOptArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((19, 1),),Channel
			)

	def GetMessage(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg):
		'method GetMessage'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((19, 1), (8, 1)),Channel
			, msgName)
		if ret is not None:
			ret = Dispatch(ret, 'GetMessage', None)
		return ret

	def GetSignal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg):
		'method GetSignal'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((19, 1), (8, 1), (8, 1)),Channel
			, msgName, signalName)
		if ret is not None:
			ret = Dispatch(ret, 'GetSignal', None)
		return ret

	# The method SetBaudrate is actually a property, but must be used as a method to correctly pass the arguments
	def SetBaudrate(self, Channel=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((19, 1), (5, 1)),Channel
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBus2(DispatchBaseClass):
	'IBus2 Interface'
	CLSID = IID('{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
	coclass_clsid = None

	# The method Baudrate is actually a property, but must be used as a method to correctly pass the arguments
	def Baudrate(self, Channel=defaultNamedNotOptArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((19, 1),),Channel
			)

	def GetJ1939Signal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg, srcAddress=defaultNamedNotOptArg
			, dstAddress=defaultNamedNotOptArg):
		'method GetJ1939Signal'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((19, 1), (8, 1), (8, 1), (17, 1), (17, 1)),Channel
			, msgName, signalName, srcAddress, dstAddress)
		if ret is not None:
			ret = Dispatch(ret, 'GetJ1939Signal', None)
		return ret

	def GetMessage(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg):
		'method GetMessage'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((19, 1), (8, 1)),Channel
			, msgName)
		if ret is not None:
			ret = Dispatch(ret, 'GetMessage', None)
		return ret

	def GetSignal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg):
		'method GetSignal'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((19, 1), (8, 1), (8, 1)),Channel
			, msgName, signalName)
		if ret is not None:
			ret = Dispatch(ret, 'GetSignal', None)
		return ret

	# The method SetBaudrate is actually a property, but must be used as a method to correctly pass the arguments
	def SetBaudrate(self, Channel=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((19, 1), (5, 1)),Channel
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBus3(DispatchBaseClass):
	'IBus3 Interface'
	CLSID = IID('{4F97CF13-EA62-45FA-B550-3742BDD1FA42}')
	coclass_clsid = None

	# The method Baudrate is actually a property, but must be used as a method to correctly pass the arguments
	def Baudrate(self, Channel=defaultNamedNotOptArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((19, 1),),Channel
			)

	def GetJ1939Signal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg, srcAddress=defaultNamedNotOptArg
			, dstAddress=defaultNamedNotOptArg):
		'method GetJ1939Signal'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((19, 1), (8, 1), (8, 1), (17, 1), (17, 1)),Channel
			, msgName, signalName, srcAddress, dstAddress)
		if ret is not None:
			ret = Dispatch(ret, 'GetJ1939Signal', None)
		return ret

	def GetMessage(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg):
		'method GetMessage'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((19, 1), (8, 1)),Channel
			, msgName)
		if ret is not None:
			ret = Dispatch(ret, 'GetMessage', None)
		return ret

	def GetSignal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg):
		'method GetSignal'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((19, 1), (8, 1), (8, 1)),Channel
			, msgName, signalName)
		if ret is not None:
			ret = Dispatch(ret, 'GetSignal', None)
		return ret

	# The method SetBaudrate is actually a property, but must be used as a method to correctly pass the arguments
	def SetBaudrate(self, Channel=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((19, 1), (5, 1)),Channel
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Channels": (12, 2, (9, 0), (), "Channels", None),
		"Databases": (11, 2, (9, 0), (), "Databases", None),
		"Generators": (8, 2, (9, 0), (), "Generators", None),
		"InteractiveGenerators": (9, 2, (9, 0), (), "InteractiveGenerators", None),
		"Name": (13, 2, (8, 0), (), "Name", None),
		"Nodes": (7, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReplayCollection": (10, 2, (9, 0), (), "ReplayCollection", None),
	}
	_prop_map_put_ = {
		"Name": ((13, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBusStatistics(DispatchBaseClass):
	'IBusStatistics Interface'
	CLSID = IID('{A7566B46-D7E8-11D3-85EE-00105A3E017B}')
	coclass_clsid = IID('{A7566B47-D7E8-11D3-85EE-00105A3E017B}')

	# The method BusStatistic is actually a property, but must be used as a method to correctly pass the arguments
	def BusStatistic(self, busTypeParam=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'property BusStatistic'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1), (19, 1)),busTypeParam
			, Channel)
		if ret is not None:
			ret = Dispatch(ret, 'BusStatistic', None)
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'BusStatistic'
	def __call__(self, busTypeParam=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'property BusStatistic'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1), (19, 1)),busTypeParam
			, Channel)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBusVB(DispatchBaseClass):
	'IBusVB Interface'
	CLSID = IID('{03349138-55AD-445B-9613-D5A66E1B1945}')
	coclass_clsid = None

	# The method Baudrate is actually a property, but must be used as a method to correctly pass the arguments
	def Baudrate(self, Channel=defaultNamedNotOptArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 1),),Channel
			)

	def GetJ1939Signal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg, srcAddress=defaultNamedNotOptArg
			, dstAddress=defaultNamedNotOptArg):
		'method GetJ1939Signal'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1), (17, 1), (17, 1)),Channel
			, msgName, signalName, srcAddress, dstAddress)
		if ret is not None:
			ret = Dispatch(ret, 'GetJ1939Signal', None)
		return ret

	def GetMessage(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg):
		'method GetMessage'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((3, 1), (8, 1)),Channel
			, msgName)
		if ret is not None:
			ret = Dispatch(ret, 'GetMessage', None)
		return ret

	def GetSignal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg):
		'method GetSignal'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1)),Channel
			, msgName, signalName)
		if ret is not None:
			ret = Dispatch(ret, 'GetSignal', None)
		return ret

	# The method SetBaudrate is actually a property, but must be used as a method to correctly pass the arguments
	def SetBaudrate(self, Channel=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (5, 1)),Channel
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Channels": (12, 2, (9, 0), (), "Channels", None),
		"Databases": (11, 2, (9, 0), (), "Databases", None),
		"Generators": (8, 2, (9, 0), (), "Generators", None),
		"InteractiveGenerators": (9, 2, (9, 0), (), "InteractiveGenerators", None),
		"Name": (13, 2, (8, 0), (), "Name", None),
		"Nodes": (7, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReplayCollection": (10, 2, (9, 0), (), "ReplayCollection", None),
	}
	_prop_map_put_ = {
		"Name": ((13, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBusVB2(DispatchBaseClass):
	'IBusVB2 Interface'
	CLSID = IID('{2AB47E6A-B582-49A2-9FFE-7FAB4458AE76}')
	coclass_clsid = None

	# The method Baudrate is actually a property, but must be used as a method to correctly pass the arguments
	def Baudrate(self, Channel=defaultNamedNotOptArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 1),),Channel
			)

	def GetJ1939Signal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg, srcAddress=defaultNamedNotOptArg
			, dstAddress=defaultNamedNotOptArg):
		'method GetJ1939Signal'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1), (17, 1), (17, 1)),Channel
			, msgName, signalName, srcAddress, dstAddress)
		if ret is not None:
			ret = Dispatch(ret, 'GetJ1939Signal', None)
		return ret

	def GetMessage(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg):
		'method GetMessage'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((3, 1), (8, 1)),Channel
			, msgName)
		if ret is not None:
			ret = Dispatch(ret, 'GetMessage', None)
		return ret

	def GetSignal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg):
		'method GetSignal'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1)),Channel
			, msgName, signalName)
		if ret is not None:
			ret = Dispatch(ret, 'GetSignal', None)
		return ret

	# The method SetBaudrate is actually a property, but must be used as a method to correctly pass the arguments
	def SetBaudrate(self, Channel=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (5, 1)),Channel
			, arg1)

	_prop_map_get_ = {
		"Active": (14, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Channels": (12, 2, (9, 0), (), "Channels", None),
		"Databases": (11, 2, (9, 0), (), "Databases", None),
		"Generators": (8, 2, (9, 0), (), "Generators", None),
		"InteractiveGenerators": (9, 2, (9, 0), (), "InteractiveGenerators", None),
		"Name": (13, 2, (8, 0), (), "Name", None),
		"Nodes": (7, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReplayCollection": (10, 2, (9, 0), (), "ReplayCollection", None),
	}
	_prop_map_put_ = {
		"Active": ((14, LCID, 4, 0),()),
		"Name": ((13, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBusVB3(DispatchBaseClass):
	'IBusVB3 Interface'
	CLSID = IID('{9BAA357B-E0D9-41B2-986F-AF11768825CA}')
	coclass_clsid = None

	# The method Baudrate is actually a property, but must be used as a method to correctly pass the arguments
	def Baudrate(self, Channel=defaultNamedNotOptArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 1),),Channel
			)

	def GetJ1939Signal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg, srcAddress=defaultNamedNotOptArg
			, dstAddress=defaultNamedNotOptArg):
		'method GetJ1939Signal'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1), (17, 1), (17, 1)),Channel
			, msgName, signalName, srcAddress, dstAddress)
		if ret is not None:
			ret = Dispatch(ret, 'GetJ1939Signal', None)
		return ret

	def GetMessage(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg):
		'method GetMessage'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((3, 1), (8, 1)),Channel
			, msgName)
		if ret is not None:
			ret = Dispatch(ret, 'GetMessage', None)
		return ret

	def GetSignal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg):
		'method GetSignal'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1)),Channel
			, msgName, signalName)
		if ret is not None:
			ret = Dispatch(ret, 'GetSignal', None)
		return ret

	# The method SetBaudrate is actually a property, but must be used as a method to correctly pass the arguments
	def SetBaudrate(self, Channel=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (5, 1)),Channel
			, arg1)

	_prop_map_get_ = {
		"Active": (14, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Channels": (12, 2, (9, 0), (), "Channels", None),
		"Databases": (11, 2, (9, 0), (), "Databases", None),
		"Generators": (8, 2, (9, 0), (), "Generators", None),
		"InteractiveGenerators": (9, 2, (9, 0), (), "InteractiveGenerators", None),
		"Name": (13, 2, (8, 0), (), "Name", None),
		"Nodes": (7, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReplayCollection": (10, 2, (9, 0), (), "ReplayCollection", None),
		"SecurityActive": (16, 2, (11, 0), (), "SecurityActive", None),
		"SecurityProfile": (15, 2, (8, 0), (), "SecurityProfile", None),
	}
	_prop_map_put_ = {
		"Active": ((14, LCID, 4, 0),()),
		"Name": ((13, LCID, 4, 0),()),
		"SecurityActive": ((16, LCID, 4, 0),()),
		"SecurityProfile": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBusVB4(DispatchBaseClass):
	'IBusVB4 Interface'
	CLSID = IID('{4E8960AC-3D6A-436F-9358-A2F2A030B6FE}')
	coclass_clsid = None

	# The method Baudrate is actually a property, but must be used as a method to correctly pass the arguments
	def Baudrate(self, Channel=defaultNamedNotOptArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 1),),Channel
			)

	def GetJ1939Signal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg, srcAddress=defaultNamedNotOptArg
			, dstAddress=defaultNamedNotOptArg):
		'method GetJ1939Signal'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1), (17, 1), (17, 1)),Channel
			, msgName, signalName, srcAddress, dstAddress)
		if ret is not None:
			ret = Dispatch(ret, 'GetJ1939Signal', None)
		return ret

	def GetMessage(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg):
		'method GetMessage'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((3, 1), (8, 1)),Channel
			, msgName)
		if ret is not None:
			ret = Dispatch(ret, 'GetMessage', None)
		return ret

	def GetSignal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg):
		'method GetSignal'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1)),Channel
			, msgName, signalName)
		if ret is not None:
			ret = Dispatch(ret, 'GetSignal', None)
		return ret

	# The method SetBaudrate is actually a property, but must be used as a method to correctly pass the arguments
	def SetBaudrate(self, Channel=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (5, 1)),Channel
			, arg1)

	_prop_map_get_ = {
		"Active": (14, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Channels": (12, 2, (9, 0), (), "Channels", None),
		"Databases": (11, 2, (9, 0), (), "Databases", None),
		"Generators": (8, 2, (9, 0), (), "Generators", None),
		"InteractiveGenerators": (9, 2, (9, 0), (), "InteractiveGenerators", None),
		"Name": (13, 2, (8, 0), (), "Name", None),
		"Nodes": (7, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Ports": (17, 2, (9, 0), (), "Ports", None),
		"ReplayCollection": (10, 2, (9, 0), (), "ReplayCollection", None),
		"SecurityActive": (16, 2, (11, 0), (), "SecurityActive", None),
		"SecurityProfile": (15, 2, (8, 0), (), "SecurityProfile", None),
	}
	_prop_map_put_ = {
		"Active": ((14, LCID, 4, 0),()),
		"Name": ((13, LCID, 4, 0),()),
		"SecurityActive": ((16, LCID, 4, 0),()),
		"SecurityProfile": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBusVB5(DispatchBaseClass):
	'IBusVB5 Interface'
	CLSID = IID('{2F7C3359-835F-4F0F-A2DA-2DF1AB7F81B5}')
	coclass_clsid = IID('{884DBC03-7A76-11D3-8571-00105A3E017B}')

	# The method Baudrate is actually a property, but must be used as a method to correctly pass the arguments
	def Baudrate(self, Channel=defaultNamedNotOptArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 1),),Channel
			)

	def GetJ1939Signal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg, srcAddress=defaultNamedNotOptArg
			, dstAddress=defaultNamedNotOptArg):
		'method GetJ1939Signal'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1), (17, 1), (17, 1)),Channel
			, msgName, signalName, srcAddress, dstAddress)
		if ret is not None:
			ret = Dispatch(ret, 'GetJ1939Signal', None)
		return ret

	def GetMessage(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg):
		'method GetMessage'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((3, 1), (8, 1)),Channel
			, msgName)
		if ret is not None:
			ret = Dispatch(ret, 'GetMessage', None)
		return ret

	def GetSignal(self, Channel=defaultNamedNotOptArg, msgName=defaultNamedNotOptArg, signalName=defaultNamedNotOptArg):
		'method GetSignal'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1)),Channel
			, msgName, signalName)
		if ret is not None:
			ret = Dispatch(ret, 'GetSignal', None)
		return ret

	# The method PortsOfChannel is actually a property, but must be used as a method to correctly pass the arguments
	def PortsOfChannel(self, Channel=defaultNamedNotOptArg):
		'property PortsOfChannel'
		ret = self._oleobj_.InvokeTypes(18, LCID, 2, (9, 0), ((3, 1),),Channel
			)
		if ret is not None:
			ret = Dispatch(ret, 'PortsOfChannel', None)
		return ret

	# The method SetBaudrate is actually a property, but must be used as a method to correctly pass the arguments
	def SetBaudrate(self, Channel=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Baudrate'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (5, 1)),Channel
			, arg1)

	_prop_map_get_ = {
		"Active": (14, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Channels": (12, 2, (9, 0), (), "Channels", None),
		"Databases": (11, 2, (9, 0), (), "Databases", None),
		"Generators": (8, 2, (9, 0), (), "Generators", None),
		"InteractiveGenerators": (9, 2, (9, 0), (), "InteractiveGenerators", None),
		"Name": (13, 2, (8, 0), (), "Name", None),
		"Nodes": (7, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Ports": (17, 2, (9, 0), (), "Ports", None),
		"ReplayCollection": (10, 2, (9, 0), (), "ReplayCollection", None),
		"SecurityActive": (16, 2, (11, 0), (), "SecurityActive", None),
		"SecurityProfile": (15, 2, (8, 0), (), "SecurityProfile", None),
	}
	_prop_map_put_ = {
		"Active": ((14, LCID, 4, 0),()),
		"Name": ((13, LCID, 4, 0),()),
		"SecurityActive": ((16, LCID, 4, 0),()),
		"SecurityProfile": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBuses(DispatchBaseClass):
	'IBuses Interface'
	CLSID = IID('{7BD20670-E36C-4752-928A-8782BE05E89C}')
	coclass_clsid = None

	# Result is of type IBus2
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
		return ret

	# Result is of type IBus2
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBuses2(DispatchBaseClass):
	'IBuses2 Interface'
	CLSID = IID('{13F71310-908A-4E7C-9D03-1C8308909C33}')
	coclass_clsid = IID('{41C470FC-DB1F-4286-9723-A5C39BBBDDAF}')

	# Result is of type IBus2
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
		return ret

	# Result is of type IBus2
	def AddWithType(self, Name=defaultNamedNotOptArg, busTypeParam=defaultNamedNotOptArg):
		'method AddWithType'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (3, 1)),Name
			, busTypeParam)
		if ret is not None:
			ret = Dispatch(ret, 'AddWithType', '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
		return ret

	# Result is of type IBus2
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{F7D40DFF-E021-46E8-9B7D-6659494332A3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICANBusStatistic(DispatchBaseClass):
	'ICANBusStatistic Interface'
	CLSID = IID('{A7566B40-D7E8-11D3-85EE-00105A3E017B}')
	coclass_clsid = IID('{A7566B41-D7E8-11D3-85EE-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusLoad": (0, 2, (3, 0), (), "BusLoad", None),
		"ChipState": (18, 2, (8, 0), (), "ChipState", None),
		"Error": (12, 2, (3, 0), (), "Error", None),
		"ErrorTotal": (13, 2, (3, 0), (), "ErrorTotal", None),
		"Extended": (8, 2, (3, 0), (), "Extended", None),
		"ExtendedRemote": (10, 2, (3, 0), (), "ExtendedRemote", None),
		"ExtendedRemoteTotal": (11, 2, (3, 0), (), "ExtendedRemoteTotal", None),
		"ExtendedTotal": (9, 2, (3, 0), (), "ExtendedTotal", None),
		"Overload": (14, 2, (3, 0), (), "Overload", None),
		"OverloadTotal": (15, 2, (3, 0), (), "OverloadTotal", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"PeakLoad": (3, 2, (3, 0), (), "PeakLoad", None),
		"RxErrorCount": (16, 2, (3, 0), (), "RxErrorCount", None),
		"Standard": (4, 2, (3, 0), (), "Standard", None),
		"StandardRemote": (6, 2, (3, 0), (), "StandardRemote", None),
		"StandardRemoteTotal": (7, 2, (3, 0), (), "StandardRemoteTotal", None),
		"StandardTotal": (5, 2, (3, 0), (), "StandardTotal", None),
		"TxErrorCount": (17, 2, (3, 0), (), "TxErrorCount", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'BusLoad'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "BusLoad", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICANController(DispatchBaseClass):
	'ICANController Interface'
	CLSID = IID('{886978D0-CE60-11D3-85E2-00105A3E017B}')
	coclass_clsid = None

	def SetBTR(self, BTR0=defaultNamedNotOptArg, BTR1=defaultNamedNotOptArg):
		'method SetBTR'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((17, 1), (17, 1)),BTR0
			, BTR1)

	_prop_map_get_ = {
		"Acknowlegde": (7, 2, (11, 0), (), "Acknowlegde", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BTR0": (4, 2, (17, 0), (), "BTR0", None),
		"BTR1": (5, 2, (17, 0), (), "BTR1", None),
		"Baudrate": (3, 2, (5, 0), (), "Baudrate", None),
		"ExtendedBlockAll": (16, 2, (11, 0), (), "ExtendedBlockAll", None),
		"ExtendedCode": (15, 2, (19, 0), (), "ExtendedCode", None),
		"ExtendedMask": (14, 2, (19, 0), (), "ExtendedMask", None),
		"OutputControl": (8, 2, (17, 0), (), "OutputControl", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Samples": (6, 2, (17, 0), (), "Samples", None),
		"StandardBlockAll": (13, 2, (11, 0), (), "StandardBlockAll", None),
		"StandardCode": (12, 2, (18, 0), (), "StandardCode", None),
		"StandardMask": (11, 2, (18, 0), (), "StandardMask", None),
		"StatisticActive": (18, 2, (11, 0), (), "StatisticActive", None),
		"StatisticPeriod": (19, 2, (19, 0), (), "StatisticPeriod", None),
		"Synchronisation": (9, 2, (3, 0), (), "Synchronisation", None),
		"TxRequest": (17, 2, (11, 0), (), "TxRequest", None),
	}
	_prop_map_put_ = {
		"Acknowlegde": ((7, LCID, 4, 0),()),
		"Baudrate": ((3, LCID, 4, 0),()),
		"ExtendedBlockAll": ((16, LCID, 4, 0),()),
		"ExtendedCode": ((15, LCID, 4, 0),()),
		"ExtendedMask": ((14, LCID, 4, 0),()),
		"OutputControl": ((8, LCID, 4, 0),()),
		"Samples": ((6, LCID, 4, 0),()),
		"StandardBlockAll": ((13, LCID, 4, 0),()),
		"StandardCode": ((12, LCID, 4, 0),()),
		"StandardMask": ((11, LCID, 4, 0),()),
		"StatisticActive": ((18, LCID, 4, 0),()),
		"StatisticPeriod": ((19, LCID, 4, 0),()),
		"Synchronisation": ((9, LCID, 4, 0),()),
		"TxRequest": ((17, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICANController2(DispatchBaseClass):
	'ICANController2 Interface'
	CLSID = IID('{D2714009-2320-4F80-A822-FB3D82963BCF}')
	coclass_clsid = None

	def SetBTR(self, BTR0=defaultNamedNotOptArg, BTR1=defaultNamedNotOptArg):
		'method SetBTR'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((17, 1), (17, 1)),BTR0
			, BTR1)

	_prop_map_get_ = {
		"Acknowledge": (20, 2, (11, 0), (), "Acknowledge", None),
		"Acknowlegde": (7, 2, (11, 0), (), "Acknowlegde", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BTR0": (4, 2, (17, 0), (), "BTR0", None),
		"BTR1": (5, 2, (17, 0), (), "BTR1", None),
		"Baudrate": (3, 2, (5, 0), (), "Baudrate", None),
		"ExtendedBlockAll": (16, 2, (11, 0), (), "ExtendedBlockAll", None),
		"ExtendedCode": (15, 2, (19, 0), (), "ExtendedCode", None),
		"ExtendedMask": (14, 2, (19, 0), (), "ExtendedMask", None),
		"OutputControl": (8, 2, (17, 0), (), "OutputControl", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Samples": (6, 2, (17, 0), (), "Samples", None),
		"StandardBlockAll": (13, 2, (11, 0), (), "StandardBlockAll", None),
		"StandardCode": (12, 2, (18, 0), (), "StandardCode", None),
		"StandardMask": (11, 2, (18, 0), (), "StandardMask", None),
		"StatisticActive": (18, 2, (11, 0), (), "StatisticActive", None),
		"StatisticPeriod": (19, 2, (19, 0), (), "StatisticPeriod", None),
		"Synchronisation": (9, 2, (3, 0), (), "Synchronisation", None),
		"TxRequest": (17, 2, (11, 0), (), "TxRequest", None),
	}
	_prop_map_put_ = {
		"Acknowledge": ((20, LCID, 4, 0),()),
		"Acknowlegde": ((7, LCID, 4, 0),()),
		"Baudrate": ((3, LCID, 4, 0),()),
		"ExtendedBlockAll": ((16, LCID, 4, 0),()),
		"ExtendedCode": ((15, LCID, 4, 0),()),
		"ExtendedMask": ((14, LCID, 4, 0),()),
		"OutputControl": ((8, LCID, 4, 0),()),
		"Samples": ((6, LCID, 4, 0),()),
		"StandardBlockAll": ((13, LCID, 4, 0),()),
		"StandardCode": ((12, LCID, 4, 0),()),
		"StandardMask": ((11, LCID, 4, 0),()),
		"StatisticActive": ((18, LCID, 4, 0),()),
		"StatisticPeriod": ((19, LCID, 4, 0),()),
		"Synchronisation": ((9, LCID, 4, 0),()),
		"TxRequest": ((17, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICANController3(DispatchBaseClass):
	'ICANController3 Interface'
	CLSID = IID('{7F07100E-0A04-43F1-AB50-25DD0351109B}')
	coclass_clsid = None

	def CANSetConfig(self, Baudrate=defaultNamedNotOptArg, tseg1=defaultNamedNotOptArg, tseg2=defaultNamedNotOptArg, sjw=defaultNamedNotOptArg
			, sam=defaultNamedNotOptArg, flags=defaultNamedNotOptArg):
		'method CANSetConfig '
		return self._oleobj_.InvokeTypes(23, LCID, 1, (11, 0), ((5, 1), (17, 1), (17, 1), (17, 1), (17, 1), (17, 1)),Baudrate
			, tseg1, tseg2, sjw, sam, flags
			)

	def CANSetFDArbPhaseConfig(self, Baudrate=defaultNamedNotOptArg, tseg1=defaultNamedNotOptArg, tseg2=defaultNamedNotOptArg, sjw=defaultNamedNotOptArg
			, flags=defaultNamedNotOptArg):
		'method CANSetFDArbPhaseConfig '
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), ((5, 1), (17, 1), (17, 1), (17, 1), (17, 1)),Baudrate
			, tseg1, tseg2, sjw, flags)

	def CANSetFDDataPhaseConfig(self, Baudrate=defaultNamedNotOptArg, tseg1=defaultNamedNotOptArg, tseg2=defaultNamedNotOptArg, sjw=defaultNamedNotOptArg
			, flags=defaultNamedNotOptArg):
		'method CANSetFDDataPhaseConfig '
		return self._oleobj_.InvokeTypes(22, LCID, 1, (11, 0), ((5, 1), (17, 1), (17, 1), (17, 1), (17, 1)),Baudrate
			, tseg1, tseg2, sjw, flags)

	def SetBTR(self, BTR0=defaultNamedNotOptArg, BTR1=defaultNamedNotOptArg):
		'method SetBTR'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((17, 1), (17, 1)),BTR0
			, BTR1)

	_prop_map_get_ = {
		"Acknowledge": (20, 2, (11, 0), (), "Acknowledge", None),
		"Acknowlegde": (7, 2, (11, 0), (), "Acknowlegde", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BTR0": (4, 2, (17, 0), (), "BTR0", None),
		"BTR1": (5, 2, (17, 0), (), "BTR1", None),
		"Baudrate": (3, 2, (5, 0), (), "Baudrate", None),
		"ExtendedBlockAll": (16, 2, (11, 0), (), "ExtendedBlockAll", None),
		"ExtendedCode": (15, 2, (19, 0), (), "ExtendedCode", None),
		"ExtendedMask": (14, 2, (19, 0), (), "ExtendedMask", None),
		"OutputControl": (8, 2, (17, 0), (), "OutputControl", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Samples": (6, 2, (17, 0), (), "Samples", None),
		"StandardBlockAll": (13, 2, (11, 0), (), "StandardBlockAll", None),
		"StandardCode": (12, 2, (18, 0), (), "StandardCode", None),
		"StandardMask": (11, 2, (18, 0), (), "StandardMask", None),
		"StatisticActive": (18, 2, (11, 0), (), "StatisticActive", None),
		"StatisticPeriod": (19, 2, (19, 0), (), "StatisticPeriod", None),
		"Synchronisation": (9, 2, (3, 0), (), "Synchronisation", None),
		"TxRequest": (17, 2, (11, 0), (), "TxRequest", None),
	}
	_prop_map_put_ = {
		"Acknowledge": ((20, LCID, 4, 0),()),
		"Acknowlegde": ((7, LCID, 4, 0),()),
		"Baudrate": ((3, LCID, 4, 0),()),
		"ExtendedBlockAll": ((16, LCID, 4, 0),()),
		"ExtendedCode": ((15, LCID, 4, 0),()),
		"ExtendedMask": ((14, LCID, 4, 0),()),
		"OutputControl": ((8, LCID, 4, 0),()),
		"Samples": ((6, LCID, 4, 0),()),
		"StandardBlockAll": ((13, LCID, 4, 0),()),
		"StandardCode": ((12, LCID, 4, 0),()),
		"StandardMask": ((11, LCID, 4, 0),()),
		"StatisticActive": ((18, LCID, 4, 0),()),
		"StatisticPeriod": ((19, LCID, 4, 0),()),
		"Synchronisation": ((9, LCID, 4, 0),()),
		"TxRequest": ((17, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICANController4(DispatchBaseClass):
	'ICANController4 Interface'
	CLSID = IID('{FC1A677B-F176-4B58-A595-28AEBD452CCA}')
	coclass_clsid = IID('{886978D1-CE60-11D3-85E2-00105A3E017B}')

	def CANSetConfig(self, Baudrate=defaultNamedNotOptArg, tseg1=defaultNamedNotOptArg, tseg2=defaultNamedNotOptArg, sjw=defaultNamedNotOptArg
			, sam=defaultNamedNotOptArg, flags=defaultNamedNotOptArg):
		'method CANSetConfig '
		return self._oleobj_.InvokeTypes(23, LCID, 1, (11, 0), ((5, 1), (17, 1), (17, 1), (17, 1), (17, 1), (17, 1)),Baudrate
			, tseg1, tseg2, sjw, sam, flags
			)

	def CANSetFDArbPhaseConfig(self, Baudrate=defaultNamedNotOptArg, tseg1=defaultNamedNotOptArg, tseg2=defaultNamedNotOptArg, sjw=defaultNamedNotOptArg
			, flags=defaultNamedNotOptArg):
		'method CANSetFDArbPhaseConfig '
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), ((5, 1), (17, 1), (17, 1), (17, 1), (17, 1)),Baudrate
			, tseg1, tseg2, sjw, flags)

	def CANSetFDDataPhaseConfig(self, Baudrate=defaultNamedNotOptArg, tseg1=defaultNamedNotOptArg, tseg2=defaultNamedNotOptArg, sjw=defaultNamedNotOptArg
			, flags=defaultNamedNotOptArg):
		'method CANSetFDDataPhaseConfig '
		return self._oleobj_.InvokeTypes(22, LCID, 1, (11, 0), ((5, 1), (17, 1), (17, 1), (17, 1), (17, 1)),Baudrate
			, tseg1, tseg2, sjw, flags)

	def SetBTR(self, BTR0=defaultNamedNotOptArg, BTR1=defaultNamedNotOptArg):
		'method SetBTR'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((17, 1), (17, 1)),BTR0
			, BTR1)

	_prop_map_get_ = {
		"Acknowledge": (20, 2, (11, 0), (), "Acknowledge", None),
		"Acknowlegde": (7, 2, (11, 0), (), "Acknowlegde", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BTR0": (4, 2, (17, 0), (), "BTR0", None),
		"BTR1": (5, 2, (17, 0), (), "BTR1", None),
		"Baudrate": (3, 2, (5, 0), (), "Baudrate", None),
		"ExtendedBlockAll": (16, 2, (11, 0), (), "ExtendedBlockAll", None),
		"ExtendedCode": (15, 2, (19, 0), (), "ExtendedCode", None),
		"ExtendedMask": (14, 2, (19, 0), (), "ExtendedMask", None),
		"OutputControl": (8, 2, (17, 0), (), "OutputControl", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Samples": (6, 2, (17, 0), (), "Samples", None),
		"SelfAckEnabled": (24, 2, (11, 0), (), "SelfAckEnabled", None),
		"StandardBlockAll": (13, 2, (11, 0), (), "StandardBlockAll", None),
		"StandardCode": (12, 2, (18, 0), (), "StandardCode", None),
		"StandardMask": (11, 2, (18, 0), (), "StandardMask", None),
		"StatisticActive": (18, 2, (11, 0), (), "StatisticActive", None),
		"StatisticPeriod": (19, 2, (19, 0), (), "StatisticPeriod", None),
		"Synchronisation": (9, 2, (3, 0), (), "Synchronisation", None),
		"TxRequest": (17, 2, (11, 0), (), "TxRequest", None),
	}
	_prop_map_put_ = {
		"Acknowledge": ((20, LCID, 4, 0),()),
		"Acknowlegde": ((7, LCID, 4, 0),()),
		"Baudrate": ((3, LCID, 4, 0),()),
		"ExtendedBlockAll": ((16, LCID, 4, 0),()),
		"ExtendedCode": ((15, LCID, 4, 0),()),
		"ExtendedMask": ((14, LCID, 4, 0),()),
		"OutputControl": ((8, LCID, 4, 0),()),
		"Samples": ((6, LCID, 4, 0),()),
		"SelfAckEnabled": ((24, LCID, 4, 0),()),
		"StandardBlockAll": ((13, LCID, 4, 0),()),
		"StandardCode": ((12, LCID, 4, 0),()),
		"StandardMask": ((11, LCID, 4, 0),()),
		"StatisticActive": ((18, LCID, 4, 0),()),
		"StatisticPeriod": ((19, LCID, 4, 0),()),
		"Synchronisation": ((9, LCID, 4, 0),()),
		"TxRequest": ((17, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICANoe4Server(DispatchBaseClass):
	'ICANoe4Server Interface'
	CLSID = IID('{CB14D616-FD76-46C7-9F77-48247EF3ED71}')
	coclass_clsid = IID('{A1FDF8F0-4ABF-4FBE-97F2-D05456D3A985}')

	def ExportConfiguration(self, rtcfgPath=defaultNamedNotOptArg, ErrorMessage=pythoncom.Missing):
		'method ExportConfiguration'
		return self._ApplyTypes_(2, 1, (11, 0), ((8, 1), (16392, 2)), 'ExportConfiguration', None,rtcfgPath
			, ErrorMessage)

	_prop_map_get_ = {
		"RTKArchitecture": (1, 2, (3, 0), (), "RTKArchitecture", None),
	}
	_prop_map_put_ = {
		"RTKArchitecture": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICANopen(DispatchBaseClass):
	'ICANopen Interface'
	CLSID = IID('{603B588F-FC85-49BA-A21B-7EDBAFB0E815}')
	coclass_clsid = IID('{C877EFE5-AF23-4D9B-B2A0-347884FDCE8E}')

	_prop_map_get_ = {
		"DcfFilePath": (1, 2, (8, 0), (), "DcfFilePath", None),
		"Enabled": (2, 2, (11, 0), (), "Enabled", None),
		"NodeID": (3, 2, (3, 0), (), "NodeID", None),
	}
	_prop_map_put_ = {
		"DcfFilePath": ((1, LCID, 4, 0),()),
		"Enabled": ((2, LCID, 4, 0),()),
		"NodeID": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICAPL(DispatchBaseClass):
	'ICAPL Interface'
	CLSID = IID('{8CCE6460-54AE-11D3-8554-00105A3E017B}')
	coclass_clsid = None

	def GetFunction(self, Name=defaultNamedNotOptArg):
		'method GetFunction'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFunction', None)
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICAPL2(DispatchBaseClass):
	'ICAPL2 Interface'
	CLSID = IID('{64DB5A30-CA9A-11D3-85DE-00105A3E017B}')
	coclass_clsid = None

	def Compile(self, FullName=defaultNamedNotOptArg):
		'method Compile'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 17),),FullName
			)

	def GetFunction(self, Name=defaultNamedNotOptArg):
		'method GetFunction'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFunction', None)
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICAPL3(DispatchBaseClass):
	'ICAPL3 Interface'
	CLSID = IID('{295FD188-1876-4546-B8C3-6B4A5B6ED2F8}')
	coclass_clsid = None

	def Compile(self, FullName=defaultNamedNotOptArg):
		'method Compile'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 17),),FullName
			)

	def GetFunction(self, Name=defaultNamedNotOptArg):
		'method GetFunction'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFunction', None)
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CompileResult": (5, 2, (9, 0), (), "CompileResult", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICAPL4(DispatchBaseClass):
	'ICAPL4 Interface'
	CLSID = IID('{958225A5-78A4-4698-98AE-5FCCA72BDF9A}')
	coclass_clsid = None

	def Compile(self, FullName=defaultNamedNotOptArg):
		'method Compile'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 17),),FullName
			)

	def GetFunction(self, Name=defaultNamedNotOptArg):
		'method GetFunction'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFunction', None)
		return ret

	def InvokeCaplEnvironmentUpdate(self, pipeSeparatedPaths=defaultNamedNotOptArg):
		'method InvokeCaplEnvironmentUpdate'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((8, 1),),pipeSeparatedPaths
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CompileResult": (5, 2, (9, 0), (), "CompileResult", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICAPL5(DispatchBaseClass):
	'ICAPL5 Interface'
	CLSID = IID('{2AC67D1C-489D-4212-83ED-E7E58D616422}')
	coclass_clsid = IID('{8CCE6461-54AE-11D3-8554-00105A3E017B}')

	def Compile(self, FullName=defaultNamedNotOptArg):
		'method Compile'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 17),),FullName
			)

	def GetFunction(self, Name=defaultNamedNotOptArg):
		'method GetFunction'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFunction', None)
		return ret

	def InvokeCaplEnvironmentUpdate(self, pipeSeparatedPaths=defaultNamedNotOptArg):
		'method InvokeCaplEnvironmentUpdate'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((8, 1),),pipeSeparatedPaths
			)

	def InvokeCaplEnvironmentUpdateEx(self, protocolVersion=defaultNamedNotOptArg, instructions=defaultNamedNotOptArg):
		'method InvokeCaplEnvironmentUpdateEx'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (8, 1)),protocolVersion
			, instructions)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CompileResult": (5, 2, (9, 0), (), "CompileResult", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICAPLFunction(DispatchBaseClass):
	'ICAPLFunction Interface'
	CLSID = IID('{8CCE6464-54AE-11D3-8554-00105A3E017B}')
	coclass_clsid = None

	def Call(self, p1=defaultNamedOptArg, p2=defaultNamedOptArg, p3=defaultNamedOptArg, p4=defaultNamedOptArg
			, p5=defaultNamedOptArg, p6=defaultNamedOptArg, p7=defaultNamedOptArg, p8=defaultNamedOptArg, p9=defaultNamedOptArg
			, p10=defaultNamedOptArg):
		'method Call'
		return self._ApplyTypes_(3, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Call', None,p1
			, p2, p3, p4, p5, p6
			, p7, p8, p9, p10)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICAPLFunction2(DispatchBaseClass):
	'ICAPLFunction2 Interface'
	CLSID = IID('{A8507FAB-33D6-43C5-B9F5-3B74451A4C41}')
	coclass_clsid = IID('{8CCE6465-54AE-11D3-8554-00105A3E017B}')

	def Call(self, p1=defaultNamedOptArg, p2=defaultNamedOptArg, p3=defaultNamedOptArg, p4=defaultNamedOptArg
			, p5=defaultNamedOptArg, p6=defaultNamedOptArg, p7=defaultNamedOptArg, p8=defaultNamedOptArg, p9=defaultNamedOptArg
			, p10=defaultNamedOptArg):
		'method Call'
		return self._ApplyTypes_(3, 1, (12, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)), 'Call', None,p1
			, p2, p3, p4, p5, p6
			, p7, p8, p9, p10)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ParameterCount": (4, 2, (3, 0), (), "ParameterCount", None),
		"ParameterTypes": (5, 2, (12, 0), (), "ParameterTypes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICCPSetup(DispatchBaseClass):
	'ICCPSetup Interface'
	CLSID = IID('{F99938B4-3A2F-4B36-ABE2-31C4962B531F}')
	coclass_clsid = IID('{202F6E75-6E15-4E85-86F5-1E31AEE16B71}')

	_prop_map_get_ = {
		# Method 'ECUs' returns object of type 'IMcECUs1'
		"ECUs": (1, 2, (9, 0), (), "ECUs", '{1B987168-9FA2-460B-BAE5-7194F7CAE469}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICLibraries(DispatchBaseClass):
	'ICLibraries Interface'
	CLSID = IID('{8E192C75-180E-42C1-9AEE-B4576C4A1CF3}')
	coclass_clsid = IID('{2FB74EE4-AFC4-47E8-8BE2-4C0193A82EDA}')

	# Result is of type ICLibrary
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{099E8EAA-5EBB-4296-BF34-9776CE620DAF}')
		return ret

	# Result is of type ICLibrary
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{099E8EAA-5EBB-4296-BF34-9776CE620DAF}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{099E8EAA-5EBB-4296-BF34-9776CE620DAF}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{099E8EAA-5EBB-4296-BF34-9776CE620DAF}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICLibrary(DispatchBaseClass):
	'ICLibrary Interface'
	CLSID = IID('{099E8EAA-5EBB-4296-BF34-9776CE620DAF}')
	coclass_clsid = IID('{B0DC4058-4BB9-4A81-BCAC-79BF2A272598}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (6, 2, (11, 0), (), "Enabled", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"Enabled": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChannel(DispatchBaseClass):
	'IChannel Interface'
	CLSID = IID('{52716DB7-DAE9-4365-8B5B-18B1492F728A}')
	coclass_clsid = IID('{7A5F5AE7-6840-43EF-B44F-CFBC25379BC3}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusType": (3, 2, (3, 0), (), "BusType", None),
		"Controller": (4, 2, (9, 0), (), "Controller", None),
		"Number": (0, 2, (3, 0), (), "Number", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Number'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "Number", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChannelMapping(DispatchBaseClass):
	'IChannelMapping Interface'
	CLSID = IID('{FCE0251F-6728-429B-A26B-511903B7090B}')
	coclass_clsid = IID('{5CE8F12F-09B4-4521-A7DC-558557DD2123}')

	def Get(self, src=defaultNamedNotOptArg):
		'method Get'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((3, 1),),src
			)

	def Put(self, src=defaultNamedNotOptArg, dst=defaultNamedNotOptArg):
		'method Put'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((3, 1), (3, 1)),src
			, dst)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChannelMappingSet(DispatchBaseClass):
	'IChannelMappingSet Interface'
	CLSID = IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')
	coclass_clsid = IID('{B12BE5BC-E26F-48C6-A6ED-554E34D8B615}')

	def ClearMappingTable(self):
		'method ClearMappingTable'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IChannelMappingSet
	def Copy(self):
		'method Copy'
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
		return ret

	def Get(self, busTypeParam=defaultNamedNotOptArg, src=defaultNamedNotOptArg):
		'method Get'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((3, 1), (3, 1)),busTypeParam
			, src)

	def GetByBusName(self, busName=defaultNamedNotOptArg, src=defaultNamedNotOptArg):
		'method GetByBusName'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (3, 0), ((8, 1), (3, 1)),busName
			, src)

	def Put(self, busTypeParam=defaultNamedNotOptArg, src=defaultNamedNotOptArg, dst=defaultNamedNotOptArg):
		'method Put'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),busTypeParam
			, src, dst)

	def PutByBusName(self, busName=defaultNamedNotOptArg, src=defaultNamedNotOptArg, dst=defaultNamedNotOptArg):
		'method PutByBusName'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1)),busName
			, src, dst)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Id": (3, 2, (8, 0), (), "Id", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChannelMappingSets(DispatchBaseClass):
	'IChannelMappingSets Interface'
	CLSID = IID('{32E135DC-1ABC-4D9D-8276-546393F7FCDE}')
	coclass_clsid = IID('{EC8BE2DF-4F01-432C-AAA5-FF6D52C41C71}')

	# Result is of type IChannelMappingSet
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IChannels(DispatchBaseClass):
	'IChannels Interface'
	CLSID = IID('{9E0D95D2-4E76-4639-83AC-18BF4C1F13E8}')
	coclass_clsid = IID('{C539A226-09E6-46B0-B26A-7C5823634D21}')

	# Result is of type IChannel
	def Add(self, busTypeParam=defaultNamedNotOptArg, Number=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (3, 1)),busTypeParam
			, Number)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{52716DB7-DAE9-4365-8B5B-18B1492F728A}')
		return ret

	# Result is of type IChannel
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{52716DB7-DAE9-4365-8B5B-18B1492F728A}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{52716DB7-DAE9-4365-8B5B-18B1492F728A}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{52716DB7-DAE9-4365-8B5B-18B1492F728A}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICommunicationSetup(DispatchBaseClass):
	'ICommunicationSetup Interface'
	CLSID = IID('{2A98FF5A-1C94-49D5-8E9E-7EB0F533E9C3}')
	coclass_clsid = IID('{CD8065CD-59C5-4681-81FD-C39946FAFB8C}')

	# Result is of type IVttSutImportResult
	def ImportVttSut(self, pSutManifestPath=defaultNamedNotOptArg):
		'method ImportVttSut'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1),),pSutManifestPath
			)
		if ret is not None:
			ret = Dispatch(ret, 'ImportVttSut', '{D06241F9-C503-42D5-B148-10E8604F8959}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		# Method 'ApplicationModelSetup' returns object of type 'IApplicationModelSetup'
		"ApplicationModelSetup": (4, 2, (9, 0), (), "ApplicationModelSetup", '{20A1C9AC-399F-4D79-85FC-A8001A66BB53}'),
		# Method 'DataSourceSetup' returns object of type 'IDataSourceSetup'
		"DataSourceSetup": (3, 2, (9, 0), (), "DataSourceSetup", '{BA6A18A8-6371-4134-A5B8-E946BDFFE9F4}'),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICompileResult(DispatchBaseClass):
	'ICompileResult Interface'
	CLSID = IID('{283D0C00-B32E-4EE4-BD03-441F5CDA810F}')
	coclass_clsid = IID('{031CD126-8258-4CD4-8264-CC848B0BFBBD}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ErrorMessage": (6, 2, (8, 0), (), "ErrorMessage", None),
		"NodeName": (4, 2, (8, 0), (), "NodeName", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SourceFile": (5, 2, (8, 0), (), "SourceFile", None),
		"result": (3, 2, (3, 0), (), "result", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration(DispatchBaseClass):
	'IConfiguration Interface'
	CLSID = IID('{48461813-4502-11D3-8539-00105A3E017B}')
	coclass_clsid = None

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration10(DispatchBaseClass):
	'IConfiguration10 Interface'
	CLSID = IID('{3EF16D5F-63A7-4377-A140-BE75C2ADA374}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"StandaloneMode": (25, 2, (9, 0), (), "StandaloneMode", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration11(DispatchBaseClass):
	'IConfiguration11 Interface'
	CLSID = IID('{2D946D66-8742-408F-986D-19FEFFAAC15E}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"StandaloneMode": (25, 2, (9, 0), (), "StandaloneMode", None),
		"TestConfigurations": (26, 2, (9, 0), (), "TestConfigurations", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration12(DispatchBaseClass):
	'IConfiguration12 Interface'
	CLSID = IID('{CCE5EF07-D3D2-4379-B535-EFEEBB760FE7}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"StandaloneMode": (25, 2, (9, 0), (), "StandaloneMode", None),
		"SymbolMappings": (27, 2, (9, 0), (), "SymbolMappings", None),
		"TestConfigurations": (26, 2, (9, 0), (), "TestConfigurations", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration13(DispatchBaseClass):
	'IConfiguration13 Interface'
	CLSID = IID('{AF23782C-059A-4AEE-BA14-F016791F088B}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FDXControl": (28, 2, (9, 0), (), "FDXControl", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"StandaloneMode": (25, 2, (9, 0), (), "StandaloneMode", None),
		"SymbolMappings": (27, 2, (9, 0), (), "SymbolMappings", None),
		"TestConfigurations": (26, 2, (9, 0), (), "TestConfigurations", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration14(DispatchBaseClass):
	'IConfiguration14 Interface'
	CLSID = IID('{87D3AD37-9A86-4348-B1CA-390F54F892F5}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FDXControl": (28, 2, (9, 0), (), "FDXControl", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"StandaloneMode": (25, 2, (9, 0), (), "StandaloneMode", None),
		"StartValueList": (29, 2, (9, 0), (), "StartValueList", None),
		"SymbolMappings": (27, 2, (9, 0), (), "SymbolMappings", None),
		"TestConfigurations": (26, 2, (9, 0), (), "TestConfigurations", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration15(DispatchBaseClass):
	'IConfiguration15 Interface'
	CLSID = IID('{B94CE167-6B2A-4673-9535-B5A51D46F2E6}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FDXControl": (28, 2, (9, 0), (), "FDXControl", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"GlobalTcpIpStackSetting": (30, 2, (9, 0), (), "GlobalTcpIpStackSetting", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"StandaloneMode": (25, 2, (9, 0), (), "StandaloneMode", None),
		"StartValueList": (29, 2, (9, 0), (), "StartValueList", None),
		"SymbolMappings": (27, 2, (9, 0), (), "SymbolMappings", None),
		"TestConfigurations": (26, 2, (9, 0), (), "TestConfigurations", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration16(DispatchBaseClass):
	'IConfiguration16 Interface'
	CLSID = IID('{BA9C4A1F-D0C7-47CD-B1DD-1B264D86D239}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		# Method 'CommunicationSetup' returns object of type 'ICommunicationSetup'
		"CommunicationSetup": (31, 2, (9, 0), (), "CommunicationSetup", '{2A98FF5A-1C94-49D5-8E9E-7EB0F533E9C3}'),
		"FDXControl": (28, 2, (9, 0), (), "FDXControl", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"GlobalTcpIpStackSetting": (30, 2, (9, 0), (), "GlobalTcpIpStackSetting", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"StandaloneMode": (25, 2, (9, 0), (), "StandaloneMode", None),
		"StartValueList": (29, 2, (9, 0), (), "StartValueList", None),
		"SymbolMappings": (27, 2, (9, 0), (), "SymbolMappings", None),
		"TestConfigurations": (26, 2, (9, 0), (), "TestConfigurations", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration17(DispatchBaseClass):
	'IConfiguration17 Interface'
	CLSID = IID('{C48CBD4D-37D9-4600-AF6C-7C6ABF88F2D4}')
	coclass_clsid = IID('{48461814-4502-11D3-8539-00105A3E017B}')

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CANoe4Server": (32, 2, (9, 0), (), "CANoe4Server", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		# Method 'CommunicationSetup' returns object of type 'ICommunicationSetup'
		"CommunicationSetup": (31, 2, (9, 0), (), "CommunicationSetup", '{2A98FF5A-1C94-49D5-8E9E-7EB0F533E9C3}'),
		"FDXControl": (28, 2, (9, 0), (), "FDXControl", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"GlobalTcpIpStackSetting": (30, 2, (9, 0), (), "GlobalTcpIpStackSetting", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"StandaloneMode": (25, 2, (9, 0), (), "StandaloneMode", None),
		"StartValueList": (29, 2, (9, 0), (), "StartValueList", None),
		"SymbolMappings": (27, 2, (9, 0), (), "SymbolMappings", None),
		"TestConfigurations": (26, 2, (9, 0), (), "TestConfigurations", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration2(DispatchBaseClass):
	'IConfiguration2 Interface'
	CLSID = IID('{0DE679A3-1A8D-4A67-89E6-9947D57D08DF}')
	coclass_clsid = None

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration3(DispatchBaseClass):
	'IConfiguration3 Interface'
	CLSID = IID('{047E335F-4753-4AA9-861C-B160C8C83E0F}')
	coclass_clsid = None

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration4(DispatchBaseClass):
	'IConfiguration4 Interface'
	CLSID = IID('{E729DBFC-6311-42E6-BAD4-FCEBBC4A000E}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration5(DispatchBaseClass):
	'IConfiguration5 Interface'
	CLSID = IID('{1CD41A88-CB14-4798-99A3-B6CCCC8D7D0D}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration6(DispatchBaseClass):
	'IConfiguration6 Interface'
	CLSID = IID('{AB129E85-90A2-4E49-B827-5629F2824886}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration7(DispatchBaseClass):
	'IConfiguration7 Interface'
	CLSID = IID('{CA957442-2B22-4D10-817A-4A45C44FC9BE}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration8(DispatchBaseClass):
	'IConfiguration8 Interface'
	CLSID = IID('{0C020520-9AE4-4E40-B8EF-73C3C47F5ED4}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConfiguration9(DispatchBaseClass):
	'IConfiguration9 Interface'
	CLSID = IID('{AEF6F116-845D-4A8D-BD2B-04DF0541B695}')
	coclass_clsid = None

	def CompileAndVerify(self):
		'method CompileAndVerify'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 17), (11, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedNotOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (11, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CLibraries": (23, 2, (9, 0), (), "CLibraries", None),
		"Comment": (2, 2, (8, 0), (), "Comment", None),
		"FDXEnabled": (24, 2, (11, 0), (), "FDXEnabled", None),
		"FDXFiles": (22, 2, (9, 0), (), "FDXFiles", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"GeneralSetup": (9, 2, (9, 0), (), "GeneralSetup", None),
		"Modified": (18, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"OfflineSetup": (11, 2, (9, 0), (), "OfflineSetup", None),
		"OnlineSetup": (10, 2, (9, 0), (), "OnlineSetup", None),
		"OpenConfigurationResult": (20, 2, (9, 0), (), "OpenConfigurationResult", None),
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"SVFiles": (19, 2, (12, 0), (), "SVFiles", None),
		"Saved": (8, 2, (11, 0), (), "Saved", None),
		"SimulationSetup": (12, 2, (9, 0), (), "SimulationSetup", None),
		"TestSetup": (16, 2, (9, 0), (), "TestSetup", None),
		"UserFiles": (21, 2, (9, 0), (), "UserFiles", None),
		"mode": (15, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"FDXEnabled": ((24, LCID, 4, 0),()),
		"Modified": ((18, LCID, 4, 0),()),
		"mode": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataSource(DispatchBaseClass):
	'IDataSource Interface'
	CLSID = IID('{0F3BAE57-2F92-450D-BA54-478F5B372173}')
	coclass_clsid = IID('{FF9081E5-8A96-461A-8A1A-3BEBEED16DA5}')

	def Import(self, pMergeStrategy=0):
		'method Import'
		return self._oleobj_.InvokeTypes(100, LCID, 1, (3, 0), ((3, 49),),pMergeStrategy
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Id": (3, 2, (3, 0), (), "Id", None),
		# Method 'ImportIssues' returns object of type 'IDataSourceIssues'
		"ImportIssues": (106, 2, (9, 0), (), "ImportIssues", '{47E1195E-8EC7-4B43-85D7-DA57BD9F7C7A}'),
		# Method 'ImportParameters' returns object of type 'IDataSourceImportParameters'
		"ImportParameters": (104, 2, (9, 0), (), "ImportParameters", '{8AD94E96-2EA9-470B-911C-9CB3508C2CAD}'),
		"ImportStatus": (101, 2, (3, 0), (), "ImportStatus", None),
		"IsGroupSource": (102, 2, (11, 0), (), "IsGroupSource", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SourceFormat": (103, 2, (3, 0), (), "SourceFormat", None),
		"SourceType": (105, 2, (3, 0), (), "SourceType", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataSourceBase(DispatchBaseClass):
	'IDataSourceBase Interface'
	CLSID = IID('{DF1E559B-B275-4A09-9B96-C15CA68809D4}')
	coclass_clsid = IID('{D4C1E81F-3858-453B-9F4E-E57BDD4D2B0A}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Id": (3, 2, (3, 0), (), "Id", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataSourceFile(DispatchBaseClass):
	'IDataSourceFile Interface'
	CLSID = IID('{800CA71C-6A30-4095-81FC-3051D93501F9}')
	coclass_clsid = IID('{32BF5C41-397A-42B6-82D3-3842E90DD832}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataSourceFiles(DispatchBaseClass):
	'IDataSourceFiles Interface'
	CLSID = IID('{0F9ABA09-6F61-41F2-B64F-C532A7DE7D74}')
	coclass_clsid = IID('{5FEE3F8C-4781-42CF-98B4-FF3CEFEAFEEF}')

	# Result is of type IDataSourceFile
	def Add(self, pSourceFilePath=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),pSourceFilePath
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{800CA71C-6A30-4095-81FC-3051D93501F9}')
		return ret

	# Result is of type IDataSourceFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{800CA71C-6A30-4095-81FC-3051D93501F9}')
		return ret

	def Remove(self, pIndex=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),pIndex
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{800CA71C-6A30-4095-81FC-3051D93501F9}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{800CA71C-6A30-4095-81FC-3051D93501F9}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDataSourceImportParameters(DispatchBaseClass):
	'IDataSourceImportParameters Interface'
	CLSID = IID('{8AD94E96-2EA9-470B-911C-9CB3508C2CAD}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataSourceIssue(DispatchBaseClass):
	'IDataSourceIssue Interface'
	CLSID = IID('{AF1D7F3E-D2D3-4C5F-B905-F021F964B85E}')
	coclass_clsid = IID('{64D565BE-4D4F-421C-9058-5433260703A6}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Description": (3, 2, (8, 0), (), "Description", None),
		# Method 'Emitter' returns object of type 'IDataSource'
		"Emitter": (5, 2, (9, 0), (), "Emitter", '{0F3BAE57-2F92-450D-BA54-478F5B372173}'),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Severity": (4, 2, (3, 0), (), "Severity", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataSourceIssues(DispatchBaseClass):
	'IDataSourceIssues Interface'
	CLSID = IID('{47E1195E-8EC7-4B43-85D7-DA57BD9F7C7A}')
	coclass_clsid = IID('{2A37DADB-03E5-4980-8794-73A935C14DB7}')

	# Result is of type IDataSourceIssue
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{AF1D7F3E-D2D3-4C5F-B905-F021F964B85E}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{AF1D7F3E-D2D3-4C5F-B905-F021F964B85E}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{AF1D7F3E-D2D3-4C5F-B905-F021F964B85E}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDataSourceSetup(DispatchBaseClass):
	'IDataSourceSetup Interface'
	CLSID = IID('{BA6A18A8-6371-4134-A5B8-E946BDFFE9F4}')
	coclass_clsid = IID('{A49B6C3A-0923-4DAE-AD77-459AC1DDEBBA}')

	# Result is of type IDataSource
	def GetDataSourceById(self, pDataSourceId=defaultNamedNotOptArg):
		'method GetDataSourceById'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((3, 1),),pDataSourceId
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDataSourceById', '{0F3BAE57-2F92-450D-BA54-478F5B372173}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		# Method 'DataSources' returns object of type 'IDataSources'
		"DataSources": (3, 2, (9, 0), (), "DataSources", '{68326796-7AF4-450E-983C-5C88DCA473E2}'),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDataSources(DispatchBaseClass):
	'IDataSources Interface'
	CLSID = IID('{68326796-7AF4-450E-983C-5C88DCA473E2}')
	coclass_clsid = IID('{6F30F320-A550-4286-9FBD-AD71D89F68FB}')

	# Result is of type IFileGroupDataSource
	def AddGroupDataSource(self, pName=defaultNamedNotOptArg):
		'method AddGroupDataSource'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1),),pName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddGroupDataSource', '{3A89736B-D87A-4F9D-BE14-7A046908FBE8}')
		return ret

	# Result is of type ISingleFileDataSource
	def AddSingleFileDataSource(self, pSourceFilePath=defaultNamedNotOptArg):
		'method AddSingleFileDataSource'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),pSourceFilePath
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddSingleFileDataSource', '{AAE18347-CE12-47D8-9928-53F639EA65E3}')
		return ret

	# Result is of type IDataSource
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0F3BAE57-2F92-450D-BA54-478F5B372173}')
		return ret

	def Remove(self, pIndex=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((12, 1),),pIndex
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0F3BAE57-2F92-450D-BA54-478F5B372173}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0F3BAE57-2F92-450D-BA54-478F5B372173}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDatabase(DispatchBaseClass):
	'IDatabase Interface'
	CLSID = IID('{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Channel": (5, 2, (3, 0), (), "Channel", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (4, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"Channel": ((5, LCID, 4, 0),()),
		"Name": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDatabase2(DispatchBaseClass):
	'IDatabase2 Interface'
	CLSID = IID('{F053D71F-6F03-4C73-9944-EA0E505736F3}')
	coclass_clsid = IID('{9E2F76F3-D239-11D3-85E6-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Channel": (5, 2, (3, 0), (), "Channel", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"OpenInfoString": (6, 2, (8, 0), (), "OpenInfoString", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (4, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"Channel": ((5, LCID, 4, 0),()),
		"Name": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDatabaseSetup(DispatchBaseClass):
	'IDatabaseSetup Interface'
	CLSID = IID('{9E2F76ED-D239-11D3-85E6-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Databases": (0, 2, (9, 0), (), "Databases", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Databases'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "Databases", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDatabaseSetup2(DispatchBaseClass):
	'IDatabaseSetup2 Interface'
	CLSID = IID('{E79270BF-53D4-4580-B16D-B12F8AD3E863}')
	coclass_clsid = IID('{9E2F76EF-D239-11D3-85E6-00105A3E017B}')

	def GetCODMFiles(self, expectedFormatVersion=defaultNamedNotOptArg, clientIsFileOwner=pythoncom.Missing):
		'method GetCODMFiles'
		return self._ApplyTypes_(4, 1, (8, 0), ((8, 1), (16395, 2)), 'GetCODMFiles', None,expectedFormatVersion
			, clientIsFileOwner)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CODatabaseInfoString": (3, 2, (8, 0), (), "CODatabaseInfoString", None),
		"Databases": (0, 2, (9, 0), (), "Databases", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Databases'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "Databases", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDatabases(DispatchBaseClass):
	'IDatabases Interface'
	CLSID = IID('{9E2F76F0-D239-11D3-85E6-00105A3E017B}')
	coclass_clsid = None

	# Result is of type IDatabase
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type IDatabase
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDatabases2(DispatchBaseClass):
	'IDatabases2 Interface'
	CLSID = IID('{01A28209-9EC7-4F34-B749-7CFCE9A5E6FB}')
	coclass_clsid = None

	# Result is of type IDatabase
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type IDatabase
	def AddNetwork(self, Name=defaultNamedNotOptArg, networkName=defaultNamedNotOptArg):
		'method AddNetwork'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (8, 1)),Name
			, networkName)
		if ret is not None:
			ret = Dispatch(ret, 'AddNetwork', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type IDatabase
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDatabases3(DispatchBaseClass):
	'IDatabases3 Interface'
	CLSID = IID('{882F452B-AE76-4F45-ABA5-D57764E1B742}')
	coclass_clsid = IID('{9E2F76F1-D239-11D3-85E6-00105A3E017B}')

	# Result is of type IDatabase
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type IDatabase
	def AddNetwork(self, Name=defaultNamedNotOptArg, networkName=defaultNamedNotOptArg):
		'method AddNetwork'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (8, 1)),Name
			, networkName)
		if ret is not None:
			ret = Dispatch(ret, 'AddNetwork', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type IDatabase
	def AddToChannel(self, dbFullName=defaultNamedNotOptArg, networkName=defaultNamedNotOptArg, busTypeParam=defaultNamedNotOptArg, ChannelNumber=defaultNamedNotOptArg):
		'method AddToChannel'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),dbFullName
			, networkName, busTypeParam, ChannelNumber)
		if ret is not None:
			ret = Dispatch(ret, 'AddToChannel', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type IDatabase
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9E2F76F2-D239-11D3-85E6-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDevice(DispatchBaseClass):
	'IDevice Interface'
	CLSID = IID('{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ApplicationSocket": (6, 2, (9, 0), (), "ApplicationSocket", None),
		"AudioInterface": (5, 2, (9, 0), (), "AudioInterface", None),
		"Diagnostic": (7, 2, (9, 0), (), "Diagnostic", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NetworkInterface": (4, 2, (9, 0), (), "NetworkInterface", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Name": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDevice2(DispatchBaseClass):
	'IDevice2 Interface'
	CLSID = IID('{4AC62A49-AE4C-4417-BE90-34669360AF23}')
	coclass_clsid = IID('{A4C7D0B0-4FEE-4C9D-89B3-4E9D43B57410}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ApplicationSocket": (6, 2, (9, 0), (), "ApplicationSocket", None),
		"AudioInterface": (5, 2, (9, 0), (), "AudioInterface", None),
		"Diagnostic": (7, 2, (9, 0), (), "Diagnostic", None),
		"Disassembler": (8, 2, (9, 0), (), "Disassembler", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NetworkInterface": (4, 2, (9, 0), (), "NetworkInterface", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Name": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDevices(DispatchBaseClass):
	'IDevices Interface'
	CLSID = IID('{6E19159C-1FFA-431A-9E50-E4ABDCF48E8E}')
	coclass_clsid = IID('{63B261DC-118F-4E71-BF6A-EC7B54B1B95D}')

	# Result is of type IDevice
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}')
		return ret

	# Result is of type IDevice
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDiagDescription(DispatchBaseClass):
	'IDiagDescription Interface'
	CLSID = IID('{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FilePath": (4, 2, (8, 0), (), "FilePath", None),
		"Information": (6, 2, (8, 0), (), "Information", None),
		"Interface": (8, 2, (8, 0), (), "Interface", None),
		"Language": (9, 2, (8, 0), (), "Language", None),
		"ManualCommunicationParameters": (5, 2, (11, 0), (), "ManualCommunicationParameters", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Network": (10, 2, (8, 0), (), "Network", None),
		"Node": (11, 2, (8, 0), (), "Node", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Qualifier": (3, 2, (8, 0), (), "Qualifier", None),
		"Variant": (7, 2, (8, 0), (), "Variant", None),
		"mode": (12, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Interface": ((8, LCID, 4, 0),()),
		"Language": ((9, LCID, 4, 0),()),
		"Variant": ((7, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiagDescription2(DispatchBaseClass):
	'IDiagDescription2 Interface'
	CLSID = IID('{E99F67E5-C326-468E-BDD6-C2EB11695006}')
	coclass_clsid = None

	def SetCommParameter(self, paramName=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetCommParameter'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1), (3, 1)),paramName
			, Value)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FilePath": (4, 2, (8, 0), (), "FilePath", None),
		"Information": (6, 2, (8, 0), (), "Information", None),
		"Interface": (8, 2, (8, 0), (), "Interface", None),
		"Language": (9, 2, (8, 0), (), "Language", None),
		"ManualCommunicationParameters": (5, 2, (11, 0), (), "ManualCommunicationParameters", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Network": (10, 2, (8, 0), (), "Network", None),
		"Node": (11, 2, (8, 0), (), "Node", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Qualifier": (3, 2, (8, 0), (), "Qualifier", None),
		"Variant": (7, 2, (8, 0), (), "Variant", None),
		"mode": (12, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Interface": ((8, LCID, 4, 0),()),
		"Language": ((9, LCID, 4, 0),()),
		"Variant": ((7, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiagDescription3(DispatchBaseClass):
	'IDiagDescription3 Interface'
	CLSID = IID('{8942AFAD-7E6A-4643-82C6-FBFE9DF6E8B2}')
	coclass_clsid = None

	def SetCommParameter(self, paramName=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetCommParameter'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1), (3, 1)),paramName
			, Value)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FilePath": (4, 2, (8, 0), (), "FilePath", None),
		"Information": (6, 2, (8, 0), (), "Information", None),
		"Interface": (8, 2, (8, 0), (), "Interface", None),
		"Language": (9, 2, (8, 0), (), "Language", None),
		"ManualCommunicationParameters": (5, 2, (11, 0), (), "ManualCommunicationParameters", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Network": (10, 2, (8, 0), (), "Network", None),
		"Node": (11, 2, (8, 0), (), "Node", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Qualifier": (3, 2, (8, 0), (), "Qualifier", None),
		"SeednKeyDll": (14, 2, (8, 0), (), "SeednKeyDll", None),
		"Variant": (7, 2, (8, 0), (), "Variant", None),
		"mode": (12, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Interface": ((8, LCID, 4, 0),()),
		"Language": ((9, LCID, 4, 0),()),
		"SeednKeyDll": ((14, LCID, 4, 0),()),
		"Variant": ((7, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiagDescription4(DispatchBaseClass):
	'IDiagDescription4 Interface'
	CLSID = IID('{992386A7-CB76-4875-9B65-DEBADC98DEF2}')
	coclass_clsid = None

	def ReplaceDescriptionFile(self, newName=defaultNamedNotOptArg):
		'method ReplaceDescriptionFile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((8, 1),),newName
			)

	def SetCommParameter(self, paramName=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetCommParameter'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1), (3, 1)),paramName
			, Value)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FilePath": (4, 2, (8, 0), (), "FilePath", None),
		"Information": (6, 2, (8, 0), (), "Information", None),
		"Interface": (8, 2, (8, 0), (), "Interface", None),
		"Language": (9, 2, (8, 0), (), "Language", None),
		"ManualCommunicationParameters": (5, 2, (11, 0), (), "ManualCommunicationParameters", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Network": (10, 2, (8, 0), (), "Network", None),
		"Node": (11, 2, (8, 0), (), "Node", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Qualifier": (3, 2, (8, 0), (), "Qualifier", None),
		"SeednKeyDll": (14, 2, (8, 0), (), "SeednKeyDll", None),
		"Variant": (7, 2, (8, 0), (), "Variant", None),
		"mode": (12, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Interface": ((8, LCID, 4, 0),()),
		"Language": ((9, LCID, 4, 0),()),
		"SeednKeyDll": ((14, LCID, 4, 0),()),
		"Variant": ((7, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiagDescription5(DispatchBaseClass):
	'IDiagDescription5 Interface'
	CLSID = IID('{B33D021E-DF9F-491D-8E98-48B3461E71B3}')
	coclass_clsid = None

	def ReplaceDescriptionFile(self, newName=defaultNamedNotOptArg):
		'method ReplaceDescriptionFile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((8, 1),),newName
			)

	def SetCommParameter(self, paramName=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetCommParameter'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1), (3, 1)),paramName
			, Value)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DiagVariants": (17, 2, (9, 0), (), "DiagVariants", None),
		"FilePath": (4, 2, (8, 0), (), "FilePath", None),
		"Information": (6, 2, (8, 0), (), "Information", None),
		"Interface": (8, 2, (8, 0), (), "Interface", None),
		"Language": (9, 2, (8, 0), (), "Language", None),
		"ManualCommunicationParameters": (5, 2, (11, 0), (), "ManualCommunicationParameters", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Network": (10, 2, (8, 0), (), "Network", None),
		"Node": (11, 2, (8, 0), (), "Node", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Port": (16, 2, (8, 0), (), "Port", None),
		"Qualifier": (3, 2, (8, 0), (), "Qualifier", None),
		"SeednKeyDll": (14, 2, (8, 0), (), "SeednKeyDll", None),
		"Variant": (7, 2, (8, 0), (), "Variant", None),
		"mode": (12, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Interface": ((8, LCID, 4, 0),()),
		"Language": ((9, LCID, 4, 0),()),
		"Port": ((16, LCID, 4, 0),()),
		"SeednKeyDll": ((14, LCID, 4, 0),()),
		"Variant": ((7, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiagDescription6(DispatchBaseClass):
	'IDiagDescription6 Interface'
	CLSID = IID('{8B5D3D37-8158-4E98-99CB-168043AAEF49}')
	coclass_clsid = IID('{0ECA866E-61D3-4874-9FFE-D6BD9AEC7E02}')

	def CloseWindows(self, windows=255):
		'method CloseWindows'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((3, 49),),windows
			)

	def OpenWindows(self, windows=255):
		'method OpenWindows'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 49),),windows
			)

	def ReplaceDescriptionFile(self, newName=defaultNamedNotOptArg):
		'method ReplaceDescriptionFile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((8, 1),),newName
			)

	def SetCommParameter(self, paramName=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetCommParameter'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1), (3, 1)),paramName
			, Value)

	_prop_map_get_ = {
		"AdditionalDescriptions": (18, 2, (9, 0), (), "AdditionalDescriptions", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DiagVariants": (17, 2, (9, 0), (), "DiagVariants", None),
		"FilePath": (4, 2, (8, 0), (), "FilePath", None),
		"Information": (6, 2, (8, 0), (), "Information", None),
		"Interface": (8, 2, (8, 0), (), "Interface", None),
		"InterpretationOrder": (19, 2, (9, 0), (), "InterpretationOrder", None),
		"Language": (9, 2, (8, 0), (), "Language", None),
		"ManualCommunicationParameters": (5, 2, (11, 0), (), "ManualCommunicationParameters", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Network": (10, 2, (8, 0), (), "Network", None),
		"Node": (11, 2, (8, 0), (), "Node", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Port": (16, 2, (8, 0), (), "Port", None),
		"Qualifier": (3, 2, (8, 0), (), "Qualifier", None),
		"SeednKeyDll": (14, 2, (8, 0), (), "SeednKeyDll", None),
		"Variant": (7, 2, (8, 0), (), "Variant", None),
		"mode": (12, 2, (3, 0), (), "mode", None),
	}
	_prop_map_put_ = {
		"Interface": ((8, LCID, 4, 0),()),
		"Language": ((9, LCID, 4, 0),()),
		"Port": ((16, LCID, 4, 0),()),
		"SeednKeyDll": ((14, LCID, 4, 0),()),
		"Variant": ((7, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiagDescriptions(DispatchBaseClass):
	'IDiagDescriptions Interface'
	CLSID = IID('{4BDE2B63-9C03-4434-AB9D-2A09FF7B6F80}')
	coclass_clsid = None

	# Result is of type IDiagDescription
	def Add(self, Network=defaultNamedNotOptArg, FilePath=defaultNamedNotOptArg, ecuIdentifier=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (8, 1), (8, 17)),Network
			, FilePath, ecuIdentifier)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
		return ret

	# Result is of type IDiagDescription
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDiagDescriptions2(DispatchBaseClass):
	'IDiagDescriptions2 Interface'
	CLSID = IID('{BC600EF4-0210-4D7C-9CC5-FB44EE09C294}')
	coclass_clsid = IID('{9CED63DB-D1C2-4CAB-8718-CE238D10E91C}')

	# Result is of type IDiagDescription
	def Add(self, Network=defaultNamedNotOptArg, FilePath=defaultNamedNotOptArg, ecuIdentifier=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (8, 1), (8, 17)),Network
			, FilePath, ecuIdentifier)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
		return ret

	# Result is of type IDiagDescription
	def AddDiagAccess(self, accessType=defaultNamedNotOptArg, FilePath=defaultNamedNotOptArg, ecuIdentifier=defaultNamedNotOptArg):
		'method AddDiagAccess'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 17)),accessType
			, FilePath, ecuIdentifier)
		if ret is not None:
			ret = Dispatch(ret, 'AddDiagAccess', '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
		return ret

	# Result is of type IDiagDescription
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDiagVariant(DispatchBaseClass):
	'IDiagVariant Interface'
	CLSID = IID('{0F8B4279-132B-4AD1-88DF-96837286F5D0}')
	coclass_clsid = IID('{0549FFD8-44EB-4AF0-90C3-4E72AF6F273D}')

	_prop_map_get_ = {
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Qualifier": (2, 2, (8, 0), (), "Qualifier", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiagVariants(DispatchBaseClass):
	'IDiagVariants Interface'
	CLSID = IID('{A6D6D5B8-B94A-4E5C-9627-8A379EFCADB2}')
	coclass_clsid = IID('{9ED438B7-D055-4B03-ADF2-C1771A374AA0}')

	# Result is of type IDiagVariant
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0F8B4279-132B-4AD1-88DF-96837286F5D0}')
		return ret

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0F8B4279-132B-4AD1-88DF-96837286F5D0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0F8B4279-132B-4AD1-88DF-96837286F5D0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDiagnosticsSetup(DispatchBaseClass):
	'IDiagnosticsSetup Interface'
	CLSID = IID('{F245E20D-53FA-4C82-A849-1EB2F92450D6}')
	coclass_clsid = IID('{E913F4F9-D757-4625-9E9A-BD5A649B77EC}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DiagDescriptions": (3, 2, (9, 0), (), "DiagDescriptions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDisassembler(DispatchBaseClass):
	'IDisassembler Interface'
	CLSID = IID('{A4426049-F697-4710-8AB7-A2061D7A4829}')
	coclass_clsid = IID('{B122211A-DCA8-4A70-8198-C9193549409C}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEncoding(DispatchBaseClass):
	'IEncoding Interface'
	CLSID = IID('{F87D41F0-7A2C-4212-9A3C-3436AF7B4A08}')
	coclass_clsid = IID('{33276274-0E5C-4C7A-A134-B681E81BE6C6}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"LowerBound": (4, 2, (12, 0), (), "LowerBound", None),
		"Offset": (8, 2, (12, 0), (), "Offset", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Text": (6, 2, (8, 0), (), "Text", None),
		"Unit": (9, 2, (8, 0), (), "Unit", None),
		"UpperBound": (5, 2, (12, 0), (), "UpperBound", None),
		"factor": (7, 2, (12, 0), (), "factor", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEncodings(DispatchBaseClass):
	'IEncodings Interface'
	CLSID = IID('{5CD2AC60-98D6-45C7-8872-B3E77F3D433A}')
	coclass_clsid = IID('{E4664608-17D8-4DA1-9038-2A0A42B8FC74}')

	# Result is of type IEncoding
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{F87D41F0-7A2C-4212-9A3C-3436AF7B4A08}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{F87D41F0-7A2C-4212-9A3C-3436AF7B4A08}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{F87D41F0-7A2C-4212-9A3C-3436AF7B4A08}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IEnvironment(DispatchBaseClass):
	'IEnvironment Interface'
	CLSID = IID('{8CCE6462-54AE-11D3-8554-00105A3E017B}')
	coclass_clsid = None

	def CreateGroup(self):
		'method CreateGroup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CreateGroup', None)
		return ret

	def GetVariable(self, Name=defaultNamedNotOptArg):
		'method GetVariable'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetVariable', None)
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEnvironment2(DispatchBaseClass):
	'IEnvironment2 Interface'
	CLSID = IID('{62C53880-8F88-11D4-86C5-00105A3E017B}')
	coclass_clsid = None

	def CreateGroup(self):
		'method CreateGroup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CreateGroup', None)
		return ret

	def CreateInfo(self):
		'method CreateInfo'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CreateInfo', None)
		return ret

	def GetVariable(self, Name=defaultNamedNotOptArg):
		'method GetVariable'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetVariable', None)
		return ret

	def SetVariables(self, pArray=defaultNamedNotOptArg):
		'method SetVariables'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((12, 1),),pArray
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEnvironment3(DispatchBaseClass):
	'IEnvironment3 Interface'
	CLSID = IID('{6A1F8425-4994-4966-AC12-00EAB8B8F0B1}')
	coclass_clsid = IID('{8CCE6463-54AE-11D3-8554-00105A3E017B}')

	def CreateGroup(self):
		'method CreateGroup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CreateGroup', None)
		return ret

	def CreateInfo(self):
		'method CreateInfo'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CreateInfo', None)
		return ret

	def GetVariable(self, Name=defaultNamedNotOptArg):
		'method GetVariable'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetVariable', None)
		return ret

	def GetVariables(self, array=defaultNamedNotOptArg):
		'method GetVariables'
		return self._ApplyTypes_(7, 1, (12, 0), ((12, 1),), 'GetVariables', None,array
			)

	def SetVariables(self, pArray=defaultNamedNotOptArg):
		'method SetVariables'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((12, 1),),pArray
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEnvironmentArray(DispatchBaseClass):
	'IEnvironmentArray Interface'
	CLSID = IID('{4C9FD952-7671-11D3-856E-00105A3E017B}')
	coclass_clsid = IID('{4C9FD953-7671-11D3-856E-00105A3E017B}')

	# Result is of type IEnvironmentVariable
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, n=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),n
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{4793A120-7008-11D3-8566-00105A3E017B}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, n=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),n
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{4793A120-7008-11D3-8566-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{4793A120-7008-11D3-8566-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IEnvironmentGroup(DispatchBaseClass):
	'IEnvironmentGroup Interface'
	CLSID = IID('{4C9FD950-7671-11D3-856E-00105A3E017B}')
	coclass_clsid = IID('{4C9FD951-7671-11D3-856E-00105A3E017B}')

	def Add(self, pVariable=defaultNamedNotOptArg):
		'method Add'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((9, 1),),pVariable
			)

	def GetValues(self):
		'method GetValues'
		return self._ApplyTypes_(6, 1, (12, 0), (), 'GetValues', None,)

	def Remove(self, pVariable=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((9, 1),),pVariable
			)

	def SetValues(self, array=defaultNamedNotOptArg):
		'method SetValues'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),array
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'array' returns object of type 'IEnvironmentArray'
		"array": (0, 2, (9, 0), (), "array", '{4C9FD952-7671-11D3-856E-00105A3E017B}'),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'array'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "array", '{4C9FD952-7671-11D3-856E-00105A3E017B}'))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEnvironmentInfo(DispatchBaseClass):
	'IEnvironmentInfo Interface'
	CLSID = IID('{28978A10-8FA3-11D4-86C5-00105A3E017B}')
	coclass_clsid = IID('{28978A11-8FA3-11D4-86C5-00105A3E017B}')

	def GetInfo(self):
		'method GetInfo'
		return self._ApplyTypes_(6, 1, (12, 0), (), 'GetInfo', None,)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Nodes": (3, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Read": (4, 2, (11, 0), (), "Read", None),
		"Write": (5, 2, (11, 0), (), "Write", None),
	}
	_prop_map_put_ = {
		"Read": ((4, LCID, 4, 0),()),
		"Write": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEnvironmentVariable(DispatchBaseClass):
	'IEnvironmentVariable Interface'
	CLSID = IID('{4793A120-7008-11D3-8566-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Handle": (3, 2, (19, 0), (), "Handle", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Type": (4, 2, (19, 0), (), "Type", None),
		"Value": (0, 2, (12, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"Handle": ((3, LCID, 4, 0),()),
		"Value": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEnvironmentVariable2(DispatchBaseClass):
	'IEnvironmentVariable2 Interface'
	CLSID = IID('{0D44F5D2-9B74-11D4-86D0-00105A3E017B}')
	coclass_clsid = IID('{4793A121-7008-11D3-8566-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Handle": (3, 2, (19, 0), (), "Handle", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Type": (4, 2, (19, 0), (), "Type", None),
		"Value": (0, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"Handle": ((3, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"Value": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporter(DispatchBaseClass):
	'IExporter Interface'
	CLSID = IID('{86501547-EE2A-4C9B-AB8D-DBE8DFC4898B}')
	coclass_clsid = None

	def Load(self):
		'method Load'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def Save(self, noPromptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((11, 17),),noPromptUser
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Destinations": (3, 2, (9, 0), (), "Destinations", None),
		"Filter": (4, 2, (9, 0), (), "Filter", None),
		"Messages": (7, 2, (9, 0), (), "Messages", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Settings": (5, 2, (9, 0), (), "Settings", None),
		"Signals": (6, 2, (9, 0), (), "Signals", None),
		"Sources": (0, 2, (9, 0), (), "Sources", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Sources'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "Sources", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporter2(DispatchBaseClass):
	'IExporter2 Interface'
	CLSID = IID('{A5674E7A-6E30-4212-9EB8-F18F737BE098}')
	coclass_clsid = None

	def Load(self):
		'method Load'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def Save(self, noPromptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((11, 17),),noPromptUser
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Destinations": (3, 2, (9, 0), (), "Destinations", None),
		"Filter": (4, 2, (9, 0), (), "Filter", None),
		"Messages": (7, 2, (9, 0), (), "Messages", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Settings": (5, 2, (9, 0), (), "Settings", None),
		"Signals": (6, 2, (9, 0), (), "Signals", None),
		"Sources": (0, 2, (9, 0), (), "Sources", None),
		"TimeSection": (10, 2, (9, 0), (), "TimeSection", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Sources'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "Sources", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporter3(DispatchBaseClass):
	'IExporter3 Interface'
	CLSID = IID('{A2847431-D884-4466-9D53-7647F44E8928}')
	coclass_clsid = IID('{43E268FF-FE9E-404E-BB8D-918059BE3E25}')

	def Load(self):
		'method Load'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def Save(self, noPromptUser=defaultNamedNotOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((11, 17),),noPromptUser
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Destinations": (3, 2, (9, 0), (), "Destinations", None),
		"Filter": (4, 2, (9, 0), (), "Filter", None),
		"Messages": (7, 2, (9, 0), (), "Messages", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Settings": (5, 2, (9, 0), (), "Settings", None),
		"Signals": (6, 2, (9, 0), (), "Signals", None),
		"Sources": (0, 2, (9, 0), (), "Sources", None),
		"Symbols": (11, 2, (9, 0), (), "Symbols", None),
		"TimeSection": (10, 2, (9, 0), (), "TimeSection", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Sources'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "Sources", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterASCIISettings(DispatchBaseClass):
	'IExporterASCIISettings Interface'
	CLSID = IID('{2B637549-F35E-4677-83D6-A33662590A7C}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"LogTimeStampAccuracy": (3, 2, (3, 0), (), "LogTimeStampAccuracy", None),
		"NumberBase": (4, 2, (3, 0), (), "NumberBase", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Representation": (6, 2, (3, 0), (), "Representation", None),
		"TimeFormat": (5, 2, (3, 0), (), "TimeFormat", None),
	}
	_prop_map_put_ = {
		"LogTimeStampAccuracy": ((3, LCID, 4, 0),()),
		"NumberBase": ((4, LCID, 4, 0),()),
		"Representation": ((6, LCID, 4, 0),()),
		"TimeFormat": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterASCIISettings2(DispatchBaseClass):
	'IExporterASCIISettings2 Interface'
	CLSID = IID('{BC646559-E963-4803-8747-59BCE4982B57}')
	coclass_clsid = IID('{C8DDE103-2060-43B2-8CC6-8AA9F8CF7027}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"LogTimeStampAccuracy": (3, 2, (3, 0), (), "LogTimeStampAccuracy", None),
		"NumberBase": (4, 2, (3, 0), (), "NumberBase", None),
		"NumericDecimalPlaces": (7, 2, (3, 0), (), "NumericDecimalPlaces", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Representation": (6, 2, (3, 0), (), "Representation", None),
		"TimeFormat": (5, 2, (3, 0), (), "TimeFormat", None),
	}
	_prop_map_put_ = {
		"LogTimeStampAccuracy": ((3, LCID, 4, 0),()),
		"NumberBase": ((4, LCID, 4, 0),()),
		"NumericDecimalPlaces": ((7, LCID, 4, 0),()),
		"Representation": ((6, LCID, 4, 0),()),
		"TimeFormat": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterCsvSettings(DispatchBaseClass):
	'IExporterCsvSettings Interface'
	CLSID = IID('{74510D3B-CB8F-4C26-A273-A72E7EF4313F}')
	coclass_clsid = IID('{9BAEDEA1-533F-41FE-8AEE-1C8EE43357B0}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DecimalPlaces": (5, 2, (3, 0), (), "DecimalPlaces", None),
		"DecimalSymbol": (4, 2, (8, 0), (), "DecimalSymbol", None),
		"Layout": (0, 2, (3, 0), (), "Layout", None),
		"ListDelimiter": (3, 2, (8, 0), (), "ListDelimiter", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"TimestampInSeconds": (6, 2, (11, 0), (), "TimestampInSeconds", None),
	}
	_prop_map_put_ = {
		"DecimalPlaces": ((5, LCID, 4, 0),()),
		"DecimalSymbol": ((4, LCID, 4, 0),()),
		"Layout": ((0, LCID, 4, 0),()),
		"ListDelimiter": ((3, LCID, 4, 0),()),
		"TimestampInSeconds": ((6, LCID, 4, 0),()),
	}
	# Default property for this class is 'Layout'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "Layout", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterCsvSettingsExt(DispatchBaseClass):
	'IExporterCsvSettingsExt Interface'
	CLSID = IID('{6146220C-F1E5-4FF0-BDBA-C136078723D2}')
	coclass_clsid = IID('{13755E82-7617-4C0F-91C6-4197C334FB24}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ColumnSeparator": (3, 2, (8, 0), (), "ColumnSeparator", None),
		"DecimalPlacesForSignalValue": (6, 2, (3, 0), (), "DecimalPlacesForSignalValue", None),
		"DecimalPlacesForTimeChannel": (5, 2, (3, 0), (), "DecimalPlacesForTimeChannel", None),
		"DecimalSymbol": (4, 2, (8, 0), (), "DecimalSymbol", None),
		"ExportGlobalHeader": (7, 2, (11, 0), (), "ExportGlobalHeader", None),
		"ExportMode": (9, 2, (3, 0), (), "ExportMode", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"QuoteTextCells": (8, 2, (11, 0), (), "QuoteTextCells", None),
		"ResamplingTimeBase": (10, 2, (5, 0), (), "ResamplingTimeBase", None),
		"TimeStampMode": (11, 2, (3, 0), (), "TimeStampMode", None),
	}
	_prop_map_put_ = {
		"ColumnSeparator": ((3, LCID, 4, 0),()),
		"DecimalPlacesForSignalValue": ((6, LCID, 4, 0),()),
		"DecimalPlacesForTimeChannel": ((5, LCID, 4, 0),()),
		"DecimalSymbol": ((4, LCID, 4, 0),()),
		"ExportGlobalHeader": ((7, LCID, 4, 0),()),
		"ExportMode": ((9, LCID, 4, 0),()),
		"QuoteTextCells": ((8, LCID, 4, 0),()),
		"ResamplingTimeBase": ((10, LCID, 4, 0),()),
		"TimeStampMode": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterDiademSettings(DispatchBaseClass):
	'IExporterDiademSettings Interface'
	CLSID = IID('{DA95146C-34A4-4981-AE69-5DF7B0E31F5C}')
	coclass_clsid = IID('{B9AB63A2-B46C-465F-B27A-CCF64DA7D4AC}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Resampling": (3, 2, (3, 0), (), "Resampling", None),
		"TimeBase": (4, 2, (5, 0), (), "TimeBase", None),
	}
	_prop_map_put_ = {
		"Resampling": ((3, LCID, 4, 0),()),
		"TimeBase": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterMatlabSettings(DispatchBaseClass):
	'IExporterMatlabSettings Interface'
	CLSID = IID('{A4CFCA98-EA99-452D-8AAE-9F6CFC1A1DDC}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"LimitNameLength": (3, 2, (11, 0), (), "LimitNameLength", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"LimitNameLength": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterMatlabSettings2(DispatchBaseClass):
	'IExporterMatlabSettings2 Interface'
	CLSID = IID('{F5B22B9D-7014-4ADF-A5D7-ED68D44709D8}')
	coclass_clsid = IID('{47FA0D24-EBF5-41C2-ADF2-7C2BC47DED97}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ExportMode": (6, 2, (3, 0), (), "ExportMode", None),
		"LimitNameLength": (3, 2, (11, 0), (), "LimitNameLength", None),
		"NameLength": (4, 2, (3, 0), (), "NameLength", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ResamplingTimeBase": (7, 2, (5, 0), (), "ResamplingTimeBase", None),
		"TimeStampMode": (8, 2, (3, 0), (), "TimeStampMode", None),
		"Version": (5, 2, (3, 0), (), "Version", None),
	}
	_prop_map_put_ = {
		"ExportMode": ((6, LCID, 4, 0),()),
		"LimitNameLength": ((3, LCID, 4, 0),()),
		"NameLength": ((4, LCID, 4, 0),()),
		"ResamplingTimeBase": ((7, LCID, 4, 0),()),
		"TimeStampMode": ((8, LCID, 4, 0),()),
		"Version": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterMdfSettings(DispatchBaseClass):
	'IExporterMdfSettings Interface'
	CLSID = IID('{F1FEFF5E-2220-480A-87F9-A1409F8AEF2C}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SaveAsVersion2": (3, 2, (11, 0), (), "SaveAsVersion2", None),
	}
	_prop_map_put_ = {
		"SaveAsVersion2": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterMdfSettings2(DispatchBaseClass):
	'IExporterMdfSettings2 Interface'
	CLSID = IID('{B0FAF0B3-CD17-47FC-A4FC-31D23DD6A846}')
	coclass_clsid = IID('{B5D35582-40D9-499B-95FC-D34C838F3ED5}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"MDFVersion": (4, 2, (3, 0), (), "MDFVersion", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SaveAsVersion2": (3, 2, (11, 0), (), "SaveAsVersion2", None),
	}
	_prop_map_put_ = {
		"MDFVersion": ((4, LCID, 4, 0),()),
		"SaveAsVersion2": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterSettings(DispatchBaseClass):
	'IExporterSettings Interface'
	CLSID = IID('{C93A1EA9-65EC-4AB4-A387-1114C76D8728}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CSV": (8, 2, (9, 0), (), "CSV", None),
		"Diadem": (9, 2, (9, 0), (), "Diadem", None),
		"MDF": (7, 2, (9, 0), (), "MDF", None),
		"Matlab": (6, 2, (9, 0), (), "Matlab", None),
		"NameDelimiter": (5, 2, (8, 0), (), "NameDelimiter", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SignalFormat": (3, 2, (3, 0), (), "SignalFormat", None),
		"VariableFormat": (4, 2, (3, 0), (), "VariableFormat", None),
	}
	_prop_map_put_ = {
		"NameDelimiter": ((5, LCID, 4, 0),()),
		"SignalFormat": ((3, LCID, 4, 0),()),
		"VariableFormat": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterSettings2(DispatchBaseClass):
	'IExporterSettings2 Interface'
	CLSID = IID('{6B557B6C-56D5-4878-AB4B-119F776FF018}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CSV": (8, 2, (9, 0), (), "CSV", None),
		"Diadem": (9, 2, (9, 0), (), "Diadem", None),
		"MDF": (7, 2, (9, 0), (), "MDF", None),
		"Matlab": (6, 2, (9, 0), (), "Matlab", None),
		"NameDelimiter": (5, 2, (8, 0), (), "NameDelimiter", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SaveInvalidJ1939Values": (10, 2, (11, 0), (), "SaveInvalidJ1939Values", None),
		"SignalFormat": (3, 2, (3, 0), (), "SignalFormat", None),
		"VariableFormat": (4, 2, (3, 0), (), "VariableFormat", None),
	}
	_prop_map_put_ = {
		"NameDelimiter": ((5, LCID, 4, 0),()),
		"SaveInvalidJ1939Values": ((10, LCID, 4, 0),()),
		"SignalFormat": ((3, LCID, 4, 0),()),
		"VariableFormat": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterSettings3(DispatchBaseClass):
	'IExporterSettings3 Interface'
	CLSID = IID('{1466533F-5817-4FE2-9C75-F967B3D38FED}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ASCII": (11, 2, (9, 0), (), "ASCII", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CSV": (8, 2, (9, 0), (), "CSV", None),
		"Diadem": (9, 2, (9, 0), (), "Diadem", None),
		"MDF": (7, 2, (9, 0), (), "MDF", None),
		"Matlab": (6, 2, (9, 0), (), "Matlab", None),
		"NameDelimiter": (5, 2, (8, 0), (), "NameDelimiter", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SaveInvalidJ1939Values": (10, 2, (11, 0), (), "SaveInvalidJ1939Values", None),
		"SignalFormat": (3, 2, (3, 0), (), "SignalFormat", None),
		"VariableFormat": (4, 2, (3, 0), (), "VariableFormat", None),
		"XML": (12, 2, (9, 0), (), "XML", None),
	}
	_prop_map_put_ = {
		"NameDelimiter": ((5, LCID, 4, 0),()),
		"SaveInvalidJ1939Values": ((10, LCID, 4, 0),()),
		"SignalFormat": ((3, LCID, 4, 0),()),
		"VariableFormat": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterSettings4(DispatchBaseClass):
	'IExporterSettings4 Interface'
	CLSID = IID('{E0B8E1E0-2194-4399-BE92-DCAFCA15ED00}')
	coclass_clsid = IID('{764E7139-AB99-4646-B853-F9F88E514B7B}')

	_prop_map_get_ = {
		"ASCII": (11, 2, (9, 0), (), "ASCII", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CSV": (8, 2, (9, 0), (), "CSV", None),
		"CSVExt": (13, 2, (9, 0), (), "CSVExt", None),
		"Diadem": (9, 2, (9, 0), (), "Diadem", None),
		"MDF": (7, 2, (9, 0), (), "MDF", None),
		"Matlab": (6, 2, (9, 0), (), "Matlab", None),
		"NameDelimiter": (5, 2, (8, 0), (), "NameDelimiter", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SaveInvalidJ1939Values": (10, 2, (11, 0), (), "SaveInvalidJ1939Values", None),
		"SignalFormat": (3, 2, (3, 0), (), "SignalFormat", None),
		"VariableFormat": (4, 2, (3, 0), (), "VariableFormat", None),
		"WriteSignalValuesRaw": (14, 2, (11, 0), (), "WriteSignalValuesRaw", None),
		"WriteSignalValuesSymbolic": (15, 2, (11, 0), (), "WriteSignalValuesSymbolic", None),
		"XML": (12, 2, (9, 0), (), "XML", None),
	}
	_prop_map_put_ = {
		"NameDelimiter": ((5, LCID, 4, 0),()),
		"SaveInvalidJ1939Values": ((10, LCID, 4, 0),()),
		"SignalFormat": ((3, LCID, 4, 0),()),
		"VariableFormat": ((4, LCID, 4, 0),()),
		"WriteSignalValuesRaw": ((14, LCID, 4, 0),()),
		"WriteSignalValuesSymbolic": ((15, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterSymbol(DispatchBaseClass):
	'IExporterSymbol Interface'
	CLSID = IID('{807B7C59-949C-42C1-AB88-D0E72E4DA54C}')
	coclass_clsid = IID('{29F3568E-2799-4174-8A4E-88C7EC90A65C}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExporterSymbols(DispatchBaseClass):
	'IExporterSymbols Interface'
	CLSID = IID('{E7EA5FC7-7172-4D40-83B5-E17A72202735}')
	coclass_clsid = IID('{0A9BF106-1A84-4980-85E9-A1112CBBB6C7}')

	# Result is of type IExporterSymbol
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{807B7C59-949C-42C1-AB88-D0E72E4DA54C}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{807B7C59-949C-42C1-AB88-D0E72E4DA54C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{807B7C59-949C-42C1-AB88-D0E72E4DA54C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IExporterXMLSettings(DispatchBaseClass):
	'IExporterXMLSettings Interface'
	CLSID = IID('{9F20E5A7-BD30-49F6-B863-FAF08A6725FD}')
	coclass_clsid = IID('{943F8293-B2CA-4B7E-B219-466F7482DFCB}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ColumnsLayout": (6, 2, (3, 0), (), "ColumnsLayout", None),
		"ExecuteXSLTConversion": (3, 2, (11, 0), (), "ExecuteXSLTConversion", None),
		"OpenXSLTConversionResult": (4, 2, (11, 0), (), "OpenXSLTConversionResult", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"XSLTStyleSheetPath": (5, 2, (8, 0), (), "XSLTStyleSheetPath", None),
	}
	_prop_map_put_ = {
		"ColumnsLayout": ((6, LCID, 4, 0),()),
		"ExecuteXSLTConversion": ((3, LCID, 4, 0),()),
		"OpenXSLTConversionResult": ((4, LCID, 4, 0),()),
		"XSLTStyleSheetPath": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFDXControl(DispatchBaseClass):
	'IFDXControl Interface'
	CLSID = IID('{8ED3F7CC-8617-43F7-BC5F-4B8B81FE301B}')
	coclass_clsid = IID('{BBFE8AE2-AB1A-4306-8B94-49B4DA8ADF9C}')

	def WriteEditorConfig(self):
		'method WriteEditorConfig'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(3, LCID, 1, (8, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFDXFile(DispatchBaseClass):
	'IFDXFile Interface'
	CLSID = IID('{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}')
	coclass_clsid = IID('{E6D06532-D722-42FC-AC35-3FBE5859B63E}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (6, 2, (11, 0), (), "Enabled", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"Enabled": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFDXFiles(DispatchBaseClass):
	'IFDXFiles Interface'
	CLSID = IID('{F593A749-643D-4E0B-9053-E4499F966E6B}')
	coclass_clsid = IID('{D1746F51-D04A-4BA3-A677-9C21992F5238}')

	# Result is of type IFDXFile
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}')
		return ret

	# Result is of type IFDXFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFileGroupDataSource(DispatchBaseClass):
	'IFileGroupDataSource Interface'
	CLSID = IID('{3A89736B-D87A-4F9D-BE14-7A046908FBE8}')
	coclass_clsid = IID('{F492F7DA-6D46-49FD-8254-1C0633791B34}')

	def Import(self, pMergeStrategy=0):
		'method Import'
		return self._oleobj_.InvokeTypes(100, LCID, 1, (3, 0), ((3, 49),),pMergeStrategy
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Id": (3, 2, (3, 0), (), "Id", None),
		# Method 'ImportIssues' returns object of type 'IDataSourceIssues'
		"ImportIssues": (106, 2, (9, 0), (), "ImportIssues", '{47E1195E-8EC7-4B43-85D7-DA57BD9F7C7A}'),
		# Method 'ImportParameters' returns object of type 'IDataSourceImportParameters'
		"ImportParameters": (104, 2, (9, 0), (), "ImportParameters", '{8AD94E96-2EA9-470B-911C-9CB3508C2CAD}'),
		"ImportStatus": (101, 2, (3, 0), (), "ImportStatus", None),
		"IsGroupSource": (102, 2, (11, 0), (), "IsGroupSource", None),
		"Name": (200, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'SourceFiles' returns object of type 'IDataSourceFiles'
		"SourceFiles": (201, 2, (9, 0), (), "SourceFiles", '{0F9ABA09-6F61-41F2-B64F-C532A7DE7D74}'),
		"SourceFormat": (103, 2, (3, 0), (), "SourceFormat", None),
		"SourceType": (105, 2, (3, 0), (), "SourceType", None),
	}
	_prop_map_put_ = {
		"Name": ((200, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFiles(DispatchBaseClass):
	'IFiles Interface'
	CLSID = IID('{B24DAF2F-B12B-4B19-BD8D-307685D86F5B}')
	coclass_clsid = IID('{9901B40E-02EF-415D-9B00-CBBEA95B24C4}')

	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(4, LCID, 1, (8, 0), ((8, 1),),Name
			)

	def Clear(self):
		'method Clear'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((12, 1),),index
			)

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((12, 1),),index
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFilter(DispatchBaseClass):
	'IFilter Interface'
	CLSID = IID('{AE48C308-8B52-4652-8DA9-3EAF8DF5DF90}')
	coclass_clsid = IID('{DF4AFDA4-21D0-48B7-BB47-A430AEB2CC00}')

	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(4, LCID, 1, (8, 0), ((8, 1),),Name
			)

	def Clear(self):
		'method Clear'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((12, 1),),index
			)

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Enabled": (7, 2, (11, 0), (), "Enabled", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Enabled": ((7, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((12, 1),),index
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IGeneralSetup(DispatchBaseClass):
	'IGeneralSetup Interface'
	CLSID = IID('{48461816-4502-11D3-8539-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGeneralSetup2(DispatchBaseClass):
	'IGeneralSetup2 Interface'
	CLSID = IID('{2FCA3560-CDA6-11D3-85E1-00105A3E017B}')
	coclass_clsid = None

	# The method ControllerSetup is actually a property, but must be used as a method to correctly pass the arguments
	def ControllerSetup(self, busTypeParam=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'property ControllerSetup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1), (19, 1)),busTypeParam
			, Channel)
		if ret is not None:
			ret = Dispatch(ret, 'ControllerSetup', None)
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DatabaseSetup": (5, 2, (9, 0), (), "DatabaseSetup", None),
		"PanelSetup": (3, 2, (9, 0), (), "PanelSetup", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGeneralSetup3(DispatchBaseClass):
	'IGeneralSetup3 Interface'
	CLSID = IID('{631B6EF2-9569-4CEB-B4CA-9F904931746E}')
	coclass_clsid = None

	# The method Channels is actually a property, but must be used as a method to correctly pass the arguments
	def Channels(self, busTypeParam=defaultNamedNotOptArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (3, 0), ((3, 1),),busTypeParam
			)

	# The method ControllerSetup is actually a property, but must be used as a method to correctly pass the arguments
	def ControllerSetup(self, busTypeParam=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'property ControllerSetup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1), (19, 1)),busTypeParam
			, Channel)
		if ret is not None:
			ret = Dispatch(ret, 'ControllerSetup', None)
		return ret

	# The method SetChannels is actually a property, but must be used as a method to correctly pass the arguments
	def SetChannels(self, busTypeParam=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (3, 1)),busTypeParam
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DatabaseSetup": (5, 2, (9, 0), (), "DatabaseSetup", None),
		"PanelSetup": (3, 2, (9, 0), (), "PanelSetup", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGeneralSetup4(DispatchBaseClass):
	'IGeneralSetup4 Interface'
	CLSID = IID('{307C84DA-3D82-4B89-8463-07002865E321}')
	coclass_clsid = None

	# The method Channels is actually a property, but must be used as a method to correctly pass the arguments
	def Channels(self, busTypeParam=defaultNamedNotOptArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (3, 0), ((3, 1),),busTypeParam
			)

	# The method ControllerSetup is actually a property, but must be used as a method to correctly pass the arguments
	def ControllerSetup(self, busTypeParam=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'property ControllerSetup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1), (19, 1)),busTypeParam
			, Channel)
		if ret is not None:
			ret = Dispatch(ret, 'ControllerSetup', None)
		return ret

	# The method SetChannels is actually a property, but must be used as a method to correctly pass the arguments
	def SetChannels(self, busTypeParam=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (3, 1)),busTypeParam
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DatabaseSetup": (5, 2, (9, 0), (), "DatabaseSetup", None),
		"MacroSetup": (7, 2, (9, 0), (), "MacroSetup", None),
		"PanelSetup": (3, 2, (9, 0), (), "PanelSetup", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGeneralSetup5(DispatchBaseClass):
	'IGeneralSetup5 Interface'
	CLSID = IID('{0A3615F3-7CBE-46DB-A7B4-B856D64FCE8C}')
	coclass_clsid = None

	# The method Channels is actually a property, but must be used as a method to correctly pass the arguments
	def Channels(self, busTypeParam=defaultNamedNotOptArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (3, 0), ((3, 1),),busTypeParam
			)

	# The method ControllerSetup is actually a property, but must be used as a method to correctly pass the arguments
	def ControllerSetup(self, busTypeParam=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'property ControllerSetup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1), (19, 1)),busTypeParam
			, Channel)
		if ret is not None:
			ret = Dispatch(ret, 'ControllerSetup', None)
		return ret

	# The method SetChannels is actually a property, but must be used as a method to correctly pass the arguments
	def SetChannels(self, busTypeParam=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (3, 1)),busTypeParam
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DatabaseSetup": (5, 2, (9, 0), (), "DatabaseSetup", None),
		"DiagnosticsSetup": (8, 2, (9, 0), (), "DiagnosticsSetup", None),
		"MacroSetup": (7, 2, (9, 0), (), "MacroSetup", None),
		"PanelSetup": (3, 2, (9, 0), (), "PanelSetup", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGeneralSetup6(DispatchBaseClass):
	'IGeneralSetup6 Interface'
	CLSID = IID('{9EE233E3-9DA7-4275-909D-CCC7864FA836}')
	coclass_clsid = None

	# The method Channels is actually a property, but must be used as a method to correctly pass the arguments
	def Channels(self, busTypeParam=defaultNamedNotOptArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (3, 0), ((3, 1),),busTypeParam
			)

	# The method ControllerSetup is actually a property, but must be used as a method to correctly pass the arguments
	def ControllerSetup(self, busTypeParam=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'property ControllerSetup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1), (19, 1)),busTypeParam
			, Channel)
		if ret is not None:
			ret = Dispatch(ret, 'ControllerSetup', None)
		return ret

	# The method SetChannels is actually a property, but must be used as a method to correctly pass the arguments
	def SetChannels(self, busTypeParam=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (3, 1)),busTypeParam
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CCPSetup": (10, 2, (9, 0), (), "CCPSetup", None),
		"DatabaseSetup": (5, 2, (9, 0), (), "DatabaseSetup", None),
		"DiagnosticsSetup": (8, 2, (9, 0), (), "DiagnosticsSetup", None),
		"MacroSetup": (7, 2, (9, 0), (), "MacroSetup", None),
		"PanelSetup": (3, 2, (9, 0), (), "PanelSetup", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"XCPSetup": (9, 2, (9, 0), (), "XCPSetup", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGeneralSetup7(DispatchBaseClass):
	'IGeneralSetup7 Interface'
	CLSID = IID('{C736DD92-342C-43A3-B7F0-C5DA139D0E69}')
	coclass_clsid = IID('{48461817-4502-11D3-8539-00105A3E017B}')

	# The method Channels is actually a property, but must be used as a method to correctly pass the arguments
	def Channels(self, busTypeParam=defaultNamedNotOptArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (3, 0), ((3, 1),),busTypeParam
			)

	# The method ControllerSetup is actually a property, but must be used as a method to correctly pass the arguments
	def ControllerSetup(self, busTypeParam=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'property ControllerSetup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1), (19, 1)),busTypeParam
			, Channel)
		if ret is not None:
			ret = Dispatch(ret, 'ControllerSetup', None)
		return ret

	# The method SetChannels is actually a property, but must be used as a method to correctly pass the arguments
	def SetChannels(self, busTypeParam=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property Channels'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (3, 1)),busTypeParam
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CCPSetup": (10, 2, (9, 0), (), "CCPSetup", None),
		"DatabaseSetup": (5, 2, (9, 0), (), "DatabaseSetup", None),
		"DiagnosticsSetup": (8, 2, (9, 0), (), "DiagnosticsSetup", None),
		"MacroSetup": (7, 2, (9, 0), (), "MacroSetup", None),
		"PanelSetup": (3, 2, (9, 0), (), "PanelSetup", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SnippetSetup": (11, 2, (9, 0), (), "SnippetSetup", None),
		"XCPSetup": (9, 2, (9, 0), (), "XCPSetup", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGenerator(DispatchBaseClass):
	'IGenerator Interface'
	CLSID = IID('{563ED100-7544-11D5-87D4-00105A3E017B}')
	coclass_clsid = IID('{563ED101-7544-11D5-87D4-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IGenerators(DispatchBaseClass):
	'IGenerators Interface'
	CLSID = IID('{75718C11-7540-11D5-87D4-00105A3E017B}')
	coclass_clsid = IID('{75718C12-7540-11D5-87D4-00105A3E017B}')

	# Result is of type IGenerator
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{563ED100-7544-11D5-87D4-00105A3E017B}')
		return ret

	# Result is of type IGenerator
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{563ED100-7544-11D5-87D4-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{563ED100-7544-11D5-87D4-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{563ED100-7544-11D5-87D4-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IIUTInitializationSettings(DispatchBaseClass):
	'IIUTInitializationSettings Interface'
	CLSID = IID('{C889E7FD-B60A-4EDB-85DA-89B3102425E5}')
	coclass_clsid = IID('{3B32AC37-53A3-449F-9617-7A0746706627}')

	_prop_map_get_ = {
		"BusIdleWaitTime": (2, 2, (3, 0), (), "BusIdleWaitTime", None),
		"IUTInitTime": (4, 2, (3, 0), (), "IUTInitTime", None),
		"MaxCurrentConsumptionSleep": (6, 2, (3, 0), (), "MaxCurrentConsumptionSleep", None),
		"MinCurrentConsumptionAwake": (7, 2, (3, 0), (), "MinCurrentConsumptionAwake", None),
		"PowerOffTime": (3, 2, (3, 0), (), "PowerOffTime", None),
		"ResetType": (1, 2, (3, 0), (), "ResetType", None),
		"SupplyVoltage": (5, 2, (3, 0), (), "SupplyVoltage", None),
		"UseAutomaticSleepDetection": (8, 2, (11, 0), (), "UseAutomaticSleepDetection", None),
	}
	_prop_map_put_ = {
		"BusIdleWaitTime": ((2, LCID, 4, 0),()),
		"IUTInitTime": ((4, LCID, 4, 0),()),
		"MaxCurrentConsumptionSleep": ((6, LCID, 4, 0),()),
		"MinCurrentConsumptionAwake": ((7, LCID, 4, 0),()),
		"PowerOffTime": ((3, LCID, 4, 0),()),
		"ResetType": ((1, LCID, 4, 0),()),
		"SupplyVoltage": ((5, LCID, 4, 0),()),
		"UseAutomaticSleepDetection": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIUTSettings(DispatchBaseClass):
	'IIUTSettings Interface'
	CLSID = IID('{86F18849-87B2-4DB2-8CF4-D4838C784E8A}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DeviceClass": (5, 2, (3, 0), (), "DeviceClass", None),
		"InitialNAD": (6, 2, (3, 0), (), "InitialNAD", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SendsWakeupSignal": (4, 2, (11, 0), (), "SendsWakeupSignal", None),
		"SupportsInterbyteSpace": (3, 2, (11, 0), (), "SupportsInterbyteSpace", None),
		"VariantID": (7, 2, (3, 0), (), "VariantID", None),
	}
	_prop_map_put_ = {
		"DeviceClass": ((5, LCID, 4, 0),()),
		"InitialNAD": ((6, LCID, 4, 0),()),
		"SendsWakeupSignal": ((4, LCID, 4, 0),()),
		"SupportsInterbyteSpace": ((3, LCID, 4, 0),()),
		"VariantID": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIUTSettings2(DispatchBaseClass):
	'IIUTSettings Interface'
	CLSID = IID('{A040F2ED-8FA7-4C0F-961C-1DA7D3362CB9}')
	coclass_clsid = IID('{5E7E7181-6279-408F-A0DE-F8D2DB93187D}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DeviceClass": (5, 2, (3, 0), (), "DeviceClass", None),
		"FunctionID": (12, 2, (3, 0), (), "FunctionID", None),
		"InitialNAD": (6, 2, (3, 0), (), "InitialNAD", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReconfigureBeforeEachTestCase": (10, 2, (11, 0), (), "ReconfigureBeforeEachTestCase", None),
		"SendsWakeupSignal": (4, 2, (11, 0), (), "SendsWakeupSignal", None),
		"SupplierID": (11, 2, (3, 0), (), "SupplierID", None),
		"SupportsAssignNAD": (8, 2, (3, 0), (), "SupportsAssignNAD", None),
		"SupportsConditionalChangeNAD": (9, 2, (3, 0), (), "SupportsConditionalChangeNAD", None),
		"SupportsInterbyteSpace": (3, 2, (11, 0), (), "SupportsInterbyteSpace", None),
		"VariantID": (7, 2, (3, 0), (), "VariantID", None),
	}
	_prop_map_put_ = {
		"DeviceClass": ((5, LCID, 4, 0),()),
		"FunctionID": ((12, LCID, 4, 0),()),
		"InitialNAD": ((6, LCID, 4, 0),()),
		"ReconfigureBeforeEachTestCase": ((10, LCID, 4, 0),()),
		"SendsWakeupSignal": ((4, LCID, 4, 0),()),
		"SupplierID": ((11, LCID, 4, 0),()),
		"SupportsAssignNAD": ((8, LCID, 4, 0),()),
		"SupportsConditionalChangeNAD": ((9, LCID, 4, 0),()),
		"SupportsInterbyteSpace": ((3, LCID, 4, 0),()),
		"VariantID": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInteractiveGenerator(DispatchBaseClass):
	'IInteractiveGenerator Interface'
	CLSID = IID('{563ED102-7544-11D5-87D4-00105A3E017B}')
	coclass_clsid = IID('{563ED103-7544-11D5-87D4-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInteractiveGenerators(DispatchBaseClass):
	'IInteractiveGenerators Interface'
	CLSID = IID('{75718C13-7540-11D5-87D4-00105A3E017B}')
	coclass_clsid = IID('{75718C14-7540-11D5-87D4-00105A3E017B}')

	# Result is of type IInteractiveGenerator
	def Add(self, igType=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (8, 1)),igType
			, Name)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{563ED102-7544-11D5-87D4-00105A3E017B}')
		return ret

	# Result is of type IInteractiveGenerator
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{563ED102-7544-11D5-87D4-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{563ED102-7544-11D5-87D4-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{563ED102-7544-11D5-87D4-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IInterpretationOrder(DispatchBaseClass):
	'IInterpretationOrder'
	CLSID = IID('{BF67872C-7B26-4505-B1FF-CBDC26F6E011}')
	coclass_clsid = IID('{73285601-F71A-4F73-B086-DC317658B740}')

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Move(self, fromIndex=defaultNamedNotOptArg, toIndex=defaultNamedNotOptArg):
		'method Move'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((3, 1), (3, 1)),fromIndex
			, toIndex)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IIpNetworkAddress(DispatchBaseClass):
	'IIpNetworkAddress Interface'
	CLSID = IID('{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}')
	coclass_clsid = IID('{5CBFC6F5-3BFE-4DAC-B54F-62DFA410464C}')

	_prop_map_get_ = {
		"Address": (4, 2, (8, 0), (), "Address", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Prefix": (3, 2, (19, 0), (), "Prefix", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIpNetworkAddressList(DispatchBaseClass):
	'IIpNetworkAddressList Interface'
	CLSID = IID('{A19229D7-CD25-4877-8C52-7691E1EECA8F}')
	coclass_clsid = IID('{861C0BCA-45BC-4A0F-9257-F128A93790BF}')

	# Result is of type IIpNetworkAddress
	def Add(self, Address=defaultNamedNotOptArg, Prefix=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (19, 1)),Address
			, Prefix)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}')
		return ret

	# Result is of type IIpNetworkAddress
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IIpSetting(DispatchBaseClass):
	'IIpSetting Interface'
	CLSID = IID('{D898B690-6B35-40D2-9968-3B97DA3CB932}')
	coclass_clsid = IID('{E995CBE7-526C-464D-83F7-F72F8D08B8B1}')

	_prop_map_get_ = {
		"Addresses": (3, 2, (9, 0), (), "Addresses", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ConfigMethod": (4, 2, (3, 0), (), "ConfigMethod", None),
		"Enabled": (5, 2, (11, 0), (), "Enabled", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"ConfigMethod": ((4, LCID, 4, 0),()),
		"Enabled": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILinProtocolVersion(DispatchBaseClass):
	'ILinProtocolVersion Interface'
	CLSID = IID('{B7DF9A0C-BF22-442C-B378-21CDDEF5A11B}')
	coclass_clsid = IID('{63AE269A-DC8F-4655-B6B8-080ED17AE91A}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"MajorVersion": (3, 2, (3, 0), (), "MajorVersion", None),
		"MinorVersion": (4, 2, (3, 0), (), "MinorVersion", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"VersionString": (5, 2, (8, 0), (), "VersionString", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILinSlaveConformanceTester(DispatchBaseClass):
	'IConformanceTester Interface'
	CLSID = IID('{7665020C-4F6E-459C-8C1E-58E792EA825D}')
	coclass_clsid = None

	def GenerateTestCases(self):
		'method GenerateTestCases'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def Reload(self):
		'method Reload'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), (),)

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ChannelNumber": (33, 2, (3, 0), (), "ChannelNumber", None),
		"DebugMode": (29, 2, (3, 0), (), "DebugMode", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"ExecuteRepeatedly": (22, 2, (11, 0), (), "ExecuteRepeatedly", None),
		"ExecutionMode": (23, 2, (3, 0), (), "ExecutionMode", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"IUTInitializationSettings": (36, 2, (9, 0), (), "IUTInitializationSettings", None),
		"IUTSettings": (35, 2, (9, 0), (), "IUTSettings", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"NumberOfExecutions": (24, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"PausingMode": (30, 2, (3, 0), (), "PausingMode", None),
		"RandomizeEachCycle": (27, 2, (11, 0), (), "RandomizeEachCycle", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SlaveNodeName": (32, 2, (8, 0), (), "SlaveNodeName", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"TestCasesExecutedInRandomOrder": (26, 2, (11, 0), (), "TestCasesExecutedInRandomOrder", None),
		"TestVariant": (19, 2, (8, 0), (), "TestVariant", None),
		"TesterSettings": (34, 2, (9, 0), (), "TesterSettings", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
		"VerdictImpact": (28, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((29, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"ExecuteRepeatedly": ((22, LCID, 4, 0),()),
		"ExecutionMode": ((23, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"NumberOfExecutions": ((24, LCID, 4, 0),()),
		"PausingMode": ((30, LCID, 4, 0),()),
		"RandomizeEachCycle": ((27, LCID, 4, 0),()),
		"SlaveNodeName": ((32, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
		"TestCasesExecutedInRandomOrder": ((26, LCID, 4, 0),()),
		"TestVariant": ((19, LCID, 4, 0),()),
		"VerdictImpact": ((28, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILinSlaveConformanceTester2(DispatchBaseClass):
	'IConformanceTester Interface'
	CLSID = IID('{D8CBC484-7179-4C23-ADF4-99AB03A8C89C}')
	coclass_clsid = None

	def GenerateTestCases(self):
		'method GenerateTestCases'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def Reload(self):
		'method Reload'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), (),)

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ChannelNumber": (33, 2, (3, 0), (), "ChannelNumber", None),
		"DebugMode": (29, 2, (3, 0), (), "DebugMode", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"ExecuteRepeatedly": (22, 2, (11, 0), (), "ExecuteRepeatedly", None),
		"ExecutionMode": (23, 2, (3, 0), (), "ExecutionMode", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"IUTInitializationSettings": (36, 2, (9, 0), (), "IUTInitializationSettings", None),
		"IUTSettings": (35, 2, (9, 0), (), "IUTSettings", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"NodeCapabilityFile": (37, 2, (8, 0), (), "NodeCapabilityFile", None),
		"NodeCapabilitySource": (38, 2, (3, 0), (), "NodeCapabilitySource", None),
		"NumberOfExecutions": (24, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"PausingMode": (30, 2, (3, 0), (), "PausingMode", None),
		"RandomizeEachCycle": (27, 2, (11, 0), (), "RandomizeEachCycle", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SlaveNodeName": (32, 2, (8, 0), (), "SlaveNodeName", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"TestCasesExecutedInRandomOrder": (26, 2, (11, 0), (), "TestCasesExecutedInRandomOrder", None),
		"TestVariant": (19, 2, (8, 0), (), "TestVariant", None),
		"TesterSettings": (34, 2, (9, 0), (), "TesterSettings", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
		"VerdictImpact": (28, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((29, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"ExecuteRepeatedly": ((22, LCID, 4, 0),()),
		"ExecutionMode": ((23, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"NodeCapabilityFile": ((37, LCID, 4, 0),()),
		"NodeCapabilitySource": ((38, LCID, 4, 0),()),
		"NumberOfExecutions": ((24, LCID, 4, 0),()),
		"PausingMode": ((30, LCID, 4, 0),()),
		"RandomizeEachCycle": ((27, LCID, 4, 0),()),
		"SlaveNodeName": ((32, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
		"TestCasesExecutedInRandomOrder": ((26, LCID, 4, 0),()),
		"TestVariant": ((19, LCID, 4, 0),()),
		"VerdictImpact": ((28, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILinSlaveConformanceTester3(DispatchBaseClass):
	'IConformanceTester Interface'
	CLSID = IID('{BD53021B-F3EC-4B1B-950D-B7687DCBFB56}')
	coclass_clsid = IID('{7F029E34-1167-49E7-8859-193BDD1900C5}')

	def GenerateTestCases(self):
		'method GenerateTestCases'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def Reload(self):
		'method Reload'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), (),)

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ChannelNumber": (33, 2, (3, 0), (), "ChannelNumber", None),
		"DebugMode": (29, 2, (3, 0), (), "DebugMode", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"ExecuteRepeatedly": (22, 2, (11, 0), (), "ExecuteRepeatedly", None),
		"ExecutionMode": (23, 2, (3, 0), (), "ExecutionMode", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"IUTInitializationSettings": (36, 2, (9, 0), (), "IUTInitializationSettings", None),
		"IUTSettings": (35, 2, (9, 0), (), "IUTSettings", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"NodeCapabilityFile": (37, 2, (8, 0), (), "NodeCapabilityFile", None),
		"NodeCapabilitySource": (38, 2, (3, 0), (), "NodeCapabilitySource", None),
		"NumberOfExecutions": (24, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"PausingMode": (30, 2, (3, 0), (), "PausingMode", None),
		"RandomizeEachCycle": (27, 2, (11, 0), (), "RandomizeEachCycle", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SlaveNodeName": (32, 2, (8, 0), (), "SlaveNodeName", None),
		"SlaveNodeProtocolVersion": (39, 2, (9, 0), (), "SlaveNodeProtocolVersion", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"TestCasesExecutedInRandomOrder": (26, 2, (11, 0), (), "TestCasesExecutedInRandomOrder", None),
		"TestVariant": (19, 2, (8, 0), (), "TestVariant", None),
		"TesterSettings": (34, 2, (9, 0), (), "TesterSettings", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
		"VerdictImpact": (28, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((29, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"ExecuteRepeatedly": ((22, LCID, 4, 0),()),
		"ExecutionMode": ((23, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"NodeCapabilityFile": ((37, LCID, 4, 0),()),
		"NodeCapabilitySource": ((38, LCID, 4, 0),()),
		"NumberOfExecutions": ((24, LCID, 4, 0),()),
		"PausingMode": ((30, LCID, 4, 0),()),
		"RandomizeEachCycle": ((27, LCID, 4, 0),()),
		"SlaveNodeName": ((32, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
		"TestCasesExecutedInRandomOrder": ((26, LCID, 4, 0),()),
		"TestVariant": ((19, LCID, 4, 0),()),
		"VerdictImpact": ((28, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILinSlaveConformanceTesters(DispatchBaseClass):
	'ILinSlaveConformanceTesters Interface'
	CLSID = IID('{02BCC0B6-446D-4ED1-9EBE-038B1557290F}')
	coclass_clsid = IID('{15AA4325-FF94-4B36-A9A1-B872D1BF22C2}')

	# Result is of type ILinSlaveConformanceTester
	def Add(self):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{7665020C-4F6E-459C-8C1E-58E792EA825D}')
		return ret

	# Result is of type ILinSlaveConformanceTester
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{7665020C-4F6E-459C-8C1E-58E792EA825D}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg, promptUser=defaultNamedOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1), (12, 17)),index
			, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{7665020C-4F6E-459C-8C1E-58E792EA825D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{7665020C-4F6E-459C-8C1E-58E792EA825D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILogging(DispatchBaseClass):
	'ILogging Interface'
	CLSID = IID('{FD859B9B-4E28-11D3-854C-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Trigger": (4, 2, (9, 0), (), "Trigger", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILogging2(DispatchBaseClass):
	'ILogging2 Interface'
	CLSID = IID('{3BC4EED0-D25F-11D3-85E6-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (5, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"Trigger": (4, 2, (9, 0), (), "Trigger", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILogging3(DispatchBaseClass):
	'ILogging3 Interface'
	CLSID = IID('{BD603B4E-CCEF-4AF8-A39B-B263EE8D381D}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Exporter": (7, 2, (9, 0), (), "Exporter", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (5, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"Trigger": (4, 2, (9, 0), (), "Trigger", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILogging4(DispatchBaseClass):
	'ILogging4 Interface'
	CLSID = IID('{600B69E4-B501-474A-ABB6-81F0FAE3E3F4}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Exporter": (7, 2, (9, 0), (), "Exporter", None),
		"FileNameOptions": (8, 2, (9, 0), (), "FileNameOptions", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (5, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"Trigger": (4, 2, (9, 0), (), "Trigger", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILogging5(DispatchBaseClass):
	'ILogging5 Interface'
	CLSID = IID('{34DCE56F-F608-4478-A2F0-371D22F78E2D}')
	coclass_clsid = IID('{FD859B9C-4E28-11D3-854C-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Exporter": (7, 2, (9, 0), (), "Exporter", None),
		"FileNameOptions": (8, 2, (9, 0), (), "FileNameOptions", None),
		"Filter": (9, 2, (9, 0), (), "Filter", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (5, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"Trigger": (4, 2, (9, 0), (), "Trigger", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoggingCollection(DispatchBaseClass):
	'ILoggingCollection Interface'
	CLSID = IID('{FD859B99-4E28-11D3-854C-00105A3E017B}')
	coclass_clsid = None

	# Result is of type ILogging
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, n=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),n
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{FD859B9B-4E28-11D3-854C-00105A3E017B}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, n=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),n
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{FD859B9B-4E28-11D3-854C-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{FD859B9B-4E28-11D3-854C-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILoggingCollection2(DispatchBaseClass):
	'ILoggingCollection2 Interface'
	CLSID = IID('{41313720-D242-11D3-85E6-00105A3E017B}')
	coclass_clsid = IID('{FD859B9A-4E28-11D3-854C-00105A3E017B}')

	# Result is of type ILogging2
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 17),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{3BC4EED0-D25F-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type ILogging2
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{3BC4EED0-D25F-11D3-85E6-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{3BC4EED0-D25F-11D3-85E6-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{3BC4EED0-D25F-11D3-85E6-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILoggingFileNameOptions(DispatchBaseClass):
	'ILoggingFileNameOptions Interface'
	CLSID = IID('{B440D9AC-7226-46E4-A4BD-F17E22960740}')
	coclass_clsid = IID('{DD4129B5-8CBD-4A93-A6B3-A85DB99533E8}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"EnableExtendedIncrementation": (5, 2, (11, 0), (), "EnableExtendedIncrementation", None),
		"IncrementAfterDuration": (9, 2, (11, 0), (), "IncrementAfterDuration", None),
		"IncrementAfterGrowth": (7, 2, (11, 0), (), "IncrementAfterGrowth", None),
		"IncrementAfterTrigger": (4, 2, (11, 0), (), "IncrementAfterTrigger", None),
		"IncrementAtMeasurementStart": (3, 2, (11, 0), (), "IncrementAtMeasurementStart", None),
		"IncrementationSize": (8, 2, (3, 0), (), "IncrementationSize", None),
		"IncrementationTime": (10, 2, (3, 0), (), "IncrementationTime", None),
		"NumberOfLeadingZeros": (6, 2, (3, 0), (), "NumberOfLeadingZeros", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"EnableExtendedIncrementation": ((5, LCID, 4, 0),()),
		"IncrementAfterDuration": ((9, LCID, 4, 0),()),
		"IncrementAfterGrowth": ((7, LCID, 4, 0),()),
		"IncrementAfterTrigger": ((4, LCID, 4, 0),()),
		"IncrementAtMeasurementStart": ((3, LCID, 4, 0),()),
		"IncrementationSize": ((8, LCID, 4, 0),()),
		"IncrementationTime": ((10, LCID, 4, 0),()),
		"NumberOfLeadingZeros": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoggingFilter(DispatchBaseClass):
	'ILoggingFilter Interface'
	CLSID = IID('{23DBC0EB-4827-47D5-A6AC-915EA2A54391}')
	coclass_clsid = IID('{948BA572-6E11-4C3A-A88E-8AE183BF76C4}')

	def Disable(self, events=defaultNamedNotOptArg):
		'method Disable'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((3, 1),),events
			)

	def Enable(self, events=defaultNamedNotOptArg):
		'method Enable'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((3, 1),),events
			)

	def IsEnabled(self, events=defaultNamedNotOptArg):
		'method IsEnabled'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((3, 1),),events
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMOSTBusStatistic(DispatchBaseClass):
	'IMOSTBusStatistic Interface'
	CLSID = IID('{A7566B44-D7E8-11D3-85EE-00105A3E017B}')
	coclass_clsid = IID('{A7566B45-D7E8-11D3-85EE-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusLoad": (0, 2, (3, 0), (), "BusLoad", None),
		"ChipState": (6, 2, (8, 0), (), "ChipState", None),
		"Data": (4, 2, (3, 0), (), "Data", None),
		"DataTotal": (5, 2, (3, 0), (), "DataTotal", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"PeakLoad": (3, 2, (3, 0), (), "PeakLoad", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'BusLoad'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "BusLoad", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMacro(DispatchBaseClass):
	'IMacro Interface'
	CLSID = IID('{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}')
	coclass_clsid = IID('{044D15FF-F799-4964-90C9-05C94E7991B2}')

	def IsRunning(self):
		'method IsRunning'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMacroSetup(DispatchBaseClass):
	'IMacroSetup Interface'
	CLSID = IID('{7C9AAED7-6F33-46AE-8B36-2B3FDC916EA7}')
	coclass_clsid = IID('{7D7AA38C-5FFA-45B6-A511-7110E68E0C6A}')

	def Play(self, FullName=defaultNamedNotOptArg):
		'method Play'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 1),),FullName
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Macros": (3, 2, (9, 0), (), "Macros", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMacros(DispatchBaseClass):
	'IMacros Interface'
	CLSID = IID('{C3F935CF-F4D4-40A9-BB1A-8FDC72039A11}')
	coclass_clsid = IID('{E4B3EC09-AD48-43D5-8B50-3137F9933B2E}')

	# Result is of type IMacro
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}')
		return ret

	# Result is of type IMacro
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMcCANSettings(DispatchBaseClass):
	'IMcCANSettings Interface'
	CLSID = IID('{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AppChannel": (1, 2, (3, 0), (), "AppChannel", None),
		"RequestId": (2, 2, (3, 0), (), "RequestId", None),
		"ResponseId": (3, 2, (3, 0), (), "ResponseId", None),
	}
	_prop_map_put_ = {
		"AppChannel": ((1, LCID, 4, 0),()),
		"RequestId": ((2, LCID, 4, 0),()),
		"ResponseId": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcCANSettings1(DispatchBaseClass):
	'IMcCANSettings1 Interface'
	CLSID = IID('{BBFCFB7E-7E6F-4271-A064-CD2AC49F7D91}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AppChannel": (1, 2, (3, 0), (), "AppChannel", None),
		"RequestId": (2, 2, (3, 0), (), "RequestId", None),
		"ResponseId": (3, 2, (3, 0), (), "ResponseId", None),
		"UseMaxDLC": (4, 2, (3, 0), (), "UseMaxDLC", None),
	}
	_prop_map_put_ = {
		"AppChannel": ((1, LCID, 4, 0),()),
		"RequestId": ((2, LCID, 4, 0),()),
		"ResponseId": ((3, LCID, 4, 0),()),
		"UseMaxDLC": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcCANSettings2(DispatchBaseClass):
	'IMcCANSettings2 Interface'
	CLSID = IID('{67454196-BCD1-41FE-9942-9AD5E09751B3}')
	coclass_clsid = IID('{F63D68FE-9255-40DF-A3F9-6E347A42BFC5}')

	_prop_map_get_ = {
		"AppChannel": (1, 2, (3, 0), (), "AppChannel", None),
		"RequestId": (2, 2, (3, 0), (), "RequestId", None),
		"ResponseId": (3, 2, (3, 0), (), "ResponseId", None),
		"UseBitrateSwitch": (6, 2, (3, 0), (), "UseBitrateSwitch", None),
		"UseCanFD": (5, 2, (3, 0), (), "UseCanFD", None),
		"UseMaxDLC": (4, 2, (3, 0), (), "UseMaxDLC", None),
	}
	_prop_map_put_ = {
		"AppChannel": ((1, LCID, 4, 0),()),
		"RequestId": ((2, LCID, 4, 0),()),
		"ResponseId": ((3, LCID, 4, 0),()),
		"UseBitrateSwitch": ((6, LCID, 4, 0),()),
		"UseCanFD": ((5, LCID, 4, 0),()),
		"UseMaxDLC": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcConfiguredSignal(DispatchBaseClass):
	'IMcConfiguredSignal Interface'
	CLSID = IID('{9143BDF8-5801-42C7-832C-CFABE5FE3948}')
	coclass_clsid = IID('{F22E1DC6-E6A4-4392-B1F7-F8B613575E23}')

	_prop_map_get_ = {
		"Active": (3, 2, (3, 0), (), "Active", None),
		"EventCycle": (4, 2, (3, 0), (), "EventCycle", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ReadMode": (2, 2, (3, 0), (), "ReadMode", None),
	}
	_prop_map_put_ = {
		"Active": ((3, LCID, 4, 0),()),
		"EventCycle": ((4, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"ReadMode": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcConfiguredSignals(DispatchBaseClass):
	'IMcConfiguredSignals Interface'
	CLSID = IID('{3B4B1378-DADB-405C-888C-42FAB14A0937}')
	coclass_clsid = IID('{16FD50D3-D638-41CE-A7EB-7CC94BCE6887}')

	# Result is of type IMcConfiguredSignal
	def Add(self, dbSignal=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((9, 1),),dbSignal
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9143BDF8-5801-42C7-832C-CFABE5FE3948}')
		return ret

	# Result is of type IMcConfiguredSignal
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9143BDF8-5801-42C7-832C-CFABE5FE3948}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9143BDF8-5801-42C7-832C-CFABE5FE3948}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9143BDF8-5801-42C7-832C-CFABE5FE3948}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMcDatabaseSignal(DispatchBaseClass):
	'IMcDatabaseSignal Interface'
	CLSID = IID('{2C5CB149-1C81-43BF-8356-9FC01E7F4445}')
	coclass_clsid = IID('{67812C38-1688-4651-8AAB-5DC651048E74}')

	_prop_map_get_ = {
		"Name": (1, 2, (8, 0), (), "Name", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcDatabaseSignals(DispatchBaseClass):
	'IMcDatabaseSignals Interface'
	CLSID = IID('{9A6830FC-0406-412B-B89A-00E4B36B6536}')
	coclass_clsid = IID('{7095B02E-FAC2-4746-88C0-60BCE901B808}')

	# Result is of type IMcDatabaseSignal
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{2C5CB149-1C81-43BF-8356-9FC01E7F4445}')
		return ret

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{2C5CB149-1C81-43BF-8356-9FC01E7F4445}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{2C5CB149-1C81-43BF-8356-9FC01E7F4445}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMcECU(DispatchBaseClass):
	'IMcECU Interface'
	CLSID = IID('{64C33E85-D215-4166-840E-F6651DA438F0}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"BusType": (3, 2, (3, 0), (), "BusType", None),
		# Method 'CANSettings' returns object of type 'IMcCANSettings'
		"CANSettings": (17, 2, (9, 0), (), "CANSettings", '{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}'),
		# Method 'ConfiguredSignals' returns object of type 'IMcConfiguredSignals'
		"ConfiguredSignals": (15, 2, (9, 0), (), "ConfiguredSignals", '{3B4B1378-DADB-405C-888C-42FAB14A0937}'),
		"ConnectOnMeasurementStart": (10, 2, (3, 0), (), "ConnectOnMeasurementStart", None),
		"Database": (4, 2, (8, 0), (), "Database", None),
		# Method 'DatabaseSignals' returns object of type 'IMcDatabaseSignals'
		"DatabaseSignals": (16, 2, (9, 0), (), "DatabaseSignals", '{9A6830FC-0406-412B-B89A-00E4B36B6536}'),
		# Method 'EthernetSettings' returns object of type 'IMcEthernetSettings'
		"EthernetSettings": (19, 2, (9, 0), (), "EthernetSettings", '{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}'),
		# Method 'FlexRaySettings' returns object of type 'IMcFlexRaySettings1'
		"FlexRaySettings": (18, 2, (9, 0), (), "FlexRaySettings", '{BB4D9F36-C012-4A47-8765-4361F619EB09}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NumberOfConnectionAttempts": (7, 2, (3, 0), (), "NumberOfConnectionAttempts", None),
		"Protocol": (2, 2, (3, 0), (), "Protocol", None),
		"ReconnectAllowedAfterError": (9, 2, (3, 0), (), "ReconnectAllowedAfterError", None),
		"ResponseTimeout": (6, 2, (3, 0), (), "ResponseTimeout", None),
		"SeedAndKeyActive": (11, 2, (3, 0), (), "SeedAndKeyActive", None),
		"SeedAndKeyActiveCAL": (13, 2, (3, 0), (), "SeedAndKeyActiveCAL", None),
		"SeedAndKeyFileName": (12, 2, (8, 0), (), "SeedAndKeyFileName", None),
		"SeedAndKeyFileNameCAL": (14, 2, (8, 0), (), "SeedAndKeyFileNameCAL", None),
		"SeedAndKeyOnDemand": (8, 2, (3, 0), (), "SeedAndKeyOnDemand", None),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
		"BusType": ((3, LCID, 4, 0),()),
		"ConnectOnMeasurementStart": ((10, LCID, 4, 0),()),
		"Database": ((4, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"NumberOfConnectionAttempts": ((7, LCID, 4, 0),()),
		"Protocol": ((2, LCID, 4, 0),()),
		"ReconnectAllowedAfterError": ((9, LCID, 4, 0),()),
		"ResponseTimeout": ((6, LCID, 4, 0),()),
		"SeedAndKeyActive": ((11, LCID, 4, 0),()),
		"SeedAndKeyActiveCAL": ((13, LCID, 4, 0),()),
		"SeedAndKeyFileName": ((12, LCID, 4, 0),()),
		"SeedAndKeyFileNameCAL": ((14, LCID, 4, 0),()),
		"SeedAndKeyOnDemand": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcECU1(DispatchBaseClass):
	'IMcECU1 Interface'
	CLSID = IID('{379A92F4-9305-4D2C-835C-2469D0D6A79D}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"BusType": (3, 2, (3, 0), (), "BusType", None),
		# Method 'CANSettings' returns object of type 'IMcCANSettings'
		"CANSettings": (17, 2, (9, 0), (), "CANSettings", '{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}'),
		# Method 'ConfiguredSignals' returns object of type 'IMcConfiguredSignals'
		"ConfiguredSignals": (15, 2, (9, 0), (), "ConfiguredSignals", '{3B4B1378-DADB-405C-888C-42FAB14A0937}'),
		"ConnectOnMeasurementStart": (10, 2, (3, 0), (), "ConnectOnMeasurementStart", None),
		"Database": (4, 2, (8, 0), (), "Database", None),
		# Method 'DatabaseSignals' returns object of type 'IMcDatabaseSignals'
		"DatabaseSignals": (16, 2, (9, 0), (), "DatabaseSignals", '{9A6830FC-0406-412B-B89A-00E4B36B6536}'),
		# Method 'EthernetSettings' returns object of type 'IMcEthernetSettings'
		"EthernetSettings": (19, 2, (9, 0), (), "EthernetSettings", '{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}'),
		# Method 'FlexRaySettings' returns object of type 'IMcFlexRaySettings1'
		"FlexRaySettings": (18, 2, (9, 0), (), "FlexRaySettings", '{BB4D9F36-C012-4A47-8765-4361F619EB09}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NumberOfConnectionAttempts": (7, 2, (3, 0), (), "NumberOfConnectionAttempts", None),
		"PageSwitchingActive": (20, 2, (3, 0), (), "PageSwitchingActive", None),
		"Protocol": (2, 2, (3, 0), (), "Protocol", None),
		"RAMpage": (21, 2, (3, 0), (), "RAMpage", None),
		"ReconnectAllowedAfterError": (9, 2, (3, 0), (), "ReconnectAllowedAfterError", None),
		"ResponseTimeout": (6, 2, (3, 0), (), "ResponseTimeout", None),
		"SeedAndKeyActive": (11, 2, (3, 0), (), "SeedAndKeyActive", None),
		"SeedAndKeyActiveCAL": (13, 2, (3, 0), (), "SeedAndKeyActiveCAL", None),
		"SeedAndKeyFileName": (12, 2, (8, 0), (), "SeedAndKeyFileName", None),
		"SeedAndKeyFileNameCAL": (14, 2, (8, 0), (), "SeedAndKeyFileNameCAL", None),
		"SeedAndKeyOnDemand": (8, 2, (3, 0), (), "SeedAndKeyOnDemand", None),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
		"BusType": ((3, LCID, 4, 0),()),
		"ConnectOnMeasurementStart": ((10, LCID, 4, 0),()),
		"Database": ((4, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"NumberOfConnectionAttempts": ((7, LCID, 4, 0),()),
		"PageSwitchingActive": ((20, LCID, 4, 0),()),
		"Protocol": ((2, LCID, 4, 0),()),
		"RAMpage": ((21, LCID, 4, 0),()),
		"ReconnectAllowedAfterError": ((9, LCID, 4, 0),()),
		"ResponseTimeout": ((6, LCID, 4, 0),()),
		"SeedAndKeyActive": ((11, LCID, 4, 0),()),
		"SeedAndKeyActiveCAL": ((13, LCID, 4, 0),()),
		"SeedAndKeyFileName": ((12, LCID, 4, 0),()),
		"SeedAndKeyFileNameCAL": ((14, LCID, 4, 0),()),
		"SeedAndKeyOnDemand": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcECU2(DispatchBaseClass):
	'IMcECU2 Interface'
	CLSID = IID('{D0C1E1A6-7AB8-4DD8-B8DA-515F37C44967}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"BusType": (3, 2, (3, 0), (), "BusType", None),
		# Method 'CANSettings' returns object of type 'IMcCANSettings'
		"CANSettings": (17, 2, (9, 0), (), "CANSettings", '{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}'),
		# Method 'ConfiguredSignals' returns object of type 'IMcConfiguredSignals'
		"ConfiguredSignals": (15, 2, (9, 0), (), "ConfiguredSignals", '{3B4B1378-DADB-405C-888C-42FAB14A0937}'),
		"ConnectOnMeasurementStart": (10, 2, (3, 0), (), "ConnectOnMeasurementStart", None),
		"Database": (4, 2, (8, 0), (), "Database", None),
		# Method 'DatabaseSignals' returns object of type 'IMcDatabaseSignals'
		"DatabaseSignals": (16, 2, (9, 0), (), "DatabaseSignals", '{9A6830FC-0406-412B-B89A-00E4B36B6536}'),
		"DisconnectOnMeasurementStop": (24, 2, (3, 0), (), "DisconnectOnMeasurementStop", None),
		# Method 'EthernetSettings' returns object of type 'IMcEthernetSettings'
		"EthernetSettings": (19, 2, (9, 0), (), "EthernetSettings", '{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}'),
		# Method 'FlexRaySettings' returns object of type 'IMcFlexRaySettings1'
		"FlexRaySettings": (18, 2, (9, 0), (), "FlexRaySettings", '{BB4D9F36-C012-4A47-8765-4361F619EB09}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NumberOfConnectionAttempts": (7, 2, (3, 0), (), "NumberOfConnectionAttempts", None),
		"ObserverActive": (26, 2, (3, 0), (), "ObserverActive", None),
		"PageSwitchingActive": (20, 2, (3, 0), (), "PageSwitchingActive", None),
		"Protocol": (2, 2, (3, 0), (), "Protocol", None),
		"RAMpage": (21, 2, (3, 0), (), "RAMpage", None),
		"ReconnectAllowedAfterError": (9, 2, (3, 0), (), "ReconnectAllowedAfterError", None),
		"ResetVariablesAfterDisconnect": (25, 2, (3, 0), (), "ResetVariablesAfterDisconnect", None),
		"ResponseTimeout": (6, 2, (3, 0), (), "ResponseTimeout", None),
		"SeedAndKeyActive": (11, 2, (3, 0), (), "SeedAndKeyActive", None),
		"SeedAndKeyActiveCAL": (13, 2, (3, 0), (), "SeedAndKeyActiveCAL", None),
		"SeedAndKeyFileName": (12, 2, (8, 0), (), "SeedAndKeyFileName", None),
		"SeedAndKeyFileNameCAL": (14, 2, (8, 0), (), "SeedAndKeyFileNameCAL", None),
		"SeedAndKeyOnDemand": (8, 2, (3, 0), (), "SeedAndKeyOnDemand", None),
		"UseDAQTimestampsOfECU": (22, 2, (3, 0), (), "UseDAQTimestampsOfECU", None),
		"UseDAQTimestampsOfECUDivOperator": (23, 2, (3, 0), (), "UseDAQTimestampsOfECUDivOperator", None),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
		"BusType": ((3, LCID, 4, 0),()),
		"ConnectOnMeasurementStart": ((10, LCID, 4, 0),()),
		"Database": ((4, LCID, 4, 0),()),
		"DisconnectOnMeasurementStop": ((24, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"NumberOfConnectionAttempts": ((7, LCID, 4, 0),()),
		"ObserverActive": ((26, LCID, 4, 0),()),
		"PageSwitchingActive": ((20, LCID, 4, 0),()),
		"Protocol": ((2, LCID, 4, 0),()),
		"RAMpage": ((21, LCID, 4, 0),()),
		"ReconnectAllowedAfterError": ((9, LCID, 4, 0),()),
		"ResetVariablesAfterDisconnect": ((25, LCID, 4, 0),()),
		"ResponseTimeout": ((6, LCID, 4, 0),()),
		"SeedAndKeyActive": ((11, LCID, 4, 0),()),
		"SeedAndKeyActiveCAL": ((13, LCID, 4, 0),()),
		"SeedAndKeyFileName": ((12, LCID, 4, 0),()),
		"SeedAndKeyFileNameCAL": ((14, LCID, 4, 0),()),
		"SeedAndKeyOnDemand": ((8, LCID, 4, 0),()),
		"UseDAQTimestampsOfECU": ((22, LCID, 4, 0),()),
		"UseDAQTimestampsOfECUDivOperator": ((23, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcECU3(DispatchBaseClass):
	'IMcECU3 Interface'
	CLSID = IID('{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"BusType": (3, 2, (3, 0), (), "BusType", None),
		# Method 'CANSettings' returns object of type 'IMcCANSettings'
		"CANSettings": (17, 2, (9, 0), (), "CANSettings", '{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}'),
		# Method 'ConfiguredSignals' returns object of type 'IMcConfiguredSignals'
		"ConfiguredSignals": (15, 2, (9, 0), (), "ConfiguredSignals", '{3B4B1378-DADB-405C-888C-42FAB14A0937}'),
		"ConnectOnMeasurementStart": (10, 2, (3, 0), (), "ConnectOnMeasurementStart", None),
		"Database": (4, 2, (8, 0), (), "Database", None),
		# Method 'DatabaseSignals' returns object of type 'IMcDatabaseSignals'
		"DatabaseSignals": (16, 2, (9, 0), (), "DatabaseSignals", '{9A6830FC-0406-412B-B89A-00E4B36B6536}'),
		"DisconnectOnMeasurementStop": (24, 2, (3, 0), (), "DisconnectOnMeasurementStop", None),
		# Method 'EthernetSettings' returns object of type 'IMcEthernetSettings'
		"EthernetSettings": (19, 2, (9, 0), (), "EthernetSettings", '{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}'),
		# Method 'FlexRaySettings' returns object of type 'IMcFlexRaySettings1'
		"FlexRaySettings": (18, 2, (9, 0), (), "FlexRaySettings", '{BB4D9F36-C012-4A47-8765-4361F619EB09}'),
		# Method 'MeasurementGroups' returns object of type 'IMcMeasurementGroups'
		"MeasurementGroups": (27, 2, (9, 0), (), "MeasurementGroups", '{9D75612D-C799-4D08-9F96-3996AE447EF2}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NumberOfConnectionAttempts": (7, 2, (3, 0), (), "NumberOfConnectionAttempts", None),
		"ObserverActive": (26, 2, (3, 0), (), "ObserverActive", None),
		"PageSwitchingActive": (20, 2, (3, 0), (), "PageSwitchingActive", None),
		"Protocol": (2, 2, (3, 0), (), "Protocol", None),
		"RAMpage": (21, 2, (3, 0), (), "RAMpage", None),
		"ReconnectAllowedAfterError": (9, 2, (3, 0), (), "ReconnectAllowedAfterError", None),
		"ResetVariablesAfterDisconnect": (25, 2, (3, 0), (), "ResetVariablesAfterDisconnect", None),
		"ResponseTimeout": (6, 2, (3, 0), (), "ResponseTimeout", None),
		"SeedAndKeyActive": (11, 2, (3, 0), (), "SeedAndKeyActive", None),
		"SeedAndKeyActiveCAL": (13, 2, (3, 0), (), "SeedAndKeyActiveCAL", None),
		"SeedAndKeyFileName": (12, 2, (8, 0), (), "SeedAndKeyFileName", None),
		"SeedAndKeyFileNameCAL": (14, 2, (8, 0), (), "SeedAndKeyFileNameCAL", None),
		"SeedAndKeyOnDemand": (8, 2, (3, 0), (), "SeedAndKeyOnDemand", None),
		"UseDAQTimestampsOfECU": (22, 2, (3, 0), (), "UseDAQTimestampsOfECU", None),
		"UseDAQTimestampsOfECUDivOperator": (23, 2, (3, 0), (), "UseDAQTimestampsOfECUDivOperator", None),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
		"BusType": ((3, LCID, 4, 0),()),
		"ConnectOnMeasurementStart": ((10, LCID, 4, 0),()),
		"Database": ((4, LCID, 4, 0),()),
		"DisconnectOnMeasurementStop": ((24, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"NumberOfConnectionAttempts": ((7, LCID, 4, 0),()),
		"ObserverActive": ((26, LCID, 4, 0),()),
		"PageSwitchingActive": ((20, LCID, 4, 0),()),
		"Protocol": ((2, LCID, 4, 0),()),
		"RAMpage": ((21, LCID, 4, 0),()),
		"ReconnectAllowedAfterError": ((9, LCID, 4, 0),()),
		"ResetVariablesAfterDisconnect": ((25, LCID, 4, 0),()),
		"ResponseTimeout": ((6, LCID, 4, 0),()),
		"SeedAndKeyActive": ((11, LCID, 4, 0),()),
		"SeedAndKeyActiveCAL": ((13, LCID, 4, 0),()),
		"SeedAndKeyFileName": ((12, LCID, 4, 0),()),
		"SeedAndKeyFileNameCAL": ((14, LCID, 4, 0),()),
		"SeedAndKeyOnDemand": ((8, LCID, 4, 0),()),
		"UseDAQTimestampsOfECU": ((22, LCID, 4, 0),()),
		"UseDAQTimestampsOfECUDivOperator": ((23, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcECU4(DispatchBaseClass):
	'IMcECU4 Interface'
	CLSID = IID('{017D194C-5BBC-4A49-B552-922908CFCEC2}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"BusType": (3, 2, (3, 0), (), "BusType", None),
		# Method 'CANSettings' returns object of type 'IMcCANSettings'
		"CANSettings": (17, 2, (9, 0), (), "CANSettings", '{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}'),
		"CheckEPROMIdentifier": (40, 2, (3, 0), (), "CheckEPROMIdentifier", None),
		# Method 'ConfiguredSignals' returns object of type 'IMcConfiguredSignals'
		"ConfiguredSignals": (15, 2, (9, 0), (), "ConfiguredSignals", '{3B4B1378-DADB-405C-888C-42FAB14A0937}'),
		"ConnectMode": (39, 2, (3, 0), (), "ConnectMode", None),
		"ConnectOnMeasurementStart": (10, 2, (3, 0), (), "ConnectOnMeasurementStart", None),
		"DAQTimeout": (28, 2, (3, 0), (), "DAQTimeout", None),
		"Database": (4, 2, (8, 0), (), "Database", None),
		# Method 'DatabaseSignals' returns object of type 'IMcDatabaseSignals'
		"DatabaseSignals": (16, 2, (9, 0), (), "DatabaseSignals", '{9A6830FC-0406-412B-B89A-00E4B36B6536}'),
		"DisableVariableUpdates": (29, 2, (3, 0), (), "DisableVariableUpdates", None),
		"DisconnectOnMeasurementStop": (24, 2, (3, 0), (), "DisconnectOnMeasurementStop", None),
		# Method 'EthernetSettings' returns object of type 'IMcEthernetSettings'
		"EthernetSettings": (19, 2, (9, 0), (), "EthernetSettings", '{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}'),
		# Method 'FlexRaySettings' returns object of type 'IMcFlexRaySettings1'
		"FlexRaySettings": (18, 2, (9, 0), (), "FlexRaySettings", '{BB4D9F36-C012-4A47-8765-4361F619EB09}'),
		"MasterID": (41, 2, (12, 0), (), "MasterID", None),
		# Method 'MeasurementGroups' returns object of type 'IMcMeasurementGroups'
		"MeasurementGroups": (27, 2, (9, 0), (), "MeasurementGroups", '{9D75612D-C799-4D08-9F96-3996AE447EF2}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NumberOfConnectionAttempts": (7, 2, (3, 0), (), "NumberOfConnectionAttempts", None),
		"ObserverActive": (26, 2, (3, 0), (), "ObserverActive", None),
		"PageSwitchingActive": (20, 2, (3, 0), (), "PageSwitchingActive", None),
		"Protocol": (2, 2, (3, 0), (), "Protocol", None),
		"RAMpage": (21, 2, (3, 0), (), "RAMpage", None),
		"ReconnectAllowedAfterError": (9, 2, (3, 0), (), "ReconnectAllowedAfterError", None),
		"ResetVariablesAfterDisconnect": (25, 2, (3, 0), (), "ResetVariablesAfterDisconnect", None),
		"ResponseTimeout": (6, 2, (3, 0), (), "ResponseTimeout", None),
		"SeedAndKeyActive": (11, 2, (3, 0), (), "SeedAndKeyActive", None),
		"SeedAndKeyActiveCAL": (13, 2, (3, 0), (), "SeedAndKeyActiveCAL", None),
		"SeedAndKeyFileName": (12, 2, (8, 0), (), "SeedAndKeyFileName", None),
		"SeedAndKeyFileNameCAL": (14, 2, (8, 0), (), "SeedAndKeyFileNameCAL", None),
		"SeedAndKeyOnDemand": (8, 2, (3, 0), (), "SeedAndKeyOnDemand", None),
		"UseCCP_V2_0": (42, 2, (3, 0), (), "UseCCP_V2_0", None),
		"UseDAQTimestampsOfECU": (22, 2, (3, 0), (), "UseDAQTimestampsOfECU", None),
		"UseDAQTimestampsOfECUDivOperator": (23, 2, (3, 0), (), "UseDAQTimestampsOfECUDivOperator", None),
		"UseExtendedDatatypes": (31, 2, (3, 0), (), "UseExtendedDatatypes", None),
		"UseGetDAQProcessorInfo": (35, 2, (3, 0), (), "UseGetDAQProcessorInfo", None),
		"UseGetDAQResolutionInfo": (36, 2, (3, 0), (), "UseGetDAQResolutionInfo", None),
		"UseModifyBits": (32, 2, (3, 0), (), "UseModifyBits", None),
		"UsePartialIdentifiers": (30, 2, (3, 0), (), "UsePartialIdentifiers", None),
		"UseSetSStatusCAL": (37, 2, (3, 0), (), "UseSetSStatusCAL", None),
		"UseSetSStatusDAQ": (38, 2, (3, 0), (), "UseSetSStatusDAQ", None),
		"UseShortDownload": (33, 2, (3, 0), (), "UseShortDownload", None),
		"UseShortUpload": (34, 2, (3, 0), (), "UseShortUpload", None),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
		"BusType": ((3, LCID, 4, 0),()),
		"CheckEPROMIdentifier": ((40, LCID, 4, 0),()),
		"ConnectMode": ((39, LCID, 4, 0),()),
		"ConnectOnMeasurementStart": ((10, LCID, 4, 0),()),
		"DAQTimeout": ((28, LCID, 4, 0),()),
		"Database": ((4, LCID, 4, 0),()),
		"DisableVariableUpdates": ((29, LCID, 4, 0),()),
		"DisconnectOnMeasurementStop": ((24, LCID, 4, 0),()),
		"MasterID": ((41, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"NumberOfConnectionAttempts": ((7, LCID, 4, 0),()),
		"ObserverActive": ((26, LCID, 4, 0),()),
		"PageSwitchingActive": ((20, LCID, 4, 0),()),
		"Protocol": ((2, LCID, 4, 0),()),
		"RAMpage": ((21, LCID, 4, 0),()),
		"ReconnectAllowedAfterError": ((9, LCID, 4, 0),()),
		"ResetVariablesAfterDisconnect": ((25, LCID, 4, 0),()),
		"ResponseTimeout": ((6, LCID, 4, 0),()),
		"SeedAndKeyActive": ((11, LCID, 4, 0),()),
		"SeedAndKeyActiveCAL": ((13, LCID, 4, 0),()),
		"SeedAndKeyFileName": ((12, LCID, 4, 0),()),
		"SeedAndKeyFileNameCAL": ((14, LCID, 4, 0),()),
		"SeedAndKeyOnDemand": ((8, LCID, 4, 0),()),
		"UseCCP_V2_0": ((42, LCID, 4, 0),()),
		"UseDAQTimestampsOfECU": ((22, LCID, 4, 0),()),
		"UseDAQTimestampsOfECUDivOperator": ((23, LCID, 4, 0),()),
		"UseExtendedDatatypes": ((31, LCID, 4, 0),()),
		"UseGetDAQProcessorInfo": ((35, LCID, 4, 0),()),
		"UseGetDAQResolutionInfo": ((36, LCID, 4, 0),()),
		"UseModifyBits": ((32, LCID, 4, 0),()),
		"UsePartialIdentifiers": ((30, LCID, 4, 0),()),
		"UseSetSStatusCAL": ((37, LCID, 4, 0),()),
		"UseSetSStatusDAQ": ((38, LCID, 4, 0),()),
		"UseShortDownload": ((33, LCID, 4, 0),()),
		"UseShortUpload": ((34, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcECU5(DispatchBaseClass):
	'IMcECU5 Interface'
	CLSID = IID('{58867B26-B1C4-4171-A8FD-510A74BFE9C5}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"BusType": (3, 2, (3, 0), (), "BusType", None),
		# Method 'CANSettings' returns object of type 'IMcCANSettings'
		"CANSettings": (17, 2, (9, 0), (), "CANSettings", '{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}'),
		"CheckEPROMIdentifier": (40, 2, (3, 0), (), "CheckEPROMIdentifier", None),
		# Method 'ConfiguredSignals' returns object of type 'IMcConfiguredSignals'
		"ConfiguredSignals": (15, 2, (9, 0), (), "ConfiguredSignals", '{3B4B1378-DADB-405C-888C-42FAB14A0937}'),
		"ConnectMode": (39, 2, (3, 0), (), "ConnectMode", None),
		"ConnectOnMeasurementStart": (10, 2, (3, 0), (), "ConnectOnMeasurementStart", None),
		"ConnectOnMeasurementStartDelay": (43, 2, (3, 0), (), "ConnectOnMeasurementStartDelay", None),
		"DAQTimeout": (28, 2, (3, 0), (), "DAQTimeout", None),
		"Database": (4, 2, (8, 0), (), "Database", None),
		# Method 'DatabaseSignals' returns object of type 'IMcDatabaseSignals'
		"DatabaseSignals": (16, 2, (9, 0), (), "DatabaseSignals", '{9A6830FC-0406-412B-B89A-00E4B36B6536}'),
		"DisableVariableUpdates": (29, 2, (3, 0), (), "DisableVariableUpdates", None),
		"DisconnectOnMeasurementStop": (24, 2, (3, 0), (), "DisconnectOnMeasurementStop", None),
		# Method 'EthernetSettings' returns object of type 'IMcEthernetSettings'
		"EthernetSettings": (19, 2, (9, 0), (), "EthernetSettings", '{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}'),
		# Method 'FlexRaySettings' returns object of type 'IMcFlexRaySettings1'
		"FlexRaySettings": (18, 2, (9, 0), (), "FlexRaySettings", '{BB4D9F36-C012-4A47-8765-4361F619EB09}'),
		"MasterID": (41, 2, (12, 0), (), "MasterID", None),
		# Method 'MeasurementGroups' returns object of type 'IMcMeasurementGroups'
		"MeasurementGroups": (27, 2, (9, 0), (), "MeasurementGroups", '{9D75612D-C799-4D08-9F96-3996AE447EF2}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NumberOfConnectionAttempts": (7, 2, (3, 0), (), "NumberOfConnectionAttempts", None),
		"ObserverActive": (26, 2, (3, 0), (), "ObserverActive", None),
		"PageSwitchingActive": (20, 2, (3, 0), (), "PageSwitchingActive", None),
		"Protocol": (2, 2, (3, 0), (), "Protocol", None),
		"RAMpage": (21, 2, (3, 0), (), "RAMpage", None),
		"ReconnectAllowedAfterError": (9, 2, (3, 0), (), "ReconnectAllowedAfterError", None),
		"ResetVariablesAfterDisconnect": (25, 2, (3, 0), (), "ResetVariablesAfterDisconnect", None),
		"ResponseTimeout": (6, 2, (3, 0), (), "ResponseTimeout", None),
		"SeedAndKeyActive": (11, 2, (3, 0), (), "SeedAndKeyActive", None),
		"SeedAndKeyActiveCAL": (13, 2, (3, 0), (), "SeedAndKeyActiveCAL", None),
		"SeedAndKeyFileName": (12, 2, (8, 0), (), "SeedAndKeyFileName", None),
		"SeedAndKeyFileNameCAL": (14, 2, (8, 0), (), "SeedAndKeyFileNameCAL", None),
		"SeedAndKeyOnDemand": (8, 2, (3, 0), (), "SeedAndKeyOnDemand", None),
		"UseCCP_V2_0": (42, 2, (3, 0), (), "UseCCP_V2_0", None),
		"UseDAQTimestampsOfECU": (22, 2, (3, 0), (), "UseDAQTimestampsOfECU", None),
		"UseDAQTimestampsOfECUDivOperator": (23, 2, (3, 0), (), "UseDAQTimestampsOfECUDivOperator", None),
		"UseExtendedDatatypes": (31, 2, (3, 0), (), "UseExtendedDatatypes", None),
		"UseGetDAQProcessorInfo": (35, 2, (3, 0), (), "UseGetDAQProcessorInfo", None),
		"UseGetDAQResolutionInfo": (36, 2, (3, 0), (), "UseGetDAQResolutionInfo", None),
		"UseModifyBits": (32, 2, (3, 0), (), "UseModifyBits", None),
		"UsePartialIdentifiers": (30, 2, (3, 0), (), "UsePartialIdentifiers", None),
		"UseSetSStatusCAL": (37, 2, (3, 0), (), "UseSetSStatusCAL", None),
		"UseSetSStatusDAQ": (38, 2, (3, 0), (), "UseSetSStatusDAQ", None),
		"UseShortDownload": (33, 2, (3, 0), (), "UseShortDownload", None),
		"UseShortUpload": (34, 2, (3, 0), (), "UseShortUpload", None),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
		"BusType": ((3, LCID, 4, 0),()),
		"CheckEPROMIdentifier": ((40, LCID, 4, 0),()),
		"ConnectMode": ((39, LCID, 4, 0),()),
		"ConnectOnMeasurementStart": ((10, LCID, 4, 0),()),
		"ConnectOnMeasurementStartDelay": ((43, LCID, 4, 0),()),
		"DAQTimeout": ((28, LCID, 4, 0),()),
		"Database": ((4, LCID, 4, 0),()),
		"DisableVariableUpdates": ((29, LCID, 4, 0),()),
		"DisconnectOnMeasurementStop": ((24, LCID, 4, 0),()),
		"MasterID": ((41, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"NumberOfConnectionAttempts": ((7, LCID, 4, 0),()),
		"ObserverActive": ((26, LCID, 4, 0),()),
		"PageSwitchingActive": ((20, LCID, 4, 0),()),
		"Protocol": ((2, LCID, 4, 0),()),
		"RAMpage": ((21, LCID, 4, 0),()),
		"ReconnectAllowedAfterError": ((9, LCID, 4, 0),()),
		"ResetVariablesAfterDisconnect": ((25, LCID, 4, 0),()),
		"ResponseTimeout": ((6, LCID, 4, 0),()),
		"SeedAndKeyActive": ((11, LCID, 4, 0),()),
		"SeedAndKeyActiveCAL": ((13, LCID, 4, 0),()),
		"SeedAndKeyFileName": ((12, LCID, 4, 0),()),
		"SeedAndKeyFileNameCAL": ((14, LCID, 4, 0),()),
		"SeedAndKeyOnDemand": ((8, LCID, 4, 0),()),
		"UseCCP_V2_0": ((42, LCID, 4, 0),()),
		"UseDAQTimestampsOfECU": ((22, LCID, 4, 0),()),
		"UseDAQTimestampsOfECUDivOperator": ((23, LCID, 4, 0),()),
		"UseExtendedDatatypes": ((31, LCID, 4, 0),()),
		"UseGetDAQProcessorInfo": ((35, LCID, 4, 0),()),
		"UseGetDAQResolutionInfo": ((36, LCID, 4, 0),()),
		"UseModifyBits": ((32, LCID, 4, 0),()),
		"UsePartialIdentifiers": ((30, LCID, 4, 0),()),
		"UseSetSStatusCAL": ((37, LCID, 4, 0),()),
		"UseSetSStatusDAQ": ((38, LCID, 4, 0),()),
		"UseShortDownload": ((33, LCID, 4, 0),()),
		"UseShortUpload": ((34, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcECU6(DispatchBaseClass):
	'IMcECU6 Interface'
	CLSID = IID('{2289A1A7-DAA6-418A-8601-7858B97BA150}')
	coclass_clsid = IID('{97E18ED8-FFAF-4CAF-A85F-43375E0EA4DE}')

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"BusType": (3, 2, (3, 0), (), "BusType", None),
		# Method 'CANSettings' returns object of type 'IMcCANSettings'
		"CANSettings": (17, 2, (9, 0), (), "CANSettings", '{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}'),
		"CheckEPROMIdentifier": (40, 2, (3, 0), (), "CheckEPROMIdentifier", None),
		# Method 'ConfiguredSignals' returns object of type 'IMcConfiguredSignals'
		"ConfiguredSignals": (15, 2, (9, 0), (), "ConfiguredSignals", '{3B4B1378-DADB-405C-888C-42FAB14A0937}'),
		"ConnectMode": (39, 2, (3, 0), (), "ConnectMode", None),
		"ConnectOnMeasurementStart": (10, 2, (3, 0), (), "ConnectOnMeasurementStart", None),
		"ConnectOnMeasurementStartDelay": (43, 2, (3, 0), (), "ConnectOnMeasurementStartDelay", None),
		"DAQTimeout": (28, 2, (3, 0), (), "DAQTimeout", None),
		"Database": (4, 2, (8, 0), (), "Database", None),
		# Method 'DatabaseSignals' returns object of type 'IMcDatabaseSignals'
		"DatabaseSignals": (16, 2, (9, 0), (), "DatabaseSignals", '{9A6830FC-0406-412B-B89A-00E4B36B6536}'),
		"DisableVariableUpdates": (29, 2, (3, 0), (), "DisableVariableUpdates", None),
		"DisconnectOnMeasurementStop": (24, 2, (3, 0), (), "DisconnectOnMeasurementStop", None),
		# Method 'EthernetSettings' returns object of type 'IMcEthernetSettings'
		"EthernetSettings": (19, 2, (9, 0), (), "EthernetSettings", '{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}'),
		# Method 'FlexRaySettings' returns object of type 'IMcFlexRaySettings1'
		"FlexRaySettings": (18, 2, (9, 0), (), "FlexRaySettings", '{BB4D9F36-C012-4A47-8765-4361F619EB09}'),
		# Method 'LINSettings' returns object of type 'IMcLINSettings'
		"LINSettings": (44, 2, (9, 0), (), "LINSettings", '{E2575D00-23CD-4A17-8E3D-ACA974E63BFA}'),
		"MasterID": (41, 2, (12, 0), (), "MasterID", None),
		# Method 'MeasurementGroups' returns object of type 'IMcMeasurementGroups'
		"MeasurementGroups": (27, 2, (9, 0), (), "MeasurementGroups", '{9D75612D-C799-4D08-9F96-3996AE447EF2}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NumberOfConnectionAttempts": (7, 2, (3, 0), (), "NumberOfConnectionAttempts", None),
		"ObserverActive": (26, 2, (3, 0), (), "ObserverActive", None),
		"PageSwitchingActive": (20, 2, (3, 0), (), "PageSwitchingActive", None),
		"Protocol": (2, 2, (3, 0), (), "Protocol", None),
		"RAMpage": (21, 2, (3, 0), (), "RAMpage", None),
		"ReconnectAllowedAfterError": (9, 2, (3, 0), (), "ReconnectAllowedAfterError", None),
		"ResetVariablesAfterDisconnect": (25, 2, (3, 0), (), "ResetVariablesAfterDisconnect", None),
		"ResponseTimeout": (6, 2, (3, 0), (), "ResponseTimeout", None),
		"SeedAndKeyActive": (11, 2, (3, 0), (), "SeedAndKeyActive", None),
		"SeedAndKeyActiveCAL": (13, 2, (3, 0), (), "SeedAndKeyActiveCAL", None),
		"SeedAndKeyFileName": (12, 2, (8, 0), (), "SeedAndKeyFileName", None),
		"SeedAndKeyFileNameCAL": (14, 2, (8, 0), (), "SeedAndKeyFileNameCAL", None),
		"SeedAndKeyOnDemand": (8, 2, (3, 0), (), "SeedAndKeyOnDemand", None),
		"UseCCP_V2_0": (42, 2, (3, 0), (), "UseCCP_V2_0", None),
		"UseDAQTimestampsOfECU": (22, 2, (3, 0), (), "UseDAQTimestampsOfECU", None),
		"UseDAQTimestampsOfECUDivOperator": (23, 2, (3, 0), (), "UseDAQTimestampsOfECUDivOperator", None),
		"UseExtendedDatatypes": (31, 2, (3, 0), (), "UseExtendedDatatypes", None),
		"UseGetDAQProcessorInfo": (35, 2, (3, 0), (), "UseGetDAQProcessorInfo", None),
		"UseGetDAQResolutionInfo": (36, 2, (3, 0), (), "UseGetDAQResolutionInfo", None),
		"UseModifyBits": (32, 2, (3, 0), (), "UseModifyBits", None),
		"UsePartialIdentifiers": (30, 2, (3, 0), (), "UsePartialIdentifiers", None),
		"UseSetSStatusCAL": (37, 2, (3, 0), (), "UseSetSStatusCAL", None),
		"UseSetSStatusDAQ": (38, 2, (3, 0), (), "UseSetSStatusDAQ", None),
		"UseShortDownload": (33, 2, (3, 0), (), "UseShortDownload", None),
		"UseShortUpload": (34, 2, (3, 0), (), "UseShortUpload", None),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
		"BusType": ((3, LCID, 4, 0),()),
		"CheckEPROMIdentifier": ((40, LCID, 4, 0),()),
		"ConnectMode": ((39, LCID, 4, 0),()),
		"ConnectOnMeasurementStart": ((10, LCID, 4, 0),()),
		"ConnectOnMeasurementStartDelay": ((43, LCID, 4, 0),()),
		"DAQTimeout": ((28, LCID, 4, 0),()),
		"Database": ((4, LCID, 4, 0),()),
		"DisableVariableUpdates": ((29, LCID, 4, 0),()),
		"DisconnectOnMeasurementStop": ((24, LCID, 4, 0),()),
		"MasterID": ((41, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"NumberOfConnectionAttempts": ((7, LCID, 4, 0),()),
		"ObserverActive": ((26, LCID, 4, 0),()),
		"PageSwitchingActive": ((20, LCID, 4, 0),()),
		"Protocol": ((2, LCID, 4, 0),()),
		"RAMpage": ((21, LCID, 4, 0),()),
		"ReconnectAllowedAfterError": ((9, LCID, 4, 0),()),
		"ResetVariablesAfterDisconnect": ((25, LCID, 4, 0),()),
		"ResponseTimeout": ((6, LCID, 4, 0),()),
		"SeedAndKeyActive": ((11, LCID, 4, 0),()),
		"SeedAndKeyActiveCAL": ((13, LCID, 4, 0),()),
		"SeedAndKeyFileName": ((12, LCID, 4, 0),()),
		"SeedAndKeyFileNameCAL": ((14, LCID, 4, 0),()),
		"SeedAndKeyOnDemand": ((8, LCID, 4, 0),()),
		"UseCCP_V2_0": ((42, LCID, 4, 0),()),
		"UseDAQTimestampsOfECU": ((22, LCID, 4, 0),()),
		"UseDAQTimestampsOfECUDivOperator": ((23, LCID, 4, 0),()),
		"UseExtendedDatatypes": ((31, LCID, 4, 0),()),
		"UseGetDAQProcessorInfo": ((35, LCID, 4, 0),()),
		"UseGetDAQResolutionInfo": ((36, LCID, 4, 0),()),
		"UseModifyBits": ((32, LCID, 4, 0),()),
		"UsePartialIdentifiers": ((30, LCID, 4, 0),()),
		"UseSetSStatusCAL": ((37, LCID, 4, 0),()),
		"UseSetSStatusDAQ": ((38, LCID, 4, 0),()),
		"UseShortDownload": ((33, LCID, 4, 0),()),
		"UseShortUpload": ((34, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcECUs(DispatchBaseClass):
	'IMcECUs Interface'
	CLSID = IID('{42199FA2-ABAC-4494-AA99-C21F0BBA9C66}')
	coclass_clsid = None

	# Result is of type IMcECU3
	def Add(self, dbPath=defaultNamedNotOptArg, transportLayer=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (3, 1)),dbPath
			, transportLayer)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
		return ret

	# Result is of type IMcECU3
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMcECUs1(DispatchBaseClass):
	'IMcECUs1 Interface'
	CLSID = IID('{1B987168-9FA2-460B-BAE5-7194F7CAE469}')
	coclass_clsid = IID('{076B5716-A5ED-4BD2-891A-E365411BF3DC}')

	# Result is of type IMcECU3
	def Add(self, dbPath=defaultNamedNotOptArg, transportLayer=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (3, 1)),dbPath
			, transportLayer)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
		return ret

	def AddConfiguration(self, cfgPath=defaultNamedNotOptArg):
		'method Add'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 1),),cfgPath
			)

	# Result is of type IMcECU3
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0581A64F-476C-4BC6-B865-B45B60F16FC5}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMcEthernetSettings(DispatchBaseClass):
	'IMcEthernetSettings Interface'
	CLSID = IID('{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}')
	coclass_clsid = IID('{0F4C589B-ED4C-4FA6-BBB6-53E20E807207}')

	_prop_map_get_ = {
		"Host": (1, 2, (8, 0), (), "Host", None),
		"Port": (3, 2, (3, 0), (), "Port", None),
		"Tcp": (2, 2, (3, 0), (), "Tcp", None),
	}
	_prop_map_put_ = {
		"Host": ((1, LCID, 4, 0),()),
		"Port": ((3, LCID, 4, 0),()),
		"Tcp": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcFlexRaySettings(DispatchBaseClass):
	'IMcFlexRaySettings Interface'
	CLSID = IID('{5D3422DB-CEFD-4D0E-93A9-84549709F577}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AppChannel": (3, 2, (3, 0), (), "AppChannel", None),
		"DtoBuffer": (1, 2, (3, 0), (), "DtoBuffer", None),
		"NodeAddress": (2, 2, (3, 0), (), "NodeAddress", None),
	}
	_prop_map_put_ = {
		"AppChannel": ((3, LCID, 4, 0),()),
		"DtoBuffer": ((1, LCID, 4, 0),()),
		"NodeAddress": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcFlexRaySettings1(DispatchBaseClass):
	'IMcFlexRaySettings1 Interface'
	CLSID = IID('{BB4D9F36-C012-4A47-8765-4361F619EB09}')
	coclass_clsid = IID('{02FCFE42-E542-4BEC-8D16-F024B05C9A7B}')

	_prop_map_get_ = {
		"AdditionalBufferCount": (5, 2, (3, 0), (), "AdditionalBufferCount", None),
		"AppChannel": (3, 2, (3, 0), (), "AppChannel", None),
		"DtoBuffer": (1, 2, (3, 0), (), "DtoBuffer", None),
		"MinBufferCount": (4, 2, (3, 0), (), "MinBufferCount", None),
		"NodeAddress": (2, 2, (3, 0), (), "NodeAddress", None),
	}
	_prop_map_put_ = {
		"AdditionalBufferCount": ((5, LCID, 4, 0),()),
		"AppChannel": ((3, LCID, 4, 0),()),
		"DtoBuffer": ((1, LCID, 4, 0),()),
		"MinBufferCount": ((4, LCID, 4, 0),()),
		"NodeAddress": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcLINSettings(DispatchBaseClass):
	'IMcLINSettings Interface'
	CLSID = IID('{E2575D00-23CD-4A17-8E3D-ACA974E63BFA}')
	coclass_clsid = IID('{AB1EEE97-FAE1-4762-AC91-DC5266B04946}')

	_prop_map_get_ = {
		"AppChannel": (1, 2, (3, 0), (), "AppChannel", None),
		"NAD": (4, 2, (3, 0), (), "NAD", None),
		"RequestId": (2, 2, (3, 0), (), "RequestId", None),
		"ResponseId": (3, 2, (3, 0), (), "ResponseId", None),
	}
	_prop_map_put_ = {
		"AppChannel": ((1, LCID, 4, 0),()),
		"NAD": ((4, LCID, 4, 0),()),
		"RequestId": ((2, LCID, 4, 0),()),
		"ResponseId": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcMeasurementGroup(DispatchBaseClass):
	'IMcMeasurementGroup Interface'
	CLSID = IID('{7AD9B166-03A7-42CD-8672-31B107A57806}')
	coclass_clsid = None

	def Activate(self):
		'method Activate'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (2, 2, (3, 0), (), "Active", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Parameters' returns object of type 'IMcParameters'
		"Parameters": (3, 2, (9, 0), (), "Parameters", '{9CE780C2-C24D-4134-8FF6-8BA66173B9D9}'),
	}
	_prop_map_put_ = {
		"Name": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcMeasurementGroup1(DispatchBaseClass):
	'IMcMeasurementGroup1 Interface'
	CLSID = IID('{97329791-2957-4E7A-AFA6-ABA838244E58}')
	coclass_clsid = IID('{82B94993-4095-4C8E-99E0-72D0CFD100F9}')

	def Activate(self):
		'method Activate'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def BeginUpdate(self):
		'method BeginUpdate'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def EndUpdate(self):
		'method EndUpdate'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (2, 2, (3, 0), (), "Active", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Parameters' returns object of type 'IMcParameters'
		"Parameters": (3, 2, (9, 0), (), "Parameters", '{9CE780C2-C24D-4134-8FF6-8BA66173B9D9}'),
	}
	_prop_map_put_ = {
		"Name": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcMeasurementGroups(DispatchBaseClass):
	'IMcMeasurementGroups Interface'
	CLSID = IID('{9D75612D-C799-4D08-9F96-3996AE447EF2}')
	coclass_clsid = IID('{8F2884CA-69EB-4102-983C-E6E5C2B387A3}')

	# Result is of type IMcMeasurementGroup1
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{97329791-2957-4E7A-AFA6-ABA838244E58}')
		return ret

	# Result is of type IMcMeasurementGroup1
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{97329791-2957-4E7A-AFA6-ABA838244E58}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{97329791-2957-4E7A-AFA6-ABA838244E58}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{97329791-2957-4E7A-AFA6-ABA838244E58}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMcParameter(DispatchBaseClass):
	'IMcParameter Interface'
	CLSID = IID('{98830394-D91B-4165-874A-9F3EA5885EA1}')
	coclass_clsid = IID('{9D815F19-D88D-4F34-9F49-D7DA65D7298C}')

	_prop_map_get_ = {
		"AutoRead": (3, 2, (3, 0), (), "AutoRead", None),
		"Configured": (5, 2, (3, 0), (), "Configured", None),
		"EventCycle": (4, 2, (3, 0), (), "EventCycle", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ReadMode": (2, 2, (3, 0), (), "ReadMode", None),
	}
	_prop_map_put_ = {
		"AutoRead": ((3, LCID, 4, 0),()),
		"Configured": ((5, LCID, 4, 0),()),
		"EventCycle": ((4, LCID, 4, 0),()),
		"ReadMode": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMcParameters(DispatchBaseClass):
	'IMcParameters Interface'
	CLSID = IID('{9CE780C2-C24D-4134-8FF6-8BA66173B9D9}')
	coclass_clsid = IID('{1895FF43-EFA7-4DCB-9E51-FAFFE6B60CAA}')

	# Result is of type IMcParameter
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{98830394-D91B-4165-874A-9F3EA5885EA1}')
		return ret

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{98830394-D91B-4165-874A-9F3EA5885EA1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{98830394-D91B-4165-874A-9F3EA5885EA1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMeasurement(DispatchBaseClass):
	'IMeasurement Interface'
	CLSID = IID('{CD866FB5-44BF-11D3-8538-00105A3E017B}')
	coclass_clsid = IID('{D54CED00-A490-11D2-A3D7-00609768736E}')

	def Animate(self):
		'method Animate'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def Break(self):
		'method Break'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	def Reset(self):
		'method Reset'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def Step(self):
		'method Step'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop (deprecated use StopEx instead)'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AnimationDelay": (9, 2, (3, 0), (), "AnimationDelay", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"AnimationDelay": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurement2(DispatchBaseClass):
	'IMeasurement2 Interface'
	CLSID = IID('{A844C1E0-F5CE-11D3-8612-00105A3E017B}')
	coclass_clsid = None

	def Animate(self):
		'method Animate'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def Break(self):
		'method Break'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	def Reset(self):
		'method Reset'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def Step(self):
		'method Step'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop (deprecated use StopEx instead)'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AnimationDelay": (9, 2, (3, 0), (), "AnimationDelay", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Running": (10, 2, (11, 0), (), "Running", None),
	}
	_prop_map_put_ = {
		"AnimationDelay": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurement3(DispatchBaseClass):
	'IMeasurement3 Interface'
	CLSID = IID('{B7C2B23A-B181-42C8-90A1-EAA9BB186CFE}')
	coclass_clsid = None

	def Animate(self):
		'method Animate'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def Break(self):
		'method Break'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	def NotifySimulinkReady(self):
		'method NotifySimulinkReady'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	def NotifyStartFromSimulink(self):
		'method NotifyStartFromSimulink'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	def Reset(self):
		'method Reset'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def Step(self):
		'method Step'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop (deprecated use StopEx instead)'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AnimationDelay": (9, 2, (3, 0), (), "AnimationDelay", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Running": (10, 2, (11, 0), (), "Running", None),
	}
	_prop_map_put_ = {
		"AnimationDelay": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurement4(DispatchBaseClass):
	'IMeasurement4 Interface'
	CLSID = IID('{C595EF75-B5B9-44A0-8811-BE195DE32B83}')
	coclass_clsid = None

	def Animate(self):
		'method Animate'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def Break(self):
		'method Break'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	def NotifySimulinkReady(self):
		'method NotifySimulinkReady'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	def NotifyStartFromSimulink(self):
		'method NotifyStartFromSimulink'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	def Reset(self):
		'method Reset'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def Step(self):
		'method Step'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop (deprecated use StopEx instead)'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def StopEx(self):
		'method StopEx'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AnimationDelay": (9, 2, (3, 0), (), "AnimationDelay", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Running": (10, 2, (11, 0), (), "Running", None),
	}
	_prop_map_put_ = {
		"AnimationDelay": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurement5(DispatchBaseClass):
	'IMeasurement5 Interface'
	CLSID = IID('{24CA2025-28DB-4982-AB11-C8BCB9C84782}')
	coclass_clsid = IID('{CD866FB6-44BF-11D3-8538-00105A3E017B}')

	def Animate(self):
		'method Animate'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def Break(self):
		'method Break'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	def NotifySimulinkReady(self):
		'method NotifySimulinkReady'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	def NotifyStartFromSimulink(self):
		'method NotifyStartFromSimulink'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	def Reset(self):
		'method Reset'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def Step(self):
		'method Step'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop (deprecated use StopEx instead)'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def StopEx(self):
		'method StopEx'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AnimationDelay": (9, 2, (3, 0), (), "AnimationDelay", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"MeasurementIndex": (14, 2, (3, 0), (), "MeasurementIndex", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Running": (10, 2, (11, 0), (), "Running", None),
	}
	_prop_map_put_ = {
		"AnimationDelay": ((9, LCID, 4, 0),()),
		"MeasurementIndex": ((14, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementSetup(DispatchBaseClass):
	'IMeasurementSetup Interface'
	CLSID = IID('{48461819-4502-11D3-8539-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusStatistics": (4, 2, (9, 0), (), "BusStatistics", None),
		"DataCollection": (6, 2, (9, 0), (), "DataCollection", None),
		"GraphicCollection": (7, 2, (9, 0), (), "GraphicCollection", None),
		"LoggingCollection": (8, 2, (9, 0), (), "LoggingCollection", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Statistics": (3, 2, (9, 0), (), "Statistics", None),
		"TraceCollection": (5, 2, (9, 0), (), "TraceCollection", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementSetup2(DispatchBaseClass):
	'IMeasurementSetup2 Interface'
	CLSID = IID('{1F83A4C3-84C3-4AEC-896B-2B02E7E66D8B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusStatistics": (4, 2, (9, 0), (), "BusStatistics", None),
		"DataCollection": (6, 2, (9, 0), (), "DataCollection", None),
		"GraphicCollection": (7, 2, (9, 0), (), "GraphicCollection", None),
		"LoggingCollection": (8, 2, (9, 0), (), "LoggingCollection", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Source": (9, 2, (9, 0), (), "Source", None),
		"Statistics": (3, 2, (9, 0), (), "Statistics", None),
		"TraceCollection": (5, 2, (9, 0), (), "TraceCollection", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementSetup3(DispatchBaseClass):
	'IMeasurementSetup3 Interface'
	CLSID = IID('{FD8C3E9D-7E1A-4CB7-BBA9-F8A18ADE703D}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusStatistics": (4, 2, (9, 0), (), "BusStatistics", None),
		"DataCollection": (6, 2, (9, 0), (), "DataCollection", None),
		"GraphicCollection": (7, 2, (9, 0), (), "GraphicCollection", None),
		"LoggingCollection": (8, 2, (9, 0), (), "LoggingCollection", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Source": (9, 2, (9, 0), (), "Source", None),
		"Statistics": (3, 2, (9, 0), (), "Statistics", None),
		"TraceCollection": (5, 2, (9, 0), (), "TraceCollection", None),
		"ViewSynchronization": (10, 2, (9, 0), (), "ViewSynchronization", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementSetup4(DispatchBaseClass):
	'IMeasurementSetup4 Interface'
	CLSID = IID('{2D583E50-64AB-435F-921C-44FD62076603}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusStatistics": (4, 2, (9, 0), (), "BusStatistics", None),
		"DataCollection": (6, 2, (9, 0), (), "DataCollection", None),
		"GraphicCollection": (7, 2, (9, 0), (), "GraphicCollection", None),
		"LoggingCollection": (8, 2, (9, 0), (), "LoggingCollection", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SendNodes": (11, 2, (9, 0), (), "SendNodes", None),
		"Source": (9, 2, (9, 0), (), "Source", None),
		"Statistics": (3, 2, (9, 0), (), "Statistics", None),
		"TraceCollection": (5, 2, (9, 0), (), "TraceCollection", None),
		"ViewSynchronization": (10, 2, (9, 0), (), "ViewSynchronization", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementSetup5(DispatchBaseClass):
	'IMeasurementSetup5 Interface'
	CLSID = IID('{93F4F447-DB35-4C9B-8EC8-56A65FB91D76}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusStatistics": (4, 2, (9, 0), (), "BusStatistics", None),
		"DataCollection": (6, 2, (9, 0), (), "DataCollection", None),
		"GraphicCollection": (7, 2, (9, 0), (), "GraphicCollection", None),
		"LoggingCollection": (8, 2, (9, 0), (), "LoggingCollection", None),
		"ParallelizationLevel": (12, 2, (3, 0), (), "ParallelizationLevel", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SendNodes": (11, 2, (9, 0), (), "SendNodes", None),
		"Source": (9, 2, (9, 0), (), "Source", None),
		"Statistics": (3, 2, (9, 0), (), "Statistics", None),
		"TraceCollection": (5, 2, (9, 0), (), "TraceCollection", None),
		"ViewSynchronization": (10, 2, (9, 0), (), "ViewSynchronization", None),
	}
	_prop_map_put_ = {
		"ParallelizationLevel": ((12, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementSetup6(DispatchBaseClass):
	'IMeasurementSetup6 Interface'
	CLSID = IID('{71A7F1BA-0648-4858-BA2A-E53D82C5F86C}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusStatistics": (4, 2, (9, 0), (), "BusStatistics", None),
		"DataCollection": (6, 2, (9, 0), (), "DataCollection", None),
		"GraphicCollection": (7, 2, (9, 0), (), "GraphicCollection", None),
		"LoggingCollection": (8, 2, (9, 0), (), "LoggingCollection", None),
		"ParallelizationLevel": (12, 2, (3, 0), (), "ParallelizationLevel", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SendNodes": (11, 2, (9, 0), (), "SendNodes", None),
		"Source": (9, 2, (9, 0), (), "Source", None),
		"Statistics": (3, 2, (9, 0), (), "Statistics", None),
		"TraceCollection": (5, 2, (9, 0), (), "TraceCollection", None),
		"VideoWindows": (13, 2, (9, 0), (), "VideoWindows", None),
		"ViewSynchronization": (10, 2, (9, 0), (), "ViewSynchronization", None),
	}
	_prop_map_put_ = {
		"ParallelizationLevel": ((12, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementSetup7(DispatchBaseClass):
	'IMeasurementSetup7 Interface'
	CLSID = IID('{A420AB31-1D1D-4744-AB74-5E5B6C208A61}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusStatistics": (4, 2, (9, 0), (), "BusStatistics", None),
		"DataCollection": (6, 2, (9, 0), (), "DataCollection", None),
		"GraphicCollection": (7, 2, (9, 0), (), "GraphicCollection", None),
		"LoggingCollection": (8, 2, (9, 0), (), "LoggingCollection", None),
		# Method 'OfflineSourceRoot' returns object of type 'IOfflineGroup'
		"OfflineSourceRoot": (14, 2, (9, 0), (), "OfflineSourceRoot", '{9637D60A-DC57-4A60-9D8F-268F86FE2E20}'),
		"ParallelizationLevel": (12, 2, (3, 0), (), "ParallelizationLevel", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SendNodes": (11, 2, (9, 0), (), "SendNodes", None),
		"Source": (9, 2, (9, 0), (), "Source", None),
		"Statistics": (3, 2, (9, 0), (), "Statistics", None),
		"TraceCollection": (5, 2, (9, 0), (), "TraceCollection", None),
		"VideoWindows": (13, 2, (9, 0), (), "VideoWindows", None),
		"ViewSynchronization": (10, 2, (9, 0), (), "ViewSynchronization", None),
	}
	_prop_map_put_ = {
		"ParallelizationLevel": ((12, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementSetup8(DispatchBaseClass):
	'IMeasurementSetup8 Interface'
	CLSID = IID('{5E75239C-77D2-43BE-B753-117E42CD933F}')
	coclass_clsid = IID('{4846181A-4502-11D3-8539-00105A3E017B}')

	# Result is of type IChannelMappingSet
	def CreateMappingSet(self, mappingSetName=defaultNamedNotOptArg):
		'method CreateMappingSet'
		ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((8, 1),),mappingSetName
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateMappingSet', '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
		return ret

	def ExportMappingSets(self, fileName=defaultNamedNotOptArg):
		'method ExportMappingSets'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	# Result is of type IChannelMappingSets
	def GetAllMappingSets(self):
		'method GetAllMappingSets'
		ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetAllMappingSets', '{32E135DC-1ABC-4D9D-8276-546393F7FCDE}')
		return ret

	# Result is of type IChannelMappingSet
	def GetMappingSetById(self, mappingSetId=defaultNamedNotOptArg):
		'method GetMappingSetById'
		ret = self._oleobj_.InvokeTypes(17, LCID, 1, (9, 0), ((8, 1),),mappingSetId
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingSetById', '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
		return ret

	# Result is of type IChannelMappingSet
	def GetMappingSetByName(self, mappingSetName=defaultNamedNotOptArg):
		'method GetMappingSetByName'
		ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((8, 1),),mappingSetName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingSetByName', '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
		return ret

	# Result is of type IChannelMappingSets
	def ImportMappingSets(self, fileName=defaultNamedNotOptArg, overwriteExisting=defaultNamedNotOptArg):
		'method ImportMappingSets'
		ret = self._oleobj_.InvokeTypes(20, LCID, 1, (9, 0), ((8, 1), (11, 1)),fileName
			, overwriteExisting)
		if ret is not None:
			ret = Dispatch(ret, 'ImportMappingSets', '{32E135DC-1ABC-4D9D-8276-546393F7FCDE}')
		return ret

	def RemoveMappingSet(self, pVal=defaultNamedNotOptArg):
		'method RemoveMappingSet'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((9, 1),),pVal
			)

	_prop_map_get_ = {
		"AnimationFactor": (23, 2, (5, 0), (), "AnimationFactor", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusStatistics": (4, 2, (9, 0), (), "BusStatistics", None),
		"DataCollection": (6, 2, (9, 0), (), "DataCollection", None),
		"GraphicCollection": (7, 2, (9, 0), (), "GraphicCollection", None),
		"LoggingCollection": (8, 2, (9, 0), (), "LoggingCollection", None),
		# Method 'OfflineSourceRoot' returns object of type 'IOfflineGroup'
		"OfflineSourceRoot": (14, 2, (9, 0), (), "OfflineSourceRoot", '{9637D60A-DC57-4A60-9D8F-268F86FE2E20}'),
		"ParallelizationLevel": (12, 2, (3, 0), (), "ParallelizationLevel", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SendNodes": (11, 2, (9, 0), (), "SendNodes", None),
		"Source": (9, 2, (9, 0), (), "Source", None),
		"Statistics": (3, 2, (9, 0), (), "Statistics", None),
		"TraceCollection": (5, 2, (9, 0), (), "TraceCollection", None),
		"VideoWindows": (13, 2, (9, 0), (), "VideoWindows", None),
		"ViewSynchronization": (10, 2, (9, 0), (), "ViewSynchronization", None),
		"WorkingMode": (22, 2, (3, 0), (), "WorkingMode", None),
	}
	_prop_map_put_ = {
		"AnimationFactor": ((23, LCID, 4, 0),()),
		"ParallelizationLevel": ((12, LCID, 4, 0),()),
		"WorkingMode": ((22, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMessage2(DispatchBaseClass):
	'IMessage2 Interface'
	CLSID = IID('{277C0778-3DF7-415C-8335-69BD2C81914F}')
	coclass_clsid = IID('{7AAAC432-B249-49E7-BD53-C397334DB8A3}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMessages(DispatchBaseClass):
	'IMessages Interface'
	CLSID = IID('{318BD7A4-9A09-4D38-A315-7946EDF75DE2}')
	coclass_clsid = IID('{6AE9A276-8F06-4DD6-ACB9-59FB2DA16E50}')

	# Result is of type IMessage2
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{277C0778-3DF7-415C-8335-69BD2C81914F}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{277C0778-3DF7-415C-8335-69BD2C81914F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{277C0778-3DF7-415C-8335-69BD2C81914F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IModule(DispatchBaseClass):
	'IModule Interface'
	CLSID = IID('{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (6, 2, (11, 0), (), "Enabled", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"Enabled": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModule2(DispatchBaseClass):
	'IModule2 Interface'
	CLSID = IID('{19A5E120-E223-46AA-BAA7-8D861C706F92}')
	coclass_clsid = IID('{79ACC0C0-2091-4D13-BFAE-650FF6F15E60}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (6, 2, (11, 0), (), "Enabled", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"References": (7, 2, (9, 0), (), "References", None),
	}
	_prop_map_put_ = {
		"Enabled": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModules(DispatchBaseClass):
	'IModules Interface'
	CLSID = IID('{5CB88F40-B525-436E-AC68-27D86DED6FE5}')
	coclass_clsid = IID('{1DB49512-0FB1-4B48-B8AD-EB0647121FC6}')

	# Result is of type IModule
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}')
		return ret

	# Result is of type IModule
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMostApplicationFilter(DispatchBaseClass):
	'IMostApplicationFilter Interface'
	CLSID = IID('{04EAB7E4-C61E-450F-93C0-63C4D404CE82}')
	coclass_clsid = IID('{8DC32A61-B317-4A52-A285-AC90B9F02367}')

	def AddApplicationEvent(self, sourceAddress=defaultNamedOptArg, destinationAddress=defaultNamedOptArg, fBlockID=defaultNamedOptArg, instanceID=defaultNamedOptArg
			, FunctionID=defaultNamedOptArg, opType=defaultNamedOptArg, telID=defaultNamedOptArg, telLen=defaultNamedOptArg):
		'method AddApplicationEvent'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17), (12, 17)),sourceAddress
			, destinationAddress, fBlockID, instanceID, FunctionID, opType
			, telID, telLen)

	def AddRawPacket(self, sourceAddress=defaultNamedOptArg, destinationAddress=defaultNamedOptArg, telLen=defaultNamedOptArg):
		'method AddRawPacket'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),sourceAddress
			, destinationAddress, telLen)

	def AddSystemMessage(self, sourceAddress=defaultNamedOptArg, destinationAddress=defaultNamedOptArg, rType=defaultNamedOptArg):
		'method AddSystemMessage'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((12, 17), (12, 17), (12, 17)),sourceAddress
			, destinationAddress, rType)

	def Clear(self):
		'method Clear'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FilterType": (4, 2, (3, 0), (), "FilterType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"FilterType": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMostDisassembler(DispatchBaseClass):
	'IMostDisassembler Interface'
	CLSID = IID('{640786C6-C75E-4EC3-88AA-DFC243B7D8B1}')
	coclass_clsid = IID('{C0921F97-0A08-477E-B383-D43BA8AEA47E}')

	def SymbolicMessageIDComponents(self, fBlockID=defaultNamedNotOptArg, instanceID=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg, opTypeID=defaultNamedNotOptArg
			, pFBlockName=pythoncom.Missing, pFunctionName=pythoncom.Missing, pOpTypeName=pythoncom.Missing):
		'method SymbolicMessageIDComponents'
		return self._ApplyTypes_(3, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (16392, 2), (16392, 2), (16392, 2)), 'SymbolicMessageIDComponents', None,fBlockID
			, instanceID, FunctionID, opTypeID, pFBlockName, pFunctionName
			, pOpTypeName)

	def SymbolicParameterList1(self, dataLength=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg, maxParams=65535):
		'method SymbolicParameterList1'
		return self._ApplyTypes_(4, 1, (12, 0), ((3, 1), (12, 1), (3, 49)), 'SymbolicParameterList1', None,dataLength
			, dataArray, maxParams)

	def SymbolicParameterList2(self, fBlockID=defaultNamedNotOptArg, instanceID=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg, opTypeID=defaultNamedNotOptArg
			, dataLength=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg, maxParams=65535):
		'method SymbolicParameterList2'
		return self._ApplyTypes_(5, 1, (12, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (3, 49)), 'SymbolicParameterList2', None,fBlockID
			, instanceID, FunctionID, opTypeID, dataLength, dataArray
			, maxParams)

	def ThisMessageIDComponents(self, fBlockID=pythoncom.Missing, instanceID=pythoncom.Missing, FunctionID=pythoncom.Missing, opTypeID=pythoncom.Missing):
		'method ThisMessageIDComponents'
		return self._ApplyTypes_(6, 1, (24, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'ThisMessageIDComponents', None,fBlockID
			, instanceID, FunctionID, opTypeID)

	def ThisSymbolicMessageIDComponents(self, pFBlockName=pythoncom.Missing, pFunctionName=pythoncom.Missing, pOpTypeName=pythoncom.Missing):
		'method ThisSymbolicMessageIDComponents'
		return self._ApplyTypes_(7, 1, (3, 0), ((16392, 2), (16392, 2), (16392, 2)), 'ThisSymbolicMessageIDComponents', None,pFBlockName
			, pFunctionName, pOpTypeName)

	def ThisSymbolicParameterList(self, maxParams=65535):
		'method ThisSymbolicParameterList'
		return self._ApplyTypes_(8, 1, (12, 0), ((3, 49),), 'ThisSymbolicParameterList', None,maxParams
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMostNetworkInterface(DispatchBaseClass):
	'IMostNetworkInterface Interface'
	CLSID = IID('{BA8F7E90-DB49-403F-BD00-607BDF234358}')
	coclass_clsid = None

	def GenerateLightError(self, noLightDuration=defaultNamedNotOptArg, lightDuration=defaultNamedNotOptArg, cycles=defaultNamedNotOptArg):
		'method GenerateLightError'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),noLightDuration
			, lightDuration, cycles)

	def GenerateLockError(self, noLockDuration=defaultNamedNotOptArg, lockDuration=defaultNamedNotOptArg, cycles=defaultNamedNotOptArg):
		'method GenerateLockError'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),noLockDuration
			, lockDuration, cycles)

	def OutputAMS(self, destinationAddress=defaultNamedNotOptArg, fBlockID=defaultNamedNotOptArg, instanceID=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg
			, opType=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
		'method OutputAMS'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),destinationAddress
			, fBlockID, instanceID, FunctionID, opType, dataLength
			, dataArray)

	def OutputCMS(self, rType=defaultNamedNotOptArg, destinationAddress=defaultNamedNotOptArg, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
		'method OutputCMS'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),rType
			, destinationAddress, DLC, dataArray)

	def OutputPacket(self, destinationAddress=defaultNamedNotOptArg, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
		'method OutputPacket'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 1)),destinationAddress
			, DLC, dataArray)

	def ReadRegister(self, chip=defaultNamedNotOptArg, Offset=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg):
		'method ReadRegister'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),chip
			, Offset, dataLength)

	def Twinkle(self):
		'method Twinkle'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

	def WriteRegister(self, chip=defaultNamedNotOptArg, Offset=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
		'method WriteRegister'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),chip
			, Offset, dataLength, dataArray)

	_prop_map_get_ = {
		"AllBypass": (7, 2, (3, 0), (), "AllBypass", None),
		"AllocationTable": (16, 2, (12, 0), (), "AllocationTable", None),
		"AlternativePacketAddress": (6, 2, (3, 0), (), "AlternativePacketAddress", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"AsynchronousSpy": (10, 2, (3, 0), (), "AsynchronousSpy", None),
		"Channel": (14, 2, (3, 0), (), "Channel", None),
		"ControlSpy": (9, 2, (3, 0), (), "ControlSpy", None),
		"GroupAddress": (5, 2, (3, 0), (), "GroupAddress", None),
		"Lock": (13, 2, (3, 0), (), "Lock", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NodeAddress": (4, 2, (3, 0), (), "NodeAddress", None),
		"NodePosition": (15, 2, (3, 0), (), "NodePosition", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RxLight": (12, 2, (3, 0), (), "RxLight", None),
		"TimingMode": (8, 2, (3, 0), (), "TimingMode", None),
	}
	_prop_map_put_ = {
		"AllBypass": ((7, LCID, 4, 0),()),
		"AlternativePacketAddress": ((6, LCID, 4, 0),()),
		"AsynchronousSpy": ((10, LCID, 4, 0),()),
		"ControlSpy": ((9, LCID, 4, 0),()),
		"GroupAddress": ((5, LCID, 4, 0),()),
		"NodeAddress": ((4, LCID, 4, 0),()),
		"TimingMode": ((8, LCID, 4, 0),()),
		"TxLight": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMostNetworkInterface2(DispatchBaseClass):
	'IMostNetworkInterface2 Interface'
	CLSID = IID('{96A3DA17-7495-4E69-92CB-54986C3020AE}')
	coclass_clsid = IID('{1465BF57-23AD-4253-A4E9-52F615FAC47D}')

	def GenerateLightError(self, noLightDuration=defaultNamedNotOptArg, lightDuration=defaultNamedNotOptArg, cycles=defaultNamedNotOptArg):
		'method GenerateLightError'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),noLightDuration
			, lightDuration, cycles)

	def GenerateLockError(self, noLockDuration=defaultNamedNotOptArg, lockDuration=defaultNamedNotOptArg, cycles=defaultNamedNotOptArg):
		'method GenerateLockError'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),noLockDuration
			, lockDuration, cycles)

	def OutputAMS(self, destinationAddress=defaultNamedNotOptArg, fBlockID=defaultNamedNotOptArg, instanceID=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg
			, opType=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
		'method OutputAMS'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1)),destinationAddress
			, fBlockID, instanceID, FunctionID, opType, dataLength
			, dataArray)

	def OutputCMS(self, rType=defaultNamedNotOptArg, destinationAddress=defaultNamedNotOptArg, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
		'method OutputCMS'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),rType
			, destinationAddress, DLC, dataArray)

	def OutputPacket(self, destinationAddress=defaultNamedNotOptArg, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
		'method OutputPacket'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((3, 1), (3, 1), (12, 1)),destinationAddress
			, DLC, dataArray)

	def ReadRegister(self, chip=defaultNamedNotOptArg, Offset=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg):
		'method ReadRegister'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),chip
			, Offset, dataLength)

	def Twinkle(self):
		'method Twinkle'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), (),)

	def WriteRegister(self, chip=defaultNamedNotOptArg, Offset=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
		'method WriteRegister'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (12, 1)),chip
			, Offset, dataLength, dataArray)

	_prop_map_get_ = {
		"AllBypass": (7, 2, (3, 0), (), "AllBypass", None),
		"AllocationTable": (16, 2, (12, 0), (), "AllocationTable", None),
		"AlternativePacketAddress": (6, 2, (3, 0), (), "AlternativePacketAddress", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ApplicationFilter": (26, 2, (9, 0), (), "ApplicationFilter", None),
		"AsynchronousSpy": (10, 2, (3, 0), (), "AsynchronousSpy", None),
		"AsynchronousSpyMode": (27, 2, (3, 0), (), "AsynchronousSpyMode", None),
		"Channel": (14, 2, (3, 0), (), "Channel", None),
		"ControlSpy": (9, 2, (3, 0), (), "ControlSpy", None),
		"EventSources": (25, 2, (3, 0), (), "EventSources", None),
		"GroupAddress": (5, 2, (3, 0), (), "GroupAddress", None),
		"Lock": (13, 2, (3, 0), (), "Lock", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NodeAddress": (4, 2, (3, 0), (), "NodeAddress", None),
		"NodePosition": (15, 2, (3, 0), (), "NodePosition", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RxLight": (12, 2, (3, 0), (), "RxLight", None),
		"TimingMode": (8, 2, (3, 0), (), "TimingMode", None),
	}
	_prop_map_put_ = {
		"AllBypass": ((7, LCID, 4, 0),()),
		"AlternativePacketAddress": ((6, LCID, 4, 0),()),
		"AsynchronousSpy": ((10, LCID, 4, 0),()),
		"AsynchronousSpyMode": ((27, LCID, 4, 0),()),
		"ControlSpy": ((9, LCID, 4, 0),()),
		"EventSources": ((25, LCID, 4, 0),()),
		"GroupAddress": ((5, LCID, 4, 0),()),
		"NodeAddress": ((4, LCID, 4, 0),()),
		"TimingMode": ((8, LCID, 4, 0),()),
		"TxLight": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INamespace(DispatchBaseClass):
	'INamespace Interface'
	CLSID = IID('{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Variables": (4, 2, (9, 0), (), "Variables", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INamespace2(DispatchBaseClass):
	'INamespace2 Interface'
	CLSID = IID('{E6CA6D70-305C-48F1-9110-E9C10681A317}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Namespaces": (5, 2, (9, 0), (), "Namespaces", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Variables": (4, 2, (9, 0), (), "Variables", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INamespace3(DispatchBaseClass):
	'INamespace3 Interface'
	CLSID = IID('{AAF3953B-C75D-49EF-9FA6-40C7E1454B28}')
	coclass_clsid = IID('{A76DB45F-6BBD-46CD-9B92-4AE56C6AE44F}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (6, 2, (8, 0), (), "Comment", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Namespaces": (5, 2, (9, 0), (), "Namespaces", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Variables": (4, 2, (9, 0), (), "Variables", None),
	}
	_prop_map_put_ = {
		"Comment": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INamespaces(DispatchBaseClass):
	'INamespaces Interface'
	CLSID = IID('{364BE355-1A0A-42B5-88A5-F30C425E680B}')
	coclass_clsid = None

	# Result is of type INamespace
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
		return ret

	# Result is of type INamespace
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class INamespaces2(DispatchBaseClass):
	'INamespaces2 Interface'
	CLSID = IID('{A3A324E4-AD29-424B-985A-45D5CBA39AA9}')
	coclass_clsid = IID('{DD6D4307-85D2-4869-84F8-72DE34DDFBC8}')

	# Result is of type INamespace
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
		return ret

	def CreateVariableArray(self, Variables=defaultNamedNotOptArg):
		'method CreateVariableArray'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((12, 1),),Variables
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateVariableArray', None)
		return ret

	# Result is of type INamespace
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class INetwork(DispatchBaseClass):
	'INetwork Interface'
	CLSID = IID('{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Devices": (5, 2, (9, 0), (), "Devices", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NetworkInterfaces": (4, 2, (9, 0), (), "NetworkInterfaces", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Name": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INetwork2(DispatchBaseClass):
	'INetwork2 Interface'
	CLSID = IID('{D2211BE8-670B-43E5-9897-F3E605807A0D}')
	coclass_clsid = IID('{1B1447DB-1D6C-4637-B985-35FB7381960C}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusType": (6, 2, (3, 0), (), "BusType", None),
		"Devices": (5, 2, (9, 0), (), "Devices", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NetworkInterfaces": (4, 2, (9, 0), (), "NetworkInterfaces", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Name": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INetworkInterface(DispatchBaseClass):
	'INetworkInterface Interface'
	CLSID = IID('{3A78038C-7975-4B22-B6E6-3B7FA14DB05F}')
	coclass_clsid = IID('{5F8F2157-19DA-4120-8847-7B93520F5584}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INetworkInterfaces(DispatchBaseClass):
	'INetworkInterfaces Interface'
	CLSID = IID('{4AE8E10D-C377-4D91-8B98-93001D597118}')
	coclass_clsid = IID('{D6ABB000-1FE9-464B-A7BB-2C8BDC2155AC}')

	# Result is of type INetworkInterface
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{3A78038C-7975-4B22-B6E6-3B7FA14DB05F}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{3A78038C-7975-4B22-B6E6-3B7FA14DB05F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{3A78038C-7975-4B22-B6E6-3B7FA14DB05F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class INetworks(DispatchBaseClass):
	'INetworks Interface'
	CLSID = IID('{0C8F9BF3-B15B-45C8-B3D2-0FDCD3D7C1CF}')
	coclass_clsid = IID('{C4D6EC2F-9E5B-46B7-9E29-543F160CCEA2}')

	# Result is of type INetwork
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}')
		return ret

	# Result is of type INetwork
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class INode(DispatchBaseClass):
	'INode Interface'
	CLSID = IID('{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
	coclass_clsid = None

	def Compile(self):
		'method Compile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def DriftJitter(self, min=defaultNamedNotOptArg, max=defaultNamedNotOptArg):
		'method DriftJitter'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((4, 1), (4, 1)),min
			, max)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DriftJitterActive": (10, 2, (11, 0), (), "DriftJitterActive", None),
		"DriftJitterFromDb": (11, 2, (11, 0), (), "DriftJitterFromDb", None),
		"DriftJitterMax": (42, 2, (4, 0), (), "DriftJitterMax", None),
		"DriftJitterMin": (41, 2, (4, 0), (), "DriftJitterMin", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StartDelay": (9, 2, (19, 0), (), "StartDelay", None),
		"StartDelayActive": (7, 2, (11, 0), (), "StartDelayActive", None),
		"StartDelayFromDb": (8, 2, (11, 0), (), "StartDelayFromDb", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"DriftJitterActive": ((10, LCID, 4, 0),()),
		"DriftJitterFromDb": ((11, LCID, 4, 0),()),
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"StartDelay": ((9, LCID, 4, 0),()),
		"StartDelayActive": ((7, LCID, 4, 0),()),
		"StartDelayFromDb": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INode2(DispatchBaseClass):
	'INode2 Interface'
	CLSID = IID('{B2352A28-276B-448F-B37E-84501CA4FACC}')
	coclass_clsid = None

	def Compile(self):
		'method Compile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def DriftJitter(self, min=defaultNamedNotOptArg, max=defaultNamedNotOptArg):
		'method DriftJitter'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((4, 1), (4, 1)),min
			, max)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DriftJitterActive": (10, 2, (11, 0), (), "DriftJitterActive", None),
		"DriftJitterFromDb": (11, 2, (11, 0), (), "DriftJitterFromDb", None),
		"DriftJitterMax": (42, 2, (4, 0), (), "DriftJitterMax", None),
		"DriftJitterMin": (41, 2, (4, 0), (), "DriftJitterMin", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StartDelay": (9, 2, (19, 0), (), "StartDelay", None),
		"StartDelayActive": (7, 2, (11, 0), (), "StartDelayActive", None),
		"StartDelayFromDb": (8, 2, (11, 0), (), "StartDelayFromDb", None),
		"TestModule": (46, 2, (11, 0), (), "TestModule", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"DriftJitterActive": ((10, LCID, 4, 0),()),
		"DriftJitterFromDb": ((11, LCID, 4, 0),()),
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"StartDelay": ((9, LCID, 4, 0),()),
		"StartDelayActive": ((7, LCID, 4, 0),()),
		"StartDelayFromDb": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INode3(DispatchBaseClass):
	'INode3 Interface'
	CLSID = IID('{6C852CF1-36B8-429B-9929-9663BEAE689D}')
	coclass_clsid = None

	def Compile(self):
		'method Compile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def DriftJitter(self, min=defaultNamedNotOptArg, max=defaultNamedNotOptArg):
		'method DriftJitter'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((4, 1), (4, 1)),min
			, max)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DriftJitterActive": (10, 2, (11, 0), (), "DriftJitterActive", None),
		"DriftJitterFromDb": (11, 2, (11, 0), (), "DriftJitterFromDb", None),
		"DriftJitterMax": (42, 2, (4, 0), (), "DriftJitterMax", None),
		"DriftJitterMin": (41, 2, (4, 0), (), "DriftJitterMin", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Inputs": (47, 2, (9, 0), (), "Inputs", None),
		"Modules": (16, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Outputs": (48, 2, (9, 0), (), "Outputs", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StartDelay": (9, 2, (19, 0), (), "StartDelay", None),
		"StartDelayActive": (7, 2, (11, 0), (), "StartDelayActive", None),
		"StartDelayFromDb": (8, 2, (11, 0), (), "StartDelayFromDb", None),
		"TestModule": (46, 2, (11, 0), (), "TestModule", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"DriftJitterActive": ((10, LCID, 4, 0),()),
		"DriftJitterFromDb": ((11, LCID, 4, 0),()),
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"StartDelay": ((9, LCID, 4, 0),()),
		"StartDelayActive": ((7, LCID, 4, 0),()),
		"StartDelayFromDb": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INode4(DispatchBaseClass):
	'INode4 Interface'
	CLSID = IID('{25020040-8368-4238-AE0B-C0F7DCCA2F31}')
	coclass_clsid = None

	def Compile(self):
		'method Compile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def DriftJitter(self, min=defaultNamedNotOptArg, max=defaultNamedNotOptArg):
		'method DriftJitter'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((4, 1), (4, 1)),min
			, max)

	def ReleaseNM(self):
		'method ReleaseNM'
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), (),)

	def RequestNM(self):
		'method RequestNM'
		return self._oleobj_.InvokeTypes(51, LCID, 1, (24, 0), (),)

	def StartNM(self):
		'method StartNM'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), (),)

	def StopNM(self):
		'method StopNM'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DriftJitterActive": (10, 2, (11, 0), (), "DriftJitterActive", None),
		"DriftJitterFromDb": (11, 2, (11, 0), (), "DriftJitterFromDb", None),
		"DriftJitterMax": (42, 2, (4, 0), (), "DriftJitterMax", None),
		"DriftJitterMin": (41, 2, (4, 0), (), "DriftJitterMin", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Inputs": (47, 2, (9, 0), (), "Inputs", None),
		"Modules": (16, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Outputs": (48, 2, (9, 0), (), "Outputs", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StartDelay": (9, 2, (19, 0), (), "StartDelay", None),
		"StartDelayActive": (7, 2, (11, 0), (), "StartDelayActive", None),
		"StartDelayFromDb": (8, 2, (11, 0), (), "StartDelayFromDb", None),
		"StatusNM": (53, 2, (3, 0), (), "StatusNM", None),
		"TestModule": (46, 2, (11, 0), (), "TestModule", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"DriftJitterActive": ((10, LCID, 4, 0),()),
		"DriftJitterFromDb": ((11, LCID, 4, 0),()),
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"StartDelay": ((9, LCID, 4, 0),()),
		"StartDelayActive": ((7, LCID, 4, 0),()),
		"StartDelayFromDb": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INode5(DispatchBaseClass):
	'INode5 Interface'
	CLSID = IID('{29AD5000-AFEF-448F-A349-29B63FC16DE6}')
	coclass_clsid = None

	def Compile(self):
		'method Compile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def DriftJitter(self, min=defaultNamedNotOptArg, max=defaultNamedNotOptArg):
		'method DriftJitter'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((4, 1), (4, 1)),min
			, max)

	def ReleaseNM(self):
		'method ReleaseNM'
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), (),)

	def RequestNM(self):
		'method RequestNM'
		return self._oleobj_.InvokeTypes(51, LCID, 1, (24, 0), (),)

	def StartNM(self):
		'method StartNM'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), (),)

	def StopNM(self):
		'method StopNM'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DriftJitterActive": (10, 2, (11, 0), (), "DriftJitterActive", None),
		"DriftJitterFixedDeviation": (56, 2, (4, 0), (), "DriftJitterFixedDeviation", None),
		"DriftJitterFromDb": (11, 2, (11, 0), (), "DriftJitterFromDb", None),
		"DriftJitterMax": (42, 2, (4, 0), (), "DriftJitterMax", None),
		"DriftJitterMin": (41, 2, (4, 0), (), "DriftJitterMin", None),
		"DriftJitterMode": (55, 2, (3, 0), (), "DriftJitterMode", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Inputs": (47, 2, (9, 0), (), "Inputs", None),
		"Modules": (16, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Outputs": (48, 2, (9, 0), (), "Outputs", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StartDelay": (9, 2, (19, 0), (), "StartDelay", None),
		"StartDelayActive": (7, 2, (11, 0), (), "StartDelayActive", None),
		"StartDelayFromDb": (8, 2, (11, 0), (), "StartDelayFromDb", None),
		"StatusNM": (53, 2, (3, 0), (), "StatusNM", None),
		"TestModule": (46, 2, (11, 0), (), "TestModule", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"DriftJitterActive": ((10, LCID, 4, 0),()),
		"DriftJitterFixedDeviation": ((56, LCID, 4, 0),()),
		"DriftJitterFromDb": ((11, LCID, 4, 0),()),
		"DriftJitterMode": ((55, LCID, 4, 0),()),
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"StartDelay": ((9, LCID, 4, 0),()),
		"StartDelayActive": ((7, LCID, 4, 0),()),
		"StartDelayFromDb": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INode6(DispatchBaseClass):
	'INode6 Interface'
	CLSID = IID('{C4F5ABAD-5B61-4C11-823C-CBA26599A8AD}')
	coclass_clsid = None

	def Compile(self):
		'method Compile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def DriftJitter(self, min=defaultNamedNotOptArg, max=defaultNamedNotOptArg):
		'method DriftJitter'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((4, 1), (4, 1)),min
			, max)

	def ReleaseNM(self):
		'method ReleaseNM'
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), (),)

	def RequestNM(self):
		'method RequestNM'
		return self._oleobj_.InvokeTypes(51, LCID, 1, (24, 0), (),)

	def StartNM(self):
		'method StartNM'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), (),)

	def StopNM(self):
		'method StopNM'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CANOpen": (57, 2, (9, 0), (), "CANOpen", None),
		"DriftJitterActive": (10, 2, (11, 0), (), "DriftJitterActive", None),
		"DriftJitterFixedDeviation": (56, 2, (4, 0), (), "DriftJitterFixedDeviation", None),
		"DriftJitterFromDb": (11, 2, (11, 0), (), "DriftJitterFromDb", None),
		"DriftJitterMax": (42, 2, (4, 0), (), "DriftJitterMax", None),
		"DriftJitterMin": (41, 2, (4, 0), (), "DriftJitterMin", None),
		"DriftJitterMode": (55, 2, (3, 0), (), "DriftJitterMode", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Inputs": (47, 2, (9, 0), (), "Inputs", None),
		"Modules": (16, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Outputs": (48, 2, (9, 0), (), "Outputs", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StartDelay": (9, 2, (19, 0), (), "StartDelay", None),
		"StartDelayActive": (7, 2, (11, 0), (), "StartDelayActive", None),
		"StartDelayFromDb": (8, 2, (11, 0), (), "StartDelayFromDb", None),
		"StatusNM": (53, 2, (3, 0), (), "StatusNM", None),
		"TestModule": (46, 2, (11, 0), (), "TestModule", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"DriftJitterActive": ((10, LCID, 4, 0),()),
		"DriftJitterFixedDeviation": ((56, LCID, 4, 0),()),
		"DriftJitterFromDb": ((11, LCID, 4, 0),()),
		"DriftJitterMode": ((55, LCID, 4, 0),()),
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"StartDelay": ((9, LCID, 4, 0),()),
		"StartDelayActive": ((7, LCID, 4, 0),()),
		"StartDelayFromDb": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INode7(DispatchBaseClass):
	'INode7 Interface'
	CLSID = IID('{C97D381B-ABA0-4D5F-80DB-78B1D67BD73D}')
	coclass_clsid = None

	def Compile(self):
		'method Compile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def DriftJitter(self, min=defaultNamedNotOptArg, max=defaultNamedNotOptArg):
		'method DriftJitter'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((4, 1), (4, 1)),min
			, max)

	def ReleaseNM(self):
		'method ReleaseNM'
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), (),)

	def RequestNM(self):
		'method RequestNM'
		return self._oleobj_.InvokeTypes(51, LCID, 1, (24, 0), (),)

	def StartNM(self):
		'method StartNM'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), (),)

	def StopNM(self):
		'method StopNM'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CANOpen": (57, 2, (9, 0), (), "CANOpen", None),
		"DriftJitterActive": (10, 2, (11, 0), (), "DriftJitterActive", None),
		"DriftJitterFixedDeviation": (56, 2, (4, 0), (), "DriftJitterFixedDeviation", None),
		"DriftJitterFromDb": (11, 2, (11, 0), (), "DriftJitterFromDb", None),
		"DriftJitterMax": (42, 2, (4, 0), (), "DriftJitterMax", None),
		"DriftJitterMin": (41, 2, (4, 0), (), "DriftJitterMin", None),
		"DriftJitterMode": (55, 2, (3, 0), (), "DriftJitterMode", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Inputs": (47, 2, (9, 0), (), "Inputs", None),
		"Modules": (16, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Outputs": (48, 2, (9, 0), (), "Outputs", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StartDelay": (9, 2, (19, 0), (), "StartDelay", None),
		"StartDelayActive": (7, 2, (11, 0), (), "StartDelayActive", None),
		"StartDelayFromDb": (8, 2, (11, 0), (), "StartDelayFromDb", None),
		"StatusNM": (53, 2, (3, 0), (), "StatusNM", None),
		"TcpIpStackSetting": (58, 2, (9, 0), (), "TcpIpStackSetting", None),
		"TestModule": (46, 2, (11, 0), (), "TestModule", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"DriftJitterActive": ((10, LCID, 4, 0),()),
		"DriftJitterFixedDeviation": ((56, LCID, 4, 0),()),
		"DriftJitterFromDb": ((11, LCID, 4, 0),()),
		"DriftJitterMode": ((55, LCID, 4, 0),()),
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"StartDelay": ((9, LCID, 4, 0),()),
		"StartDelayActive": ((7, LCID, 4, 0),()),
		"StartDelayFromDb": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INode8(DispatchBaseClass):
	'INode8 Interface'
	CLSID = IID('{184B1F6C-1BF1-487C-8D0C-EB936DFE395D}')
	coclass_clsid = IID('{FD96E0A3-BE9F-4B65-8619-D839ABA29CAB}')

	def AttachBus(self, aBus=defaultNamedNotOptArg):
		'method AttachBus'
		return self._oleobj_.InvokeTypes(61, LCID, 1, (24, 0), ((9, 1),),aBus
			)

	def Compile(self):
		'method Compile'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def DetachBus(self, aBus=defaultNamedNotOptArg):
		'method DetachBus'
		return self._oleobj_.InvokeTypes(62, LCID, 1, (24, 0), ((9, 1),),aBus
			)

	def DriftJitter(self, min=defaultNamedNotOptArg, max=defaultNamedNotOptArg):
		'method DriftJitter'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((4, 1), (4, 1)),min
			, max)

	def IsBusAttached(self, aBus=defaultNamedNotOptArg):
		'method IsBusAttached'
		return self._oleobj_.InvokeTypes(63, LCID, 1, (11, 0), ((9, 1),),aBus
			)

	def ReleaseNM(self):
		'method ReleaseNM'
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), (),)

	def RequestNM(self):
		'method RequestNM'
		return self._oleobj_.InvokeTypes(51, LCID, 1, (24, 0), (),)

	def StartNM(self):
		'method StartNM'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), (),)

	def StopNM(self):
		'method StopNM'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"AttachedBuses": (60, 2, (9, 0), (), "AttachedBuses", None),
		"CANOpen": (57, 2, (9, 0), (), "CANOpen", None),
		"DriftJitterActive": (10, 2, (11, 0), (), "DriftJitterActive", None),
		"DriftJitterFixedDeviation": (56, 2, (4, 0), (), "DriftJitterFixedDeviation", None),
		"DriftJitterFromDb": (11, 2, (11, 0), (), "DriftJitterFromDb", None),
		"DriftJitterMax": (42, 2, (4, 0), (), "DriftJitterMax", None),
		"DriftJitterMin": (41, 2, (4, 0), (), "DriftJitterMin", None),
		"DriftJitterMode": (55, 2, (3, 0), (), "DriftJitterMode", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Inputs": (47, 2, (9, 0), (), "Inputs", None),
		"IsGateway": (59, 2, (11, 0), (), "IsGateway", None),
		"Modules": (16, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Outputs": (48, 2, (9, 0), (), "Outputs", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StartDelay": (9, 2, (19, 0), (), "StartDelay", None),
		"StartDelayActive": (7, 2, (11, 0), (), "StartDelayActive", None),
		"StartDelayFromDb": (8, 2, (11, 0), (), "StartDelayFromDb", None),
		"StatusNM": (53, 2, (3, 0), (), "StatusNM", None),
		"TcpIpStackSetting": (58, 2, (9, 0), (), "TcpIpStackSetting", None),
		"TestModule": (46, 2, (11, 0), (), "TestModule", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"DriftJitterActive": ((10, LCID, 4, 0),()),
		"DriftJitterFixedDeviation": ((56, LCID, 4, 0),()),
		"DriftJitterFromDb": ((11, LCID, 4, 0),()),
		"DriftJitterMode": ((55, LCID, 4, 0),()),
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"StartDelay": ((9, LCID, 4, 0),()),
		"StartDelayActive": ((7, LCID, 4, 0),()),
		"StartDelayFromDb": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INodes(DispatchBaseClass):
	'INodes Interface'
	CLSID = IID('{9E2F76E3-D239-11D3-85E6-00105A3E017B}')
	coclass_clsid = None

	# Result is of type INode
	def Add(self, FullName=defaultNamedNotOptArg, after=defaultNamedOptArg, before=defaultNamedOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),FullName
			, after, before)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type INode
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class INodes2(DispatchBaseClass):
	'INodes2 Interface'
	CLSID = IID('{681BB5AD-8130-4BB7-A968-8C733E8351C2}')
	coclass_clsid = IID('{9E2F76E4-D239-11D3-85E6-00105A3E017B}')

	# Result is of type INode
	def Add(self, FullName=defaultNamedNotOptArg, after=defaultNamedOptArg, before=defaultNamedOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (12, 17), (12, 17)),FullName
			, after, before)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type INode
	def AddTestModule(self, FullName=defaultNamedNotOptArg):
		'method AddTestModule'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTestModule', '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
		return ret

	# Result is of type INode
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9E2F76EB-D239-11D3-85E6-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOfflineGroup(DispatchBaseClass):
	'IOfflineGroup Interface'
	CLSID = IID('{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')
	coclass_clsid = None

	def ExportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ExportMappingTable'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	# Result is of type IOfflineSourceExes
	def GetChildren(self):
		'method GetChildren'
		ret = self._oleobj_.InvokeTypes(104, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetChildren', '{73FF6BA0-1C7C-4B28-BD63-7A44BEBA0602}')
		return ret

	# Result is of type IOfflineGroups
	def GetGroups(self):
		'method GetGroups'
		ret = self._oleobj_.InvokeTypes(105, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetGroups', '{1618BDCC-A2BB-40E1-A136-E569F81B7933}')
		return ret

	# Result is of type IOfflineImageSequences
	def GetImageSequences(self):
		'method GetImageSequences'
		ret = self._oleobj_.InvokeTypes(108, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetImageSequences', '{12371007-ACAA-4ADE-BEB1-3C7B3D13738E}')
		return ret

	# Result is of type IOfflineLogFiles
	def GetLogFiles(self):
		'method GetLogFiles'
		ret = self._oleobj_.InvokeTypes(106, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetLogFiles', '{483ADE4F-A34F-45AD-90E8-2DBD7FC3A2DC}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTable(self, busTypeParam=defaultNamedNotOptArg):
		'method GetMappingTable'
		ret = self._oleobj_.InvokeTypes(100, LCID, 1, (9, 0), ((3, 1),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTable', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTableByBusName(self, busName=defaultNamedNotOptArg):
		'method GetMappingTableByBusName'
		ret = self._oleobj_.InvokeTypes(101, LCID, 1, (9, 0), ((8, 1),),busName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTableByBusName', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IOfflineVideos
	def GetVideoSources(self):
		'method GetVideoSources'
		ret = self._oleobj_.InvokeTypes(107, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetVideoSources', '{BE54D021-BE83-44E0-B9EC-7EDE4A9BC621}')
		return ret

	def ImportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ImportMappingTable'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Targets": (7, 2, (9, 0), (), "Targets", None),
		# Method 'TimeSettings' returns object of type 'ITimeSettings'
		"TimeSettings": (6, 2, (9, 0), (), "TimeSettings", '{DA475018-9635-4372-9F22-B3A2FB91BFCC}'),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineGroup2(DispatchBaseClass):
	'IOfflineGroup2 Interface'
	CLSID = IID('{6B6D944A-C4B1-4862-9C06-0420FF60FB5F}')
	coclass_clsid = IID('{E27D9B1D-5DFD-4922-9DB8-50BC07867F3A}')

	def ExportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ExportMappingTable'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	# Result is of type IOfflineSourceExes
	def GetChildren(self):
		'method GetChildren'
		ret = self._oleobj_.InvokeTypes(104, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetChildren', '{73FF6BA0-1C7C-4B28-BD63-7A44BEBA0602}')
		return ret

	# Result is of type IOfflineGroups
	def GetGroups(self):
		'method GetGroups'
		ret = self._oleobj_.InvokeTypes(105, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetGroups', '{1618BDCC-A2BB-40E1-A136-E569F81B7933}')
		return ret

	# Result is of type IOfflineImageSequences
	def GetImageSequences(self):
		'method GetImageSequences'
		ret = self._oleobj_.InvokeTypes(108, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetImageSequences', '{12371007-ACAA-4ADE-BEB1-3C7B3D13738E}')
		return ret

	# Result is of type IOfflineLogFiles
	def GetLogFiles(self):
		'method GetLogFiles'
		ret = self._oleobj_.InvokeTypes(106, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetLogFiles', '{483ADE4F-A34F-45AD-90E8-2DBD7FC3A2DC}')
		return ret

	# Result is of type IChannelMappingSet
	def GetMappingSet(self):
		'method GetMappingSet'
		ret = self._oleobj_.InvokeTypes(110, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingSet', '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTable(self, busTypeParam=defaultNamedNotOptArg):
		'method GetMappingTable'
		ret = self._oleobj_.InvokeTypes(100, LCID, 1, (9, 0), ((3, 1),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTable', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTableByBusName(self, busName=defaultNamedNotOptArg):
		'method GetMappingTableByBusName'
		ret = self._oleobj_.InvokeTypes(101, LCID, 1, (9, 0), ((8, 1),),busName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTableByBusName', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IOfflineVideos
	def GetVideoSources(self):
		'method GetVideoSources'
		ret = self._oleobj_.InvokeTypes(107, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetVideoSources', '{BE54D021-BE83-44E0-B9EC-7EDE4A9BC621}')
		return ret

	def ImportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ImportMappingTable'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	def SetMappingSet(self, pMappingSet=defaultNamedNotOptArg):
		'method SetMappingSet'
		return self._oleobj_.InvokeTypes(109, LCID, 1, (24, 0), ((9, 1),),pMappingSet
			)

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Targets": (7, 2, (9, 0), (), "Targets", None),
		# Method 'TimeSettings' returns object of type 'ITimeSettings'
		"TimeSettings": (6, 2, (9, 0), (), "TimeSettings", '{DA475018-9635-4372-9F22-B3A2FB91BFCC}'),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineGroups(DispatchBaseClass):
	'IOfflineGroups Interface'
	CLSID = IID('{1618BDCC-A2BB-40E1-A136-E569F81B7933}')
	coclass_clsid = IID('{71845BBF-0E3B-450E-B95C-A0074B19761D}')

	# Result is of type IOfflineGroup
	def Add(self, groupName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 0),),groupName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')
		return ret

	# Result is of type IOfflineGroup
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOfflineImageSequence(DispatchBaseClass):
	'IOfflineImageSequence Interface'
	CLSID = IID('{15C303D0-7428-491F-9EB5-CE56E3049536}')
	coclass_clsid = IID('{1B5B551E-1260-4A63-B956-AD554A1DC0B0}')

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Directory": (100, 2, (8, 0), (), "Directory", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Pattern": (101, 2, (8, 0), (), "Pattern", None),
		"Targets": (7, 2, (9, 0), (), "Targets", None),
		# Method 'TimeSettings' returns object of type 'ITimeSettings'
		"TimeSettings": (6, 2, (9, 0), (), "TimeSettings", '{DA475018-9635-4372-9F22-B3A2FB91BFCC}'),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineImageSequences(DispatchBaseClass):
	'IOfflineImageSequences Interface'
	CLSID = IID('{12371007-ACAA-4ADE-BEB1-3C7B3D13738E}')
	coclass_clsid = IID('{2EFFFDB9-5ADE-4843-A5C7-F7CB7B9D34FF}')

	# Result is of type IOfflineImageSequence
	def Add(self, imageSequenceFolder=defaultNamedNotOptArg, Pattern=defaultNamedNotOptArg, target=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (8, 1), (9, 1)),imageSequenceFolder
			, Pattern, target)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{15C303D0-7428-491F-9EB5-CE56E3049536}')
		return ret

	# Result is of type IOfflineImageSequence
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{15C303D0-7428-491F-9EB5-CE56E3049536}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{15C303D0-7428-491F-9EB5-CE56E3049536}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{15C303D0-7428-491F-9EB5-CE56E3049536}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOfflineLogFile(DispatchBaseClass):
	'IOfflineLogFile Interface'
	CLSID = IID('{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')
	coclass_clsid = None

	def ExportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ExportMappingTable'
		return self._oleobj_.InvokeTypes(104, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	# Result is of type IChannelMapping
	def GetMappingTable(self, busTypeParam=defaultNamedNotOptArg):
		'method GetMappingTable'
		ret = self._oleobj_.InvokeTypes(101, LCID, 1, (9, 0), ((3, 1),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTable', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTableByBusName(self, busName=defaultNamedNotOptArg):
		'method GetMappingTableByBusName'
		ret = self._oleobj_.InvokeTypes(102, LCID, 1, (9, 0), ((8, 1),),busName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTableByBusName', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	def ImportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ImportMappingTable'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (100, 2, (8, 0), (), "Path", None),
		"Targets": (7, 2, (9, 0), (), "Targets", None),
		# Method 'TimeSettings' returns object of type 'ITimeSettings'
		"TimeSettings": (6, 2, (9, 0), (), "TimeSettings", '{DA475018-9635-4372-9F22-B3A2FB91BFCC}'),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineLogFile2(DispatchBaseClass):
	'IOfflineLogFile2 Interface'
	CLSID = IID('{12B51663-BB9C-4010-8308-56E3A2F2247C}')
	coclass_clsid = IID('{238A7264-980F-44EC-B8C5-F81777C5E93F}')

	def ExportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ExportMappingTable'
		return self._oleobj_.InvokeTypes(104, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	# Result is of type IChannelMappingSet
	def GetMappingSet(self):
		'method GetMappingSet'
		ret = self._oleobj_.InvokeTypes(106, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingSet', '{FD0624C6-8033-430F-8554-AD323A46CDB5}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTable(self, busTypeParam=defaultNamedNotOptArg):
		'method GetMappingTable'
		ret = self._oleobj_.InvokeTypes(101, LCID, 1, (9, 0), ((3, 1),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTable', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTableByBusName(self, busName=defaultNamedNotOptArg):
		'method GetMappingTableByBusName'
		ret = self._oleobj_.InvokeTypes(102, LCID, 1, (9, 0), ((8, 1),),busName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTableByBusName', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	def ImportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ImportMappingTable'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	def SetMappingSet(self, pMappingSet=defaultNamedNotOptArg):
		'method SetMappingSet'
		return self._oleobj_.InvokeTypes(105, LCID, 1, (24, 0), ((9, 1),),pMappingSet
			)

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (100, 2, (8, 0), (), "Path", None),
		"Targets": (7, 2, (9, 0), (), "Targets", None),
		# Method 'TimeSettings' returns object of type 'ITimeSettings'
		"TimeSettings": (6, 2, (9, 0), (), "TimeSettings", '{DA475018-9635-4372-9F22-B3A2FB91BFCC}'),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineLogFiles(DispatchBaseClass):
	'IOfflineLogFiles Interface'
	CLSID = IID('{483ADE4F-A34F-45AD-90E8-2DBD7FC3A2DC}')
	coclass_clsid = IID('{D5F7A3F3-C1C6-4372-9B1E-81CFC3ACF408}')

	# Result is of type IOfflineLogFile
	def Add(self, logFilePath=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),logFilePath
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')
		return ret

	# Result is of type IOfflineLogFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOfflineSource(DispatchBaseClass):
	'IOfflineSource Interface'
	CLSID = IID('{F25C4137-A660-47D4-8E11-9AA0E0A58BC7}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineSource2(DispatchBaseClass):
	'IOfflineSource2 Interface'
	CLSID = IID('{54D5BCF7-73A6-43AA-8E3F-D07EC9FCB456}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"Sources": (6, 2, (9, 0), (), "Sources", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineSource3(DispatchBaseClass):
	'IOfflineSource3 Interface'
	CLSID = IID('{737BBFED-F0C7-4556-887B-18319F58361B}')
	coclass_clsid = None

	# Result is of type IChannelMapping
	def GetMappingTable(self, busTypeParam=defaultNamedNotOptArg):
		'method GetMappingTable'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((3, 1),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTable', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTableByName(self, busName=defaultNamedNotOptArg):
		'method GetMappingTableByName'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((8, 1),),busName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTableByName', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"Sources": (6, 2, (9, 0), (), "Sources", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineSource4(DispatchBaseClass):
	'IOfflineSource4 Interface'
	CLSID = IID('{876B6592-0F87-4978-BDC2-9C105C5D8833}')
	coclass_clsid = None

	# Result is of type IChannelMapping
	def GetMappingTable(self, busTypeParam=defaultNamedNotOptArg):
		'method GetMappingTable'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((3, 1),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTable', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTableByName(self, busName=defaultNamedNotOptArg):
		'method GetMappingTableByName'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((8, 1),),busName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTableByName', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"Sources": (6, 2, (9, 0), (), "Sources", None),
		"TimeSection": (9, 2, (9, 0), (), "TimeSection", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineSource5(DispatchBaseClass):
	'IOfflineSource5 Interface'
	CLSID = IID('{7FBBDC0F-2CBD-41D5-9B01-4FF9188856E1}')
	coclass_clsid = IID('{D180177F-4F3F-4B02-A3D2-990A975BABB1}')

	def ExportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ExportMappingTable'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	# Result is of type IChannelMapping
	def GetMappingTable(self, busTypeParam=defaultNamedNotOptArg):
		'method GetMappingTable'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((3, 1),),busTypeParam
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTable', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	# Result is of type IChannelMapping
	def GetMappingTableByName(self, busName=defaultNamedNotOptArg):
		'method GetMappingTableByName'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((8, 1),),busName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMappingTableByName', '{FCE0251F-6728-429B-A26B-511903B7090B}')
		return ret

	def ImportMappingTable(self, fileName=defaultNamedNotOptArg):
		'method ImportMappingTable'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((8, 1),),fileName
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"Sources": (6, 2, (9, 0), (), "Sources", None),
		"TimeSection": (9, 2, (9, 0), (), "TimeSection", None),
	}
	_prop_map_put_ = {
		"FullName": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineSourceEx(DispatchBaseClass):
	'IOfflineSourceEx Interface'
	CLSID = IID('{2E69C9DD-51F3-43E7-A1AD-51893C17264F}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Targets": (7, 2, (9, 0), (), "Targets", None),
		# Method 'TimeSettings' returns object of type 'ITimeSettings'
		"TimeSettings": (6, 2, (9, 0), (), "TimeSettings", '{DA475018-9635-4372-9F22-B3A2FB91BFCC}'),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineSourceExes(DispatchBaseClass):
	'IOfflineSourceExes Interface'
	CLSID = IID('{73FF6BA0-1C7C-4B28-BD63-7A44BEBA0602}')
	coclass_clsid = IID('{79708026-C765-44D5-B633-9ACF8DBF8C47}')

	# Result is of type IOfflineGroup
	def AddGroup(self, groupName=defaultNamedNotOptArg):
		'method AddGroup'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),groupName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddGroup', '{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')
		return ret

	# Result is of type IOfflineImageSequence
	def AddImageSequence(self, imageSequenceFolder=defaultNamedNotOptArg, Pattern=defaultNamedNotOptArg, target=defaultNamedNotOptArg):
		'method AddImageSequence'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((8, 1), (8, 1), (9, 1)),imageSequenceFolder
			, Pattern, target)
		if ret is not None:
			ret = Dispatch(ret, 'AddImageSequence', '{15C303D0-7428-491F-9EB5-CE56E3049536}')
		return ret

	# Result is of type IOfflineLogFile
	def AddLogFile(self, logFilePath=defaultNamedNotOptArg):
		'method AddLogFile'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1),),logFilePath
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddLogFile', '{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')
		return ret

	# Result is of type IOfflineVideo
	def AddVideo(self, videoPath=defaultNamedNotOptArg, target=defaultNamedNotOptArg):
		'method AddVideo'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (9, 1)),videoPath
			, target)
		if ret is not None:
			ret = Dispatch(ret, 'AddVideo', '{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')
		return ret

	# Result is of type IOfflineSourceEx
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{2E69C9DD-51F3-43E7-A1AD-51893C17264F}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{2E69C9DD-51F3-43E7-A1AD-51893C17264F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{2E69C9DD-51F3-43E7-A1AD-51893C17264F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOfflineTargets(DispatchBaseClass):
	'IOfflineTargets Interface'
	CLSID = IID('{5BF6EF1D-62C2-4C87-B312-FE49C0184DAD}')
	coclass_clsid = IID('{DFB1D3D7-D0B8-4C5C-BE31-01A9BB3016FD}')

	def Add(self, Item=defaultNamedNotOptArg):
		'method Add'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((9, 1),),Item
			)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOfflineVideo(DispatchBaseClass):
	'IOfflineVideo Interface'
	CLSID = IID('{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')
	coclass_clsid = IID('{D92BE9B6-DEED-45FC-9D6F-8FC806C052D8}')

	_prop_map_get_ = {
		"Active": (5, 2, (3, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (100, 2, (8, 0), (), "Path", None),
		"Targets": (7, 2, (9, 0), (), "Targets", None),
		# Method 'TimeSettings' returns object of type 'ITimeSettings'
		"TimeSettings": (6, 2, (9, 0), (), "TimeSettings", '{DA475018-9635-4372-9F22-B3A2FB91BFCC}'),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOfflineVideos(DispatchBaseClass):
	'IOfflineVideos Interface'
	CLSID = IID('{BE54D021-BE83-44E0-B9EC-7EDE4A9BC621}')
	coclass_clsid = IID('{F5BBD2E5-DA95-42DC-8C34-09D90EF1C8CF}')

	# Result is of type IOfflineVideo
	def Add(self, videoPath=defaultNamedNotOptArg, target=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (9, 1)),videoPath
			, target)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')
		return ret

	# Result is of type IOfflineVideo
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOpenConfigurationResult(DispatchBaseClass):
	'IOpenConfigurationResult Interface'
	CLSID = IID('{BA4CBD24-0E31-4C72-8758-78842128A91F}')
	coclass_clsid = IID('{18584844-AFCE-451F-A155-CCA1CED12B15}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ErrorMessage": (4, 2, (8, 0), (), "ErrorMessage", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"result": (3, 2, (3, 0), (), "result", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPanel(DispatchBaseClass):
	'IPanel Interface'
	CLSID = IID('{2FCA3565-CDA6-11D3-85E1-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Height": (6, 2, (3, 0), (), "Height", None),
		"Left": (9, 2, (3, 0), (), "Left", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Orphaned": (10, 2, (11, 0), (), "Orphaned", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (4, 2, (8, 0), (), "Path", None),
		"Top": (8, 2, (3, 0), (), "Top", None),
		"Visible": (5, 2, (11, 0), (), "Visible", None),
		"Width": (7, 2, (3, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Height": ((6, LCID, 4, 0),()),
		"Left": ((9, LCID, 4, 0),()),
		"Orphaned": ((10, LCID, 4, 0),()),
		"Top": ((8, LCID, 4, 0),()),
		"Visible": ((5, LCID, 4, 0),()),
		"Width": ((7, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPanel2(DispatchBaseClass):
	'IPanel2 Interface'
	CLSID = IID('{29FD885E-3E2D-47F9-86CD-02ED21730A36}')
	coclass_clsid = IID('{2FCA3566-CDA6-11D3-85E1-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Height": (6, 2, (3, 0), (), "Height", None),
		"Left": (9, 2, (3, 0), (), "Left", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Orphaned": (10, 2, (11, 0), (), "Orphaned", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (4, 2, (8, 0), (), "Path", None),
		"Top": (8, 2, (3, 0), (), "Top", None),
		"Visible": (5, 2, (11, 0), (), "Visible", None),
		"Width": (7, 2, (3, 0), (), "Width", None),
		"WindowType": (11, 2, (3, 0), (), "WindowType", None),
	}
	_prop_map_put_ = {
		"Height": ((6, LCID, 4, 0),()),
		"Left": ((9, LCID, 4, 0),()),
		"Orphaned": ((10, LCID, 4, 0),()),
		"Top": ((8, LCID, 4, 0),()),
		"Visible": ((5, LCID, 4, 0),()),
		"Width": ((7, LCID, 4, 0),()),
		"WindowType": ((11, LCID, 4, 0),()),
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPanelSetup(DispatchBaseClass):
	'IPanelSetup Interface'
	CLSID = IID('{2FCA3561-CDA6-11D3-85E1-00105A3E017B}')
	coclass_clsid = None

	# The method Panels is actually a property, but must be used as a method to correctly pass the arguments
	def Panels(self, dwType=defaultNamedNotOptArg):
		'property Panels'
		ret = self._oleobj_.InvokeTypes(3, LCID, 2, (9, 0), ((3, 1),),dwType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Panels', None)
		return ret

	def SavePositions(self):
		'method SavePositions'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPanelSetup2(DispatchBaseClass):
	'IPanelSetup2 Interface'
	CLSID = IID('{6C0F41B3-BA71-4DD2-8D5C-EE263A874125}')
	coclass_clsid = None

	# The method Panels is actually a property, but must be used as a method to correctly pass the arguments
	def Panels(self, dwType=defaultNamedNotOptArg):
		'property Panels'
		ret = self._oleobj_.InvokeTypes(3, LCID, 2, (9, 0), ((3, 1),),dwType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Panels', None)
		return ret

	def SavePositions(self):
		'method SavePositions'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DesktopFile": (5, 2, (8, 0), (), "DesktopFile", None),
		"LaunchControlOnLoad": (6, 2, (11, 0), (), "LaunchControlOnLoad", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"DesktopFile": ((5, LCID, 4, 0),()),
		"LaunchControlOnLoad": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPanelSetup3(DispatchBaseClass):
	'IPanelSetup3 Interface'
	CLSID = IID('{6952A532-6F9B-459E-90EA-1CFBFF495FAF}')
	coclass_clsid = IID('{2FCA3564-CDA6-11D3-85E1-00105A3E017B}')

	# The method Panels is actually a property, but must be used as a method to correctly pass the arguments
	def Panels(self, dwType=defaultNamedNotOptArg):
		'property Panels'
		ret = self._oleobj_.InvokeTypes(3, LCID, 2, (9, 0), ((3, 1),),dwType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Panels', None)
		return ret

	def SavePositions(self):
		'method SavePositions'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DesktopFile": (5, 2, (8, 0), (), "DesktopFile", None),
		"LaunchControlOnLoad": (6, 2, (11, 0), (), "LaunchControlOnLoad", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"WindowType": (7, 2, (3, 0), (), "WindowType", None),
	}
	_prop_map_put_ = {
		"DesktopFile": ((5, LCID, 4, 0),()),
		"LaunchControlOnLoad": ((6, LCID, 4, 0),()),
		"WindowType": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPanels(DispatchBaseClass):
	'IPanels Interface'
	CLSID = IID('{2FCA3562-CDA6-11D3-85E1-00105A3E017B}')
	coclass_clsid = IID('{2FCA3563-CDA6-11D3-85E1-00105A3E017B}')

	# Result is of type IPanel
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2FCA3565-CDA6-11D3-85E1-00105A3E017B}')
		return ret

	# Result is of type IPanel
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{2FCA3565-CDA6-11D3-85E1-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{2FCA3565-CDA6-11D3-85E1-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{2FCA3565-CDA6-11D3-85E1-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IParticipant(DispatchBaseClass):
	'IParticipant Interface'
	CLSID = IID('{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}')
	coclass_clsid = IID('{DD8CA9BA-EE85-481B-B107-FB7A46680151}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (4, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IParticipants(DispatchBaseClass):
	'IParticipants Interface'
	CLSID = IID('{102584C6-E00E-4A63-B2FA-5B79F7DA4DD9}')
	coclass_clsid = IID('{44C130F9-7508-4464-AE48-37FA7BAD6613}')

	# Result is of type IParticipant
	def Add(self, pParticipantPath=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),pParticipantPath
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}')
		return ret

	# Result is of type IParticipant
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}')
		return ret

	def Remove(self, pIndex=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),pIndex
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, pIndex=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),pIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPerformance(DispatchBaseClass):
	'IPerformance Interface'
	CLSID = IID('{E3BBD70F-A187-4A83-AD8B-03D78265B2AF}')
	coclass_clsid = IID('{DE9CCB1F-FE4A-43F4-942D-C27013A7B397}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"MaxNumMeasurementSetupThreads": (3, 2, (3, 0), (), "MaxNumMeasurementSetupThreads", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"MaxNumMeasurementSetupThreads": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPort(DispatchBaseClass):
	'IPort Interface'
	CLSID = IID('{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"IsSimulated": (5, 2, (11, 0), (), "IsSimulated", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SegmentName": (4, 2, (8, 0), (), "SegmentName", None),
	}
	_prop_map_put_ = {
		"IsSimulated": ((5, LCID, 4, 0),()),
		"Name": ((3, LCID, 4, 0),()),
		"SegmentName": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPort2(DispatchBaseClass):
	'IPort2 Interface'
	CLSID = IID('{56722E45-899F-4733-9638-627A0743BECD}')
	coclass_clsid = IID('{836A0C24-4BBD-4D44-9CEC-A715FFF9CA82}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"IsActive": (6, 2, (11, 0), (), "IsActive", None),
		"IsSimulated": (5, 2, (11, 0), (), "IsSimulated", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SegmentName": (4, 2, (8, 0), (), "SegmentName", None),
	}
	_prop_map_put_ = {
		"IsActive": ((6, LCID, 4, 0),()),
		"IsSimulated": ((5, LCID, 4, 0),()),
		"Name": ((3, LCID, 4, 0),()),
		"SegmentName": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPorts(DispatchBaseClass):
	'IPorts Interface'
	CLSID = IID('{15E2A6C6-48F5-4F00-9406-4CF1A8B576A0}')
	coclass_clsid = None

	# Result is of type IPort
	def Add(self, portName=defaultNamedNotOptArg, SegmentName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (8, 1)),portName
			, SegmentName)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
		return ret

	# Result is of type IPort
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"IsSwitchedNetwork": (6, 2, (11, 0), (), "IsSwitchedNetwork", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"IsSwitchedNetwork": ((6, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPorts2(DispatchBaseClass):
	'IPorts2 Interface'
	CLSID = IID('{8E121922-A12C-47FB-8A33-47ACA0D80751}')
	coclass_clsid = IID('{5C63E7EC-50FD-4844-A457-C08184E33DD5}')

	# Result is of type IPort
	def Add(self, portName=defaultNamedNotOptArg, SegmentName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (8, 1)),portName
			, SegmentName)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
		return ret

	# Result is of type IPort
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"IsPortBasedConfig": (8, 2, (11, 0), (), "IsPortBasedConfig", None),
		"IsSwitchedNetwork": (6, 2, (11, 0), (), "IsSwitchedNetwork", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"networkName": (7, 2, (8, 0), (), "networkName", None),
	}
	_prop_map_put_ = {
		"IsPortBasedConfig": ((8, LCID, 4, 0),()),
		"IsSwitchedNetwork": ((6, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IReference(DispatchBaseClass):
	'IReference Interface'
	CLSID = IID('{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}')
	coclass_clsid = IID('{C5B2393E-46BC-410A-8533-9BEC023239BE}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReferences(DispatchBaseClass):
	'IReferences Interface'
	CLSID = IID('{D8A35CD7-6FF9-42E6-A73A-DAE19E7392D0}')
	coclass_clsid = IID('{5608FED6-E922-4DED-80BF-027A6E0EB4FE}')

	# Result is of type IReference
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}')
		return ret

	# Result is of type IReference
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IReplayBlock(DispatchBaseClass):
	'IReplayBlock Interface'
	CLSID = IID('{563ED104-7544-11D5-87D4-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReplayBlock2(DispatchBaseClass):
	'IReplayBlock2 Interface'
	CLSID = IID('{28F947A9-28D4-46A2-A35E-4F8D59B4DEE9}')
	coclass_clsid = IID('{563ED105-7544-11D5-87D4-00105A3E017B}')

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def Suspend(self):
		'method Suspend'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (4, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"Path": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReplayCollection(DispatchBaseClass):
	'IReplayCollection Interface'
	CLSID = IID('{75718C15-7540-11D5-87D4-00105A3E017B}')
	coclass_clsid = IID('{75718C16-7540-11D5-87D4-00105A3E017B}')

	# Result is of type IReplayBlock
	def Add(self, busTypeParam=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (8, 1)),busTypeParam
			, Name)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{563ED104-7544-11D5-87D4-00105A3E017B}')
		return ret

	# Result is of type IReplayBlock
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{563ED104-7544-11D5-87D4-00105A3E017B}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{563ED104-7544-11D5-87D4-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{563ED104-7544-11D5-87D4-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IReportFilterSettings(DispatchBaseClass):
	'IReportFilterSettings Interface'
	CLSID = IID('{88399322-23E3-4241-832C-5B5B19F948DD}')
	coclass_clsid = None

	def IsActive(self, eventId=defaultNamedNotOptArg):
		'property IsActive'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),eventId
			)

	def SetActive(self, eventId=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		'property SetActive'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (11, 1)),eventId
			, val)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"MaxTestStepLevel": (5, 2, (3, 0), (), "MaxTestStepLevel", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReportedTestPatterns": (4, 2, (3, 0), (), "ReportedTestPatterns", None),
		"ReportedTestSteps": (3, 2, (3, 0), (), "ReportedTestSteps", None),
	}
	_prop_map_put_ = {
		"MaxTestStepLevel": ((5, LCID, 4, 0),()),
		"ReportedTestPatterns": ((4, LCID, 4, 0),()),
		"ReportedTestSteps": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReportFilterSettings2(DispatchBaseClass):
	'IReportFilterSettings2 Interface'
	CLSID = IID('{F725388B-C761-4253-8614-84D979737488}')
	coclass_clsid = IID('{983EBD87-85F5-43D4-80AC-4874EC515083}')

	def IsActive(self, eventId=defaultNamedNotOptArg):
		'property IsActive'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),eventId
			)

	def SetActive(self, eventId=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		'property SetActive'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (11, 1)),eventId
			, val)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"MaxTestStepLevel": (5, 2, (3, 0), (), "MaxTestStepLevel", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReportedTestCases": (8, 2, (3, 0), (), "ReportedTestCases", None),
		"ReportedTestPatterns": (4, 2, (3, 0), (), "ReportedTestPatterns", None),
		"ReportedTestSteps": (3, 2, (3, 0), (), "ReportedTestSteps", None),
	}
	_prop_map_put_ = {
		"MaxTestStepLevel": ((5, LCID, 4, 0),()),
		"ReportedTestCases": ((8, LCID, 4, 0),()),
		"ReportedTestPatterns": ((4, LCID, 4, 0),()),
		"ReportedTestSteps": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISIM(DispatchBaseClass):
	'ISIM Interface'
	CLSID = IID('{73F7D5C1-E5BC-11D2-A3D7-00609768736E}')
	coclass_clsid = IID('{D54CED00-A490-11D2-A3D7-00609768736E}')

	def SIMGetAnimationFactor(self, AnimationFactor=pythoncom.Missing):
		'method SIMGetAnimationFactor'
		return self._ApplyTypes_(3, 1, (24, 0), ((16389, 2),), 'SIMGetAnimationFactor', None,AnimationFactor
			)

	def SIMGetBaudrate(self, result=pythoncom.Missing, Baudrate=pythoncom.Missing, Channel=defaultNamedNotOptArg):
		'method SIMGetBaudrate'
		return self._ApplyTypes_(2, 1, (24, 0), ((16402, 2), (16389, 2), (18, 1)), 'SIMGetBaudrate', None,result
			, Baudrate, Channel)

	def SIMGetState(self, result=pythoncom.Missing, Ident=pythoncom.Missing, rtr=pythoncom.Missing, DLC=pythoncom.Missing
			, Data=defaultNamedNotOptArg, timeInc=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'method SIMGetState'
		return self._ApplyTypes_(5, 1, (24, 0), ((16402, 2), (16403, 2), (16401, 2), (16401, 2), (16396, 3), (19, 1), (18, 1)), 'SIMGetState', None,result
			, Ident, rtr, DLC, Data, timeInc
			, Channel)

	def SIMRequest(self, result=pythoncom.Missing, Ident=defaultNamedNotOptArg, rtr=defaultNamedNotOptArg, DLC=defaultNamedNotOptArg
			, Data=defaultNamedNotOptArg, action=defaultNamedNotOptArg, timeInc=defaultNamedNotOptArg, Channel=defaultNamedNotOptArg):
		'method SIMRequest'
		return self._ApplyTypes_(4, 1, (24, 0), ((16402, 2), (16403, 3), (16401, 3), (16401, 3), (16396, 3), (18, 1), (19, 1), (18, 1)), 'SIMRequest', None,result
			, Ident, rtr, DLC, Data, action
			, timeInc, Channel)

	def SIMReset(self, result=pythoncom.Missing):
		'method SIMReset'
		return self._ApplyTypes_(1, 1, (24, 0), ((16402, 2),), 'SIMReset', None,result
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISendNode(DispatchBaseClass):
	'ISendNode Interface'
	CLSID = IID('{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}')
	coclass_clsid = IID('{F344C7F7-A4A2-4FC0-BD13-C6F6050D3426}')

	_prop_map_get_ = {
		"Active": (5, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (4, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"Active": ((5, LCID, 4, 0),()),
		"Name": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISendNodes(DispatchBaseClass):
	'ISendNodes Interface'
	CLSID = IID('{1170E6A0-7C88-4E73-B387-6BADE0B0A48B}')
	coclass_clsid = IID('{40A12CBD-AB8B-427F-A304-419DB8CF28E2}')

	# Result is of type ISendNode
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}')
		return ret

	# Result is of type ISendNode
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISharedMemory(DispatchBaseClass):
	'ISharedMemory Interface'
	CLSID = IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
	coclass_clsid = None

	def AddEnvVar(self, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg):
		'method AddEnvVar'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (3, 17)),Name
			, nrOfValues)

	def AddSignal(self, Name=defaultNamedNotOptArg):
		'method AddSignal'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (3, 0), ((8, 1),),Name
			)

	def AddSysVar(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVar'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),nsName
			, Name, nrOfValues, arrayIndex)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Size": (7, 2, (3, 0), (), "Size", None),
		"Valid": (8, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISharedMemory2(DispatchBaseClass):
	'ISharedMemory2 Interface'
	CLSID = IID('{F95C2C1A-2BE7-4025-9318-7628D72823F5}')
	coclass_clsid = None

	def AddEnvVar(self, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg):
		'method AddEnvVar'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (3, 17)),Name
			, nrOfValues)

	def AddSignal(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg):
		'method AddSignal'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), ((8, 1), (11, 1)),Name
			, RawValue)

	def AddSysVar(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVar'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),nsName
			, Name, nrOfValues, arrayIndex)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Size": (7, 2, (3, 0), (), "Size", None),
		"Valid": (8, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISharedMemory3(DispatchBaseClass):
	'ISharedMemory3 Interface'
	CLSID = IID('{11E865EB-97B1-467A-B742-DF816A4035BE}')
	coclass_clsid = None

	def AddEnvVar(self, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg):
		'method AddEnvVar'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (3, 17)),Name
			, nrOfValues)

	def AddSignal(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg):
		'method AddSignal'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), ((8, 1), (11, 1)),Name
			, RawValue)

	def AddSysVar(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVar'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),nsName
			, Name, nrOfValues, arrayIndex)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Size": (7, 2, (3, 0), (), "Size", None),
		"Valid": (8, 2, (11, 0), (), "Valid", None),
		"Version": (10, 2, (3, 0), (), "Version", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISharedMemory4(DispatchBaseClass):
	'ISharedMemory4 Interface'
	CLSID = IID('{A047357E-67BA-4E2A-8982-44CE46F31975}')
	coclass_clsid = None

	def AddEnvVar(self, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg):
		'method AddEnvVar'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (3, 17)),Name
			, nrOfValues)

	def AddSignal(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg):
		'method AddSignal'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), ((8, 1), (11, 1)),Name
			, RawValue)

	def AddSysVar(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVar'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),nsName
			, Name, nrOfValues, arrayIndex)

	def AddSysVarMember(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVarMember'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Size": (7, 2, (3, 0), (), "Size", None),
		"Valid": (8, 2, (11, 0), (), "Valid", None),
		"Version": (10, 2, (3, 0), (), "Version", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISharedMemory5(DispatchBaseClass):
	'ISharedMemory5 Interface'
	CLSID = IID('{1DE7E1C5-53FB-495A-9404-D701572D71EA}')
	coclass_clsid = None

	def AddEnvVar(self, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg):
		'method AddEnvVar'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (3, 17)),Name
			, nrOfValues)

	def AddSignal(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg):
		'method AddSignal'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), ((8, 1), (11, 1)),Name
			, RawValue)

	def AddSignal2(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSignal2'
		return self._ApplyTypes_(12, 1, (3, 0), ((8, 1), (11, 1), (16387, 2)), 'AddSignal2', None,Name
			, RawValue, exchangeDataType)

	def AddSysVar(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVar'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),nsName
			, Name, nrOfValues, arrayIndex)

	def AddSysVar2(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg
			, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSysVar2'
		return self._ApplyTypes_(13, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'AddSysVar2', None,nsName
			, Name, nrOfValues, arrayIndex, RawValue, exchangeDataType
			)

	def AddSysVarMember(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVarMember'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex)

	def AddSysVarMember2(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg
			, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSysVarMember2'
		return self._ApplyTypes_(14, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'AddSysVarMember2', None,svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex, RawValue, exchangeDataType
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Size": (7, 2, (3, 0), (), "Size", None),
		"Valid": (8, 2, (11, 0), (), "Valid", None),
		"Version": (10, 2, (3, 0), (), "Version", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISharedMemory6(DispatchBaseClass):
	'ISharedMemory6 Interface'
	CLSID = IID('{C64A9DB3-3856-4E6D-A042-EA086E4C88F0}')
	coclass_clsid = None

	def AddEnvVar(self, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg):
		'method AddEnvVar'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (3, 17)),Name
			, nrOfValues)

	def AddSignal(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg):
		'method AddSignal'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), ((8, 1), (11, 1)),Name
			, RawValue)

	def AddSignal2(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSignal2'
		return self._ApplyTypes_(12, 1, (3, 0), ((8, 1), (11, 1), (16387, 2)), 'AddSignal2', None,Name
			, RawValue, exchangeDataType)

	def AddSysVar(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVar'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),nsName
			, Name, nrOfValues, arrayIndex)

	def AddSysVar2(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg
			, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSysVar2'
		return self._ApplyTypes_(13, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'AddSysVar2', None,nsName
			, Name, nrOfValues, arrayIndex, RawValue, exchangeDataType
			)

	def AddSysVarMember(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVarMember'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex)

	def AddSysVarMember2(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg
			, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSysVarMember2'
		return self._ApplyTypes_(14, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'AddSysVarMember2', None,svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex, RawValue, exchangeDataType
			)

	def AddSysVarStruct(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Size=pythoncom.Missing):
		'method AddSysVarStruct'
		return self._ApplyTypes_(15, 1, (3, 0), ((8, 1), (8, 1), (16387, 2)), 'AddSysVarStruct', None,nsName
			, Name, Size)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Size": (7, 2, (3, 0), (), "Size", None),
		"Valid": (8, 2, (11, 0), (), "Valid", None),
		"Version": (10, 2, (3, 0), (), "Version", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISharedMemory7(DispatchBaseClass):
	'ISharedMemory7 Interface'
	CLSID = IID('{9AB9CC7B-77FC-4262-A067-A85987E1E5D6}')
	coclass_clsid = None

	def AddEnvVar(self, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg):
		'method AddEnvVar'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (3, 17)),Name
			, nrOfValues)

	def AddSignal(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg):
		'method AddSignal'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), ((8, 1), (11, 1)),Name
			, RawValue)

	def AddSignal2(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSignal2'
		return self._ApplyTypes_(12, 1, (3, 0), ((8, 1), (11, 1), (16387, 2)), 'AddSignal2', None,Name
			, RawValue, exchangeDataType)

	def AddSysVar(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVar'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),nsName
			, Name, nrOfValues, arrayIndex)

	def AddSysVar2(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg
			, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSysVar2'
		return self._ApplyTypes_(13, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'AddSysVar2', None,nsName
			, Name, nrOfValues, arrayIndex, RawValue, exchangeDataType
			)

	def AddSysVarMember(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVarMember'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex)

	def AddSysVarMember2(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg
			, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSysVarMember2'
		return self._ApplyTypes_(14, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'AddSysVarMember2', None,svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex, RawValue, exchangeDataType
			)

	def AddSysVarStruct(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Size=pythoncom.Missing):
		'method AddSysVarStruct'
		return self._ApplyTypes_(15, 1, (3, 0), ((8, 1), (8, 1), (16387, 2)), 'AddSysVarStruct', None,nsName
			, Name, Size)

	def AddSysVarStruct2(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Size=pythoncom.Missing, elementOffsets=pythoncom.Missing):
		'method AddSysVarStruct2'
		return self._ApplyTypes_(16, 1, (3, 0), ((8, 1), (8, 1), (16387, 2), (16396, 2)), 'AddSysVarStruct2', None,nsName
			, Name, Size, elementOffsets)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Size": (7, 2, (3, 0), (), "Size", None),
		"Valid": (8, 2, (11, 0), (), "Valid", None),
		"Version": (10, 2, (3, 0), (), "Version", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISharedMemory8(DispatchBaseClass):
	'ISharedMemory8 Interface'
	CLSID = IID('{701B2FB6-58BF-4E6E-84D4-33540FB5F117}')
	coclass_clsid = IID('{D3711CB7-3059-4EFC-B7CD-B7898336598D}')

	def AddCOValueScalar(self, portPath=defaultNamedNotOptArg, exchangeDataTypeLevel=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddCOValueScalar'
		return self._ApplyTypes_(17, 1, (3, 0), ((8, 1), (3, 1), (16387, 2)), 'AddCOValueScalar', None,portPath
			, exchangeDataTypeLevel, exchangeDataType)

	def AddCOValueScalarArray(self, portPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, exchangeDataTypeLevel=defaultNamedNotOptArg, dataExchangeByteArraySize=pythoncom.Missing
			, dataExchangeElementType=pythoncom.Missing):
		'method AddCOValueScalarArray'
		return self._ApplyTypes_(18, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (16387, 2), (16387, 2)), 'AddCOValueScalarArray', None,portPath
			, nrOfValues, exchangeDataTypeLevel, dataExchangeByteArraySize, dataExchangeElementType)

	def AddCOValueScalarArrayElement(self, portPath=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg, exchangeDataTypeLevel=defaultNamedNotOptArg, dataExchangeByteArraySize=pythoncom.Missing
			, dataExchangeElementType=pythoncom.Missing):
		'method AddCOValueScalarArrayElement'
		return self._ApplyTypes_(19, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (16387, 2), (16387, 2)), 'AddCOValueScalarArrayElement', None,portPath
			, arrayIndex, exchangeDataTypeLevel, dataExchangeByteArraySize, dataExchangeElementType)

	def AddCOValueStructElementScalar(self, portValueType=defaultNamedNotOptArg, portPath=defaultNamedNotOptArg, memberPath=defaultNamedNotOptArg, exchangeDataTypeLevel=defaultNamedNotOptArg
			, unionElementType=defaultNamedNotOptArg, unionDiscriminatorIndexerPath=defaultNamedNotOptArg, unionDiscriminatorExpectedValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddCOValueStructElementScalar'
		return self._ApplyTypes_(20, 1, (3, 0), ((3, 1), (8, 1), (8, 1), (3, 1), (3, 1), (8, 1), (3, 1), (16387, 2)), 'AddCOValueStructElementScalar', None,portValueType
			, portPath, memberPath, exchangeDataTypeLevel, unionElementType, unionDiscriminatorIndexerPath
			, unionDiscriminatorExpectedValue, exchangeDataType)

	def AddCOValueStructElementScalarArray(self, portValueType=defaultNamedNotOptArg, portPath=defaultNamedNotOptArg, memberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg
			, exchangeDataTypeLevel=defaultNamedNotOptArg, unionElementType=defaultNamedNotOptArg, unionDiscriminatorIndexerPath=defaultNamedNotOptArg, unionDiscriminatorExpectedValue=defaultNamedNotOptArg, dataExchangeByteArraySize=pythoncom.Missing
			, dataExchangeElementType=pythoncom.Missing):
		'method AddCOValueStructElementScalarArray'
		return self._ApplyTypes_(21, 1, (3, 0), ((3, 1), (8, 1), (8, 1), (3, 1), (3, 1), (3, 1), (8, 1), (3, 1), (16387, 2), (16387, 2)), 'AddCOValueStructElementScalarArray', None,portValueType
			, portPath, memberPath, nrOfValues, exchangeDataTypeLevel, unionElementType
			, unionDiscriminatorIndexerPath, unionDiscriminatorExpectedValue, dataExchangeByteArraySize, dataExchangeElementType)

	def AddEnvVar(self, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg):
		'method AddEnvVar'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (3, 17)),Name
			, nrOfValues)

	def AddSignal(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg):
		'method AddSignal'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (3, 0), ((8, 1), (11, 1)),Name
			, RawValue)

	def AddSignal2(self, Name=defaultNamedNotOptArg, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSignal2'
		return self._ApplyTypes_(12, 1, (3, 0), ((8, 1), (11, 1), (16387, 2)), 'AddSignal2', None,Name
			, RawValue, exchangeDataType)

	def AddSysVar(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVar'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),nsName
			, Name, nrOfValues, arrayIndex)

	def AddSysVar2(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg
			, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSysVar2'
		return self._ApplyTypes_(13, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'AddSysVar2', None,nsName
			, Name, nrOfValues, arrayIndex, RawValue, exchangeDataType
			)

	def AddSysVarMember(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg):
		'method AddSysVarMember'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1)),svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex)

	def AddSysVarMember2(self, svNameSpace=defaultNamedNotOptArg, variableAndMemberPath=defaultNamedNotOptArg, nrOfValues=defaultNamedNotOptArg, arrayIndex=defaultNamedNotOptArg
			, RawValue=defaultNamedNotOptArg, exchangeDataType=pythoncom.Missing):
		'method AddSysVarMember2'
		return self._ApplyTypes_(14, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (11, 1), (16387, 2)), 'AddSysVarMember2', None,svNameSpace
			, variableAndMemberPath, nrOfValues, arrayIndex, RawValue, exchangeDataType
			)

	def AddSysVarStruct(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Size=pythoncom.Missing):
		'method AddSysVarStruct'
		return self._ApplyTypes_(15, 1, (3, 0), ((8, 1), (8, 1), (16387, 2)), 'AddSysVarStruct', None,nsName
			, Name, Size)

	def AddSysVarStruct2(self, nsName=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Size=pythoncom.Missing, elementOffsets=pythoncom.Missing):
		'method AddSysVarStruct2'
		return self._ApplyTypes_(16, 1, (3, 0), ((8, 1), (8, 1), (16387, 2), (16396, 2)), 'AddSysVarStruct2', None,nsName
			, Name, Size, elementOffsets)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Size": (7, 2, (3, 0), (), "Size", None),
		"Valid": (8, 2, (11, 0), (), "Valid", None),
		"Version": (10, 2, (3, 0), (), "Version", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISharedMemorySetup(DispatchBaseClass):
	'ISharedMemorySetup Interface'
	CLSID = IID('{54635EF1-0977-4317-AB0C-9E44E08F7DA6}')
	coclass_clsid = None

	# Result is of type ISharedMemory
	def AddAnalysisInput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg):
		'method AddAnalysisInput'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (3, 1)),Name
			, updateInterval)
		if ret is not None:
			ret = Dispatch(ret, 'AddAnalysisInput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	# Result is of type ISharedMemory
	def AddAnalysisOutput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg):
		'method AddAnalysisOutput'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (3, 1)),Name
			, updateInterval)
		if ret is not None:
			ret = Dispatch(ret, 'AddAnalysisOutput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	# Result is of type ISharedMemory
	def AddInput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg):
		'method AddInput'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1), (3, 1)),Name
			, updateInterval)
		if ret is not None:
			ret = Dispatch(ret, 'AddInput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	# Result is of type ISharedMemory
	def AddOutput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg):
		'method AddOutput'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (3, 1)),Name
			, updateInterval)
		if ret is not None:
			ret = Dispatch(ret, 'AddOutput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	# Result is of type ISharedMemory
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')

class ISharedMemorySetup2(DispatchBaseClass):
	'ISharedMemorySetup2 Interface'
	CLSID = IID('{81ED9CE4-9097-4505-BD85-29653D997E97}')
	coclass_clsid = None

	# Result is of type ISharedMemory
	def AddAnalysisInput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg, pVersion=defaultNamedNotOptArg):
		'method AddAnalysisInput'
		return self._ApplyTypes_(7, 1, (9, 0), ((8, 1), (3, 1), (16387, 3)), 'AddAnalysisInput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',Name
			, updateInterval, pVersion)

	# Result is of type ISharedMemory
	def AddAnalysisOutput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg, pVersion=defaultNamedNotOptArg):
		'method AddAnalysisOutput'
		return self._ApplyTypes_(8, 1, (9, 0), ((8, 1), (3, 1), (16387, 3)), 'AddAnalysisOutput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',Name
			, updateInterval, pVersion)

	# Result is of type ISharedMemory
	def AddInput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg, pVersion=defaultNamedNotOptArg):
		'method AddInput'
		return self._ApplyTypes_(9, 1, (9, 0), ((8, 1), (3, 1), (16387, 3)), 'AddInput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',Name
			, updateInterval, pVersion)

	# Result is of type ISharedMemory
	def AddOutput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg, pVersion=defaultNamedNotOptArg):
		'method AddOutput'
		return self._ApplyTypes_(10, 1, (9, 0), ((8, 1), (3, 1), (16387, 3)), 'AddOutput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',Name
			, updateInterval, pVersion)

	# Result is of type ISharedMemory
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')

class ISharedMemorySetup3(DispatchBaseClass):
	'ISharedMemorySetup3 Interface'
	CLSID = IID('{5033D337-934B-428D-8A9F-8AEAEF097F43}')
	coclass_clsid = IID('{9A0820B4-F046-4F26-9B53-704B87787A96}')

	# Result is of type ISharedMemory
	def AddAnalysisInput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg, pVersion=defaultNamedNotOptArg):
		'method AddAnalysisInput'
		return self._ApplyTypes_(7, 1, (9, 0), ((8, 1), (3, 1), (16387, 3)), 'AddAnalysisInput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',Name
			, updateInterval, pVersion)

	# Result is of type ISharedMemory
	def AddAnalysisOutput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg, pVersion=defaultNamedNotOptArg):
		'method AddAnalysisOutput'
		return self._ApplyTypes_(8, 1, (9, 0), ((8, 1), (3, 1), (16387, 3)), 'AddAnalysisOutput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',Name
			, updateInterval, pVersion)

	# Result is of type ISharedMemory
	def AddInput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg, pVersion=defaultNamedNotOptArg):
		'method AddInput'
		return self._ApplyTypes_(9, 1, (9, 0), ((8, 1), (3, 1), (16387, 3)), 'AddInput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',Name
			, updateInterval, pVersion)

	# Result is of type ISharedMemory
	def AddOutput(self, Name=defaultNamedNotOptArg, updateInterval=defaultNamedNotOptArg, pVersion=defaultNamedNotOptArg):
		'method AddOutput'
		return self._ApplyTypes_(10, 1, (9, 0), ((8, 1), (3, 1), (16387, 3)), 'AddOutput', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',Name
			, updateInterval, pVersion)

	# Result is of type ISharedMemory
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	def ReleaseAllPages(self):
		'method ReleaseAllPages'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')

class ISignal(DispatchBaseClass):
	'ISignal Interface'
	CLSID = IID('{884DBC04-7A76-11D3-8571-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RawValue": (3, 2, (12, 0), (), "RawValue", None),
		"Value": (0, 2, (5, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"RawValue": ((3, LCID, 4, 0),()),
		"Value": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (5, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISignal2(DispatchBaseClass):
	'ISignal2 Interface'
	CLSID = IID('{2A3D09AF-9CB5-4AC0-84CE-7F793629E408}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RawValue": (3, 2, (12, 0), (), "RawValue", None),
		"Value": (0, 2, (5, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"RawValue": ((3, LCID, 4, 0),()),
		"Value": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (5, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISignal3(DispatchBaseClass):
	'ISignal3 Interface'
	CLSID = IID('{C55B7B99-7017-4E0B-86DD-3D54D8E920A1}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FirstValue": (7, 2, (11, 0), (), "FirstValue", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RawValue": (3, 2, (12, 0), (), "RawValue", None),
		"RxIndication": (5, 2, (11, 0), (), "RxIndication", None),
		"Timeout": (8, 2, (11, 0), (), "Timeout", None),
		"TxConfirmation": (6, 2, (11, 0), (), "TxConfirmation", None),
		"Value": (0, 2, (5, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"RawValue": ((3, LCID, 4, 0),()),
		"Value": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (5, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISignal4(DispatchBaseClass):
	'ISignal4 Interface'
	CLSID = IID('{085534D2-1425-4710-90FF-B7D5C48ED627}')
	coclass_clsid = IID('{884DBC05-7A76-11D3-8571-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FirstValue": (7, 2, (11, 0), (), "FirstValue", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"IsOnline": (9, 2, (11, 0), (), "IsOnline", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RawValue": (3, 2, (12, 0), (), "RawValue", None),
		"RxIndication": (5, 2, (11, 0), (), "RxIndication", None),
		"State": (10, 2, (3, 0), (), "State", None),
		"Timeout": (8, 2, (11, 0), (), "Timeout", None),
		"TxConfirmation": (6, 2, (11, 0), (), "TxConfirmation", None),
		"Value": (0, 2, (5, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"RawValue": ((3, LCID, 4, 0),()),
		"Value": ((0, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (5, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISignals(DispatchBaseClass):
	'ISignals Interface'
	CLSID = IID('{754F2E9C-1578-434F-8649-89C8C4715B1B}')
	coclass_clsid = None

	# Result is of type ISignal
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{884DBC04-7A76-11D3-8571-00105A3E017B}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{884DBC04-7A76-11D3-8571-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{884DBC04-7A76-11D3-8571-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISignals2(DispatchBaseClass):
	'ISignals2 Interface'
	CLSID = IID('{E12E5261-5F8B-402A-8E85-C9CE9E53E864}')
	coclass_clsid = IID('{F7882897-2BFA-45FE-BE03-29B52EC09CB0}')

	# The method FullSignalName is actually a property, but must be used as a method to correctly pass the arguments
	def FullSignalName(self, unique_name=defaultNamedNotOptArg):
		'property FullSignalName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(4, LCID, 2, (8, 0), ((8, 1),),unique_name
			)

	# Result is of type ISignal
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{884DBC04-7A76-11D3-8571-00105A3E017B}')
		return ret

	# The method UniqueSignalName is actually a property, but must be used as a method to correctly pass the arguments
	def UniqueSignalName(self, full_name=defaultNamedNotOptArg):
		'property UniqueSignalName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(5, LCID, 2, (8, 0), ((8, 1),),full_name
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{884DBC04-7A76-11D3-8571-00105A3E017B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{884DBC04-7A76-11D3-8571-00105A3E017B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISimulation(DispatchBaseClass):
	'ISimulation Interface'
	CLSID = IID('{32B6F3C0-A271-11D3-85B9-00105A3E017B}')
	coclass_clsid = None

	def IncrementTime(self, timeInc=defaultNamedNotOptArg):
		'method IncrementTime'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((19, 1),),timeInc
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CurrentTime": (3, 2, (19, 0), (), "CurrentTime", None),
		"CurrentTimeHigh": (4, 2, (19, 0), (), "CurrentTimeHigh", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISimulation2(DispatchBaseClass):
	'ISimulation2 Interface'
	CLSID = IID('{0D44F5D0-9B74-11D4-86D0-00105A3E017B}')
	coclass_clsid = None

	def IncrementTime(self, timeInc=defaultNamedNotOptArg):
		'method IncrementTime'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((19, 1),),timeInc
			)

	def IncrementTimeAndWait(self, timeInc=defaultNamedNotOptArg):
		'method IncrementTimeAndWait'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((19, 1),),timeInc
			)

	_prop_map_get_ = {
		"Animation": (8, 2, (5, 0), (), "Animation", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CurrentTime": (3, 2, (19, 0), (), "CurrentTime", None),
		"CurrentTimeHigh": (4, 2, (19, 0), (), "CurrentTimeHigh", None),
		"NotificationType": (7, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Animation": ((8, LCID, 4, 0),()),
		"NotificationType": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISimulationSetup(DispatchBaseClass):
	'ISimulationSetup Interface'
	CLSID = IID('{9E2F76E0-D239-11D3-85E6-00105A3E017B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Generators": (4, 2, (9, 0), (), "Generators", None),
		"InteractiveGenerators": (5, 2, (9, 0), (), "InteractiveGenerators", None),
		"Nodes": (3, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReplayCollection": (6, 2, (9, 0), (), "ReplayCollection", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISimulationSetup2(DispatchBaseClass):
	'ISimulationSetup2 Interface'
	CLSID = IID('{A97B6751-BD4A-41CB-96E2-7421211D5BAD}')
	coclass_clsid = IID('{9E2F76E2-D239-11D3-85E6-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Buses": (7, 2, (9, 0), (), "Buses", None),
		"Generators": (4, 2, (9, 0), (), "Generators", None),
		"InteractiveGenerators": (5, 2, (9, 0), (), "InteractiveGenerators", None),
		"Nodes": (3, 2, (9, 0), (), "Nodes", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReplayCollection": (6, 2, (9, 0), (), "ReplayCollection", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISimulationVB(DispatchBaseClass):
	'ISimulationVB Interface'
	CLSID = IID('{BF709443-6C1F-4A3F-8378-A07CAC452CE2}')
	coclass_clsid = IID('{CA5C18B0-A1B0-11D3-85B7-00105A3E017B}')

	def IncrementTime(self, timeInc=defaultNamedNotOptArg):
		'method IncrementTime'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1),),timeInc
			)

	def IncrementTimeAndWait(self, timeInc=defaultNamedNotOptArg):
		'method IncrementTimeAndWait'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((3, 1),),timeInc
			)

	_prop_map_get_ = {
		"Animation": (8, 2, (5, 0), (), "Animation", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CurrentTime": (3, 2, (3, 0), (), "CurrentTime", None),
		"CurrentTimeHigh": (4, 2, (3, 0), (), "CurrentTimeHigh", None),
		"NotificationType": (7, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Animation": ((8, LCID, 4, 0),()),
		"NotificationType": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISingleFileDataSource(DispatchBaseClass):
	'ISingleFileDataSource Interface'
	CLSID = IID('{AAE18347-CE12-47D8-9928-53F639EA65E3}')
	coclass_clsid = IID('{EF5B78B7-A7EF-46AE-909E-A97FAE458FB9}')

	def Import(self, pMergeStrategy=0):
		'method Import'
		return self._oleobj_.InvokeTypes(100, LCID, 1, (3, 0), ((3, 49),),pMergeStrategy
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Id": (3, 2, (3, 0), (), "Id", None),
		# Method 'ImportIssues' returns object of type 'IDataSourceIssues'
		"ImportIssues": (106, 2, (9, 0), (), "ImportIssues", '{47E1195E-8EC7-4B43-85D7-DA57BD9F7C7A}'),
		# Method 'ImportParameters' returns object of type 'IDataSourceImportParameters'
		"ImportParameters": (104, 2, (9, 0), (), "ImportParameters", '{8AD94E96-2EA9-470B-911C-9CB3508C2CAD}'),
		"ImportStatus": (101, 2, (3, 0), (), "ImportStatus", None),
		"IsGroupSource": (102, 2, (11, 0), (), "IsGroupSource", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SourceFile": (200, 2, (8, 0), (), "SourceFile", None),
		"SourceFormat": (103, 2, (3, 0), (), "SourceFormat", None),
		"SourceType": (105, 2, (3, 0), (), "SourceType", None),
	}
	_prop_map_put_ = {
		"SourceFile": ((200, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISnippet(DispatchBaseClass):
	'ISnippet Interface'
	CLSID = IID('{643C3621-EEF6-4274-97D7-C3AA1171EF5B}')
	coclass_clsid = IID('{ABBDCC90-DDEA-43D9-B467-8268E3C151C6}')

	def IsRunning(self):
		'method IsRunning'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	def Run(self):
		'method Run'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISnippetFile(DispatchBaseClass):
	'ISnippetFile Interface'
	CLSID = IID('{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}')
	coclass_clsid = IID('{36A3BDB7-640A-442E-A003-1F2955B4C283}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Snippets": (4, 2, (9, 0), (), "Snippets", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISnippetFiles(DispatchBaseClass):
	'ISnippetFiles Interface'
	CLSID = IID('{1BE207E7-5D66-4CC6-9CD7-43E36AE8D90E}')
	coclass_clsid = IID('{E9A42FF9-261E-4362-9A67-91F4A401F835}')

	# Result is of type ISnippetFile
	def Add(self, FullName=defaultNamedNotOptArg, fileName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (8, 1)),FullName
			, fileName)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}')
		return ret

	# Result is of type ISnippetFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISnippetSetup(DispatchBaseClass):
	'ISnippetSetup Interface'
	CLSID = IID('{83D44C26-1EF7-4904-8786-59601330AFDD}')
	coclass_clsid = IID('{DBBFCDE8-7397-4892-97C7-B16A61D1F9D0}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"SnippetFiles": (3, 2, (9, 0), (), "SnippetFiles", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISnippets(DispatchBaseClass):
	'ISnippets Interface'
	CLSID = IID('{BE8EBE57-228C-4991-8B33-AD3E16FB5011}')
	coclass_clsid = IID('{35EB8527-B815-4EA3-823A-69BDB263AA95}')

	# Result is of type ISnippet
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{643C3621-EEF6-4274-97D7-C3AA1171EF5B}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{643C3621-EEF6-4274-97D7-C3AA1171EF5B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{643C3621-EEF6-4274-97D7-C3AA1171EF5B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IStandaloneMode(DispatchBaseClass):
	'IStandaloneMode Interface'
	CLSID = IID('{8CB2B4AC-9015-46F3-ADE2-1125E3211287}')
	coclass_clsid = IID('{DC2B1DF0-A135-4EFF-9E92-70CE86745D5D}')

	def DownloadConfiguration(self, pResult=pythoncom.Missing):
		'method DownloadConfiguration'
		return self._ApplyTypes_(2, 1, (24, 0), ((16396, 2),), 'DownloadConfiguration', None,pResult
			)

	def ExportConfiguration(self, rtcfg=defaultNamedNotOptArg, pResult=pythoncom.Missing):
		'method ExportConfiguration'
		return self._ApplyTypes_(1, 1, (24, 0), ((8, 1), (16396, 2)), 'ExportConfiguration', None,rtcfg
			, pResult)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IStartValueList(DispatchBaseClass):
	'IStartValueList Interface'
	CLSID = IID('{82D6EC01-1A53-46FD-8026-C3E9F24DBCAC}')
	coclass_clsid = IID('{2B6E6A79-8C83-4CAB-837C-D218FCB4F75B}')

	def Append(self, FilePath=defaultNamedNotOptArg, pErrorMessage=pythoncom.Missing):
		'method Append'
		return self._ApplyTypes_(2, 1, (11, 0), ((8, 1), (16396, 2)), 'Append', None,FilePath
			, pErrorMessage)

	def Delete(self, pErrorMessage=pythoncom.Missing):
		'method Delete'
		return self._ApplyTypes_(4, 1, (11, 0), ((16396, 2),), 'Delete', None,pErrorMessage
			)

	def Load(self, FilePath=defaultNamedNotOptArg, pErrorMessage=pythoncom.Missing):
		'method Load'
		return self._ApplyTypes_(1, 1, (11, 0), ((8, 1), (16396, 2)), 'Load', None,FilePath
			, pErrorMessage)

	def Save(self, FilePath=defaultNamedNotOptArg, pErrorMessage=pythoncom.Missing):
		'method Save'
		return self._ApplyTypes_(3, 1, (11, 0), ((8, 1), (16396, 2)), 'Save', None,FilePath
			, pErrorMessage)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISymbolMappings(DispatchBaseClass):
	'ISymbolMappings Interface'
	CLSID = IID('{CA8B2D7A-D1A3-4554-AB11-F22FCC057735}')
	coclass_clsid = IID('{321EF8A7-4CE1-4369-9506-ACC3CF936586}')

	def Append(self, mappingFilePath=defaultNamedNotOptArg, pErrorMessage=pythoncom.Missing):
		'method Append'
		return self._ApplyTypes_(2, 1, (11, 0), ((8, 1), (16396, 2)), 'Append', None,mappingFilePath
			, pErrorMessage)

	def Delete(self, pErrorMessage=pythoncom.Missing):
		'method Delete'
		return self._ApplyTypes_(4, 1, (11, 0), ((16396, 2),), 'Delete', None,pErrorMessage
			)

	def Load(self, mappingFilePath=defaultNamedNotOptArg, pErrorMessage=pythoncom.Missing):
		'method Load'
		return self._ApplyTypes_(1, 1, (11, 0), ((8, 1), (16396, 2)), 'Load', None,mappingFilePath
			, pErrorMessage)

	def Save(self, mappingFilePath=defaultNamedNotOptArg, pErrorMessage=pythoncom.Missing):
		'method Save'
		return self._ApplyTypes_(3, 1, (11, 0), ((8, 1), (16396, 2)), 'Save', None,mappingFilePath
			, pErrorMessage)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISystem(DispatchBaseClass):
	'ISystem Interface'
	CLSID = IID('{85D7B36A-E777-4521-BAC5-426DB03472B0}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Namespaces": (3, 2, (9, 0), (), "Namespaces", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISystem2(DispatchBaseClass):
	'ISystem2 Interface'
	CLSID = IID('{CD3CCC4D-0EBF-4CA3-A341-3B5AD516293B}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Namespaces": (3, 2, (9, 0), (), "Namespaces", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"VariablesFiles": (4, 2, (9, 0), (), "VariablesFiles", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISystem3(DispatchBaseClass):
	'ISystem3 Interface'
	CLSID = IID('{26745CBC-FF87-49A8-8625-0BB135957336}')
	coclass_clsid = IID('{0EC3B32A-A27C-4165-B5AD-7FAECBA029C5}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Namespaces": (3, 2, (9, 0), (), "Namespaces", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"StrongTypedVariables": (5, 2, (11, 0), (), "StrongTypedVariables", None),
		"VariablesFiles": (4, 2, (9, 0), (), "VariablesFiles", None),
	}
	_prop_map_put_ = {
		"StrongTypedVariables": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITSTestModule(DispatchBaseClass):
	'ITSTestModule Interface'
	CLSID = IID('{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
	coclass_clsid = None

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITSTestModule2(DispatchBaseClass):
	'ITSTestModule2 Interface'
	CLSID = IID('{71409476-01CA-46EB-89EA-960C6BB08B4D}')
	coclass_clsid = None

	def Reload(self):
		'method Reload'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITSTestModule3(DispatchBaseClass):
	'ITSTestModule3 Interface'
	CLSID = IID('{A774A824-018E-4A43-A546-E2659EB42860}')
	coclass_clsid = None

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def Reload(self):
		'method Reload'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"TestVariant": (19, 2, (8, 0), (), "TestVariant", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
		"TestVariant": ((19, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITSTestModule4(DispatchBaseClass):
	'ITSTestModule4 Interface'
	CLSID = IID('{46A0D3DE-9A25-47E7-9A53-C685E1B07B34}')
	coclass_clsid = None

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def Reload(self):
		'method Reload'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), (),)

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DebugMode": (29, 2, (3, 0), (), "DebugMode", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"ExecuteRepeatedly": (22, 2, (11, 0), (), "ExecuteRepeatedly", None),
		"ExecutionMode": (23, 2, (3, 0), (), "ExecutionMode", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"NumberOfExecutions": (24, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"PausingMode": (30, 2, (3, 0), (), "PausingMode", None),
		"RandomizeEachCycle": (27, 2, (11, 0), (), "RandomizeEachCycle", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"TestCasesExecutedInRandomOrder": (26, 2, (11, 0), (), "TestCasesExecutedInRandomOrder", None),
		"TestVariant": (19, 2, (8, 0), (), "TestVariant", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
		"VerdictImpact": (28, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((29, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"ExecuteRepeatedly": ((22, LCID, 4, 0),()),
		"ExecutionMode": ((23, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"NumberOfExecutions": ((24, LCID, 4, 0),()),
		"PausingMode": ((30, LCID, 4, 0),()),
		"RandomizeEachCycle": ((27, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
		"TestCasesExecutedInRandomOrder": ((26, LCID, 4, 0),()),
		"TestVariant": ((19, LCID, 4, 0),()),
		"VerdictImpact": ((28, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITSTestModule5(DispatchBaseClass):
	'ITSTestModule5 Interface'
	CLSID = IID('{B117FD73-313E-4EC9-80E5-2A6611F25D23}')
	coclass_clsid = None

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def Reload(self):
		'method Reload'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), (),)

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DebugMode": (29, 2, (3, 0), (), "DebugMode", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"ExecuteRepeatedly": (22, 2, (11, 0), (), "ExecuteRepeatedly", None),
		"ExecutionMode": (23, 2, (3, 0), (), "ExecutionMode", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"NumberOfExecutions": (24, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"PausingMode": (30, 2, (3, 0), (), "PausingMode", None),
		"RandomizeEachCycle": (27, 2, (11, 0), (), "RandomizeEachCycle", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"StartOnSysVar": (31, 2, (8, 0), (), "StartOnSysVar", None),
		"TestCasesExecutedInRandomOrder": (26, 2, (11, 0), (), "TestCasesExecutedInRandomOrder", None),
		"TestStateSysVar": (32, 2, (8, 0), (), "TestStateSysVar", None),
		"TestVariant": (19, 2, (8, 0), (), "TestVariant", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
		"VerdictImpact": (28, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((29, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"ExecuteRepeatedly": ((22, LCID, 4, 0),()),
		"ExecutionMode": ((23, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"NumberOfExecutions": ((24, LCID, 4, 0),()),
		"PausingMode": ((30, LCID, 4, 0),()),
		"RandomizeEachCycle": ((27, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
		"StartOnSysVar": ((31, LCID, 4, 0),()),
		"TestCasesExecutedInRandomOrder": ((26, LCID, 4, 0),()),
		"TestStateSysVar": ((32, LCID, 4, 0),()),
		"TestVariant": ((19, LCID, 4, 0),()),
		"VerdictImpact": ((28, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITSTestModule6(DispatchBaseClass):
	'ITestConfiguration6 Interface'
	CLSID = IID('{F500EEE4-D61F-4DF9-B292-B1436B13FC8D}')
	coclass_clsid = IID('{6A5391A1-8951-425F-9191-C4884FA3A27D}')

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def Reload(self):
		'method Reload'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), (),)

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DebugMode": (29, 2, (3, 0), (), "DebugMode", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"ExecuteRepeatedly": (22, 2, (11, 0), (), "ExecuteRepeatedly", None),
		"ExecutionMode": (23, 2, (3, 0), (), "ExecutionMode", None),
		"FullName": (5, 2, (8, 0), (), "FullName", None),
		"Libraries": (12, 2, (9, 0), (), "Libraries", None),
		"Modules": (13, 2, (9, 0), (), "Modules", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"NumberOfExecutions": (24, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (6, 2, (8, 0), (), "Path", None),
		"PausingMode": (30, 2, (3, 0), (), "PausingMode", None),
		"RandomizeEachCycle": (27, 2, (11, 0), (), "RandomizeEachCycle", None),
		"Report": (11, 2, (9, 0), (), "Report", None),
		"Sequence": (14, 2, (9, 0), (), "Sequence", None),
		"SpecificationStyleSheet": (10, 2, (8, 0), (), "SpecificationStyleSheet", None),
		"StartOnEnvVar": (8, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (9, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (7, 2, (11, 0), (), "StartOnMeasurement", None),
		"StartOnSysVar": (31, 2, (8, 0), (), "StartOnSysVar", None),
		"TcpIpStackSetting": (33, 2, (9, 0), (), "TcpIpStackSetting", None),
		"TestCasesExecutedInRandomOrder": (26, 2, (11, 0), (), "TestCasesExecutedInRandomOrder", None),
		"TestStateSysVar": (32, 2, (8, 0), (), "TestStateSysVar", None),
		"TestVariant": (19, 2, (8, 0), (), "TestVariant", None),
		"Verdict": (15, 2, (3, 0), (), "Verdict", None),
		"VerdictImpact": (28, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((29, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"ExecuteRepeatedly": ((22, LCID, 4, 0),()),
		"ExecutionMode": ((23, LCID, 4, 0),()),
		"FullName": ((5, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"NumberOfExecutions": ((24, LCID, 4, 0),()),
		"PausingMode": ((30, LCID, 4, 0),()),
		"RandomizeEachCycle": ((27, LCID, 4, 0),()),
		"SpecificationStyleSheet": ((10, LCID, 4, 0),()),
		"StartOnEnvVar": ((8, LCID, 4, 0),()),
		"StartOnKey": ((9, LCID, 4, 0),()),
		"StartOnMeasurement": ((7, LCID, 4, 0),()),
		"StartOnSysVar": ((31, LCID, 4, 0),()),
		"TestCasesExecutedInRandomOrder": ((26, LCID, 4, 0),()),
		"TestStateSysVar": ((32, LCID, 4, 0),()),
		"TestVariant": ((19, LCID, 4, 0),()),
		"VerdictImpact": ((28, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITcpIpAdapter(DispatchBaseClass):
	'ITcpIpAdapter Interface'
	CLSID = IID('{212A97ED-1940-4733-8FE1-901B0AF8DB14}')
	coclass_clsid = IID('{C023D52A-E45A-49AA-B6A0-40A654A33592}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ChannelName": (6, 2, (8, 0), (), "ChannelName", None),
		"IpV4Setting": (7, 2, (9, 0), (), "IpV4Setting", None),
		"IpV6Setting": (8, 2, (9, 0), (), "IpV6Setting", None),
		"MacId": (4, 2, (8, 0), (), "MacId", None),
		"Mtu": (3, 2, (19, 0), (), "Mtu", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Vlans": (9, 2, (9, 0), (), "Vlans", None),
		"busName": (5, 2, (8, 0), (), "busName", None),
	}
	_prop_map_put_ = {
		"MacId": ((4, LCID, 4, 0),()),
		"Mtu": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITcpIpAdapters(DispatchBaseClass):
	'ITcpIpAdapters Interface'
	CLSID = IID('{2E642C88-22F4-4F61-8A3A-FE9790A1F3C2}')
	coclass_clsid = IID('{BA3A99FC-F8C5-44E1-ABC9-0060090ED9BD}')

	# Result is of type ITcpIpAdapter
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{212A97ED-1940-4733-8FE1-901B0AF8DB14}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{212A97ED-1940-4733-8FE1-901B0AF8DB14}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{212A97ED-1940-4733-8FE1-901B0AF8DB14}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITcpIpStackSetting(DispatchBaseClass):
	'ITcpIpStackSetting Interface'
	CLSID = IID('{61E75232-C8A9-4C15-8818-4C41DD579A23}')
	coclass_clsid = IID('{24EC9175-1C91-493D-96FF-89DC8E1A1543}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DelayedAckEnabled": (5, 2, (11, 0), (), "DelayedAckEnabled", None),
		"IPv4DefaultGateway": (7, 2, (8, 0), (), "IPv4DefaultGateway", None),
		"IPv6DefaultGateway": (8, 2, (8, 0), (), "IPv6DefaultGateway", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RoutingEnabled": (6, 2, (11, 0), (), "RoutingEnabled", None),
		"StackSelection": (4, 2, (3, 0), (), "StackSelection", None),
		"TcpIpAdapters": (3, 2, (9, 0), (), "TcpIpAdapters", None),
	}
	_prop_map_put_ = {
		"DelayedAckEnabled": ((5, LCID, 4, 0),()),
		"IPv4DefaultGateway": ((7, LCID, 4, 0),()),
		"IPv6DefaultGateway": ((8, LCID, 4, 0),()),
		"RoutingEnabled": ((6, LCID, 4, 0),()),
		"StackSelection": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestCase(DispatchBaseClass):
	'ITestCase Interface'
	CLSID = IID('{7DD67620-CC5F-4234-8390-778053B1FF01}')
	coclass_clsid = IID('{B69A3E69-6299-4EAA-BE75-E32DF48D2C87}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Ident": (5, 2, (8, 0), (), "Ident", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Verdict": (6, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfiguration(DispatchBaseClass):
	'ITestConfiguration Interface'
	CLSID = IID('{41AA0642-6523-473C-8A58-57123E020859}')
	coclass_clsid = None

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Report' returns object of type 'ITestConfigurationReport'
		"Report": (7, 2, (9, 0), (), "Report", '{BC887636-BB88-42E7-911D-97B8D0681467}'),
		# Method 'TestUnits' returns object of type 'ITestUnits'
		"TestUnits": (6, 2, (9, 0), (), "TestUnits", '{CC055F08-5DF6-4FD0-B375-E67976E81F42}'),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfiguration2(DispatchBaseClass):
	'ITestConfiguration2 Interface'
	CLSID = IID('{0E81621C-E241-41C2-B18C-913EFA939A05}')
	coclass_clsid = None

	def ApplyVariants(self):
		'method ApplyVariants'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (11, 2, (8, 0), (), "Caption", None),
		"Elements": (13, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Report' returns object of type 'ITestConfigurationReport'
		"Report": (7, 2, (9, 0), (), "Report", '{BC887636-BB88-42E7-911D-97B8D0681467}'),
		# Method 'Settings' returns object of type 'ITestConfigurationSettings'
		"Settings": (10, 2, (9, 0), (), "Settings", '{8D16877F-6BB0-4149-AD69-E44F6FBB330C}'),
		# Method 'TestUnits' returns object of type 'ITestUnits'
		"TestUnits": (6, 2, (9, 0), (), "TestUnits", '{CC055F08-5DF6-4FD0-B375-E67976E81F42}'),
		"Type": (12, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfiguration3(DispatchBaseClass):
	'ITestConfiguration3 Interface'
	CLSID = IID('{D3B9590D-503A-43BA-8BEE-190E0BDDF9B4}')
	coclass_clsid = None

	def ApplyVariants(self):
		'method ApplyVariants'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (11, 2, (8, 0), (), "Caption", None),
		"Elements": (13, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Report' returns object of type 'ITestConfigurationReport'
		"Report": (7, 2, (9, 0), (), "Report", '{BC887636-BB88-42E7-911D-97B8D0681467}'),
		"Running": (17, 2, (11, 0), (), "Running", None),
		# Method 'Settings' returns object of type 'ITestConfigurationSettings'
		"Settings": (10, 2, (9, 0), (), "Settings", '{8D16877F-6BB0-4149-AD69-E44F6FBB330C}'),
		# Method 'TestUnits' returns object of type 'ITestUnits'
		"TestUnits": (6, 2, (9, 0), (), "TestUnits", '{CC055F08-5DF6-4FD0-B375-E67976E81F42}'),
		"Type": (12, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfiguration4(DispatchBaseClass):
	'ITestConfiguration4 Interface'
	CLSID = IID('{BAC68327-029F-458D-9C87-6C7EFC276CA9}')
	coclass_clsid = None

	def ApplyVariants(self):
		'method ApplyVariants'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def ContainsId(self, Id=defaultNamedNotOptArg):
		'method ContainsId'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((8, 1),),Id
			)

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (11, 2, (8, 0), (), "Caption", None),
		"Elements": (13, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Id": (18, 2, (8, 0), (), "Id", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Report' returns object of type 'ITestConfigurationReport'
		"Report": (7, 2, (9, 0), (), "Report", '{BC887636-BB88-42E7-911D-97B8D0681467}'),
		"Running": (17, 2, (11, 0), (), "Running", None),
		# Method 'Settings' returns object of type 'ITestConfigurationSettings'
		"Settings": (10, 2, (9, 0), (), "Settings", '{8D16877F-6BB0-4149-AD69-E44F6FBB330C}'),
		# Method 'TestUnits' returns object of type 'ITestUnits'
		"TestUnits": (6, 2, (9, 0), (), "TestUnits", '{CC055F08-5DF6-4FD0-B375-E67976E81F42}'),
		"Type": (12, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfiguration5(DispatchBaseClass):
	'ITestConfiguration5 Interface'
	CLSID = IID('{490B7A27-FB8E-47ED-BE1F-274166004269}')
	coclass_clsid = None

	def ApplyVariants(self):
		'method ApplyVariants'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def ApplyVariantsAsync(self):
		'method ApplyVariantsAsync'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def ContainsId(self, Id=defaultNamedNotOptArg):
		'method ContainsId'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((8, 1),),Id
			)

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (11, 2, (8, 0), (), "Caption", None),
		"Elements": (13, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Id": (18, 2, (8, 0), (), "Id", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Report' returns object of type 'ITestConfigurationReport'
		"Report": (7, 2, (9, 0), (), "Report", '{BC887636-BB88-42E7-911D-97B8D0681467}'),
		"Running": (17, 2, (11, 0), (), "Running", None),
		# Method 'Settings' returns object of type 'ITestConfigurationSettings'
		"Settings": (10, 2, (9, 0), (), "Settings", '{8D16877F-6BB0-4149-AD69-E44F6FBB330C}'),
		# Method 'TestUnits' returns object of type 'ITestUnits'
		"TestUnits": (6, 2, (9, 0), (), "TestUnits", '{CC055F08-5DF6-4FD0-B375-E67976E81F42}'),
		"Type": (12, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfiguration6(DispatchBaseClass):
	'ITestConfiguration6 Interface'
	CLSID = IID('{6E686DFA-9F5C-49C7-9993-D7CBD4E9DB6A}')
	coclass_clsid = None

	def ApplyVariants(self):
		'method ApplyVariants'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def ApplyVariantsAsync(self):
		'method ApplyVariantsAsync'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def ContainsId(self, Id=defaultNamedNotOptArg):
		'method ContainsId'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((8, 1),),Id
			)

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (11, 2, (8, 0), (), "Caption", None),
		"Elements": (13, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Id": (18, 2, (8, 0), (), "Id", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Report' returns object of type 'ITestConfigurationReport'
		"Report": (7, 2, (9, 0), (), "Report", '{BC887636-BB88-42E7-911D-97B8D0681467}'),
		"Running": (17, 2, (11, 0), (), "Running", None),
		# Method 'Settings' returns object of type 'ITestConfigurationSettings'
		"Settings": (10, 2, (9, 0), (), "Settings", '{8D16877F-6BB0-4149-AD69-E44F6FBB330C}'),
		"TcpIpStackSetting": (21, 2, (9, 0), (), "TcpIpStackSetting", None),
		# Method 'TestUnits' returns object of type 'ITestUnits'
		"TestUnits": (6, 2, (9, 0), (), "TestUnits", '{CC055F08-5DF6-4FD0-B375-E67976E81F42}'),
		"Type": (12, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfiguration7(DispatchBaseClass):
	'ITestConfiguration7 Interface'
	CLSID = IID('{EC34E24D-11A5-40C1-809A-53258622E1ED}')
	coclass_clsid = IID('{B00A2245-2B50-408B-B2A9-597460111486}')

	def ApplyVariants(self):
		'method ApplyVariants'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def ApplyVariantsAsync(self):
		'method ApplyVariantsAsync'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def ContainsId(self, Id=defaultNamedNotOptArg):
		'method ContainsId'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((8, 1),),Id
			)

	def DeleteVariantProfileAsync(self, Name=defaultNamedNotOptArg):
		'method DeleteVariantProfileAsync'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def ExportAllVariantProfiles(self, Path=defaultNamedNotOptArg):
		'method ExportAllVariantProfiles'
		return self._oleobj_.InvokeTypes(28, LCID, 1, (24, 0), ((8, 1),),Path
			)

	def ExportCurrentVariantProfile(self, Path=defaultNamedNotOptArg):
		'method ExportCurrentVariantProfile'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (24, 0), ((8, 1),),Path
			)

	def GetCurrentVariantProfile(self):
		'method GetCurrentVariantProfile'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(29, LCID, 1, (8, 0), (),)

	def ImportVariantProfilesAsync(self, Path=defaultNamedNotOptArg):
		'method ImportVariantProfilesAsync'
		return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((8, 1),),Path
			)

	# Result is of type IVariantProfileNames
	def ListAllVariantProfiles(self):
		'method ListAllVariantProfiles'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'ListAllVariantProfiles', '{9F64CBD2-C6F2-4BB7-B656-5D856796A16D}')
		return ret

	def Pause(self):
		'method Pause'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), (),)

	def Resume(self):
		'method Resume'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	def RevertCurrentVariantProfile(self):
		'method RevertCurrentVariantProfile'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), (),)

	def SaveAndApplyVariantProfileAsync(self):
		'method SaveAndApplyVariantProfileAsync'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), (),)

	def SaveVariantProfileAsAsync(self, Name=defaultNamedNotOptArg):
		'method SaveVariantProfileAsAsync'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def SetVariantProfileAsync(self, Name=defaultNamedNotOptArg):
		'method SetVariantProfileAsync'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def Start(self):
		'method Start'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def Stop(self):
		'method Stop'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (11, 2, (8, 0), (), "Caption", None),
		"Elements": (13, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Id": (18, 2, (8, 0), (), "Id", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Report' returns object of type 'ITestConfigurationReport'
		"Report": (7, 2, (9, 0), (), "Report", '{BC887636-BB88-42E7-911D-97B8D0681467}'),
		"Running": (17, 2, (11, 0), (), "Running", None),
		# Method 'Settings' returns object of type 'ITestConfigurationSettings'
		"Settings": (10, 2, (9, 0), (), "Settings", '{8D16877F-6BB0-4149-AD69-E44F6FBB330C}'),
		"TcpIpStackSetting": (21, 2, (9, 0), (), "TcpIpStackSetting", None),
		# Method 'TestUnits' returns object of type 'ITestUnits'
		"TestUnits": (6, 2, (9, 0), (), "TestUnits", '{CC055F08-5DF6-4FD0-B375-E67976E81F42}'),
		"Type": (12, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationReport(DispatchBaseClass):
	'ITestConfigurationReport Interface'
	CLSID = IID('{BC887636-BB88-42E7-911D-97B8D0681467}')
	coclass_clsid = IID('{AB1EE4BF-EB3E-4AF0-96AC-4C4050633EA3}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"UseJointReport": (3, 2, (11, 0), (), "UseJointReport", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationReport2(DispatchBaseClass):
	'ITestConfigurationReport2 Interface'
	CLSID = IID('{E970C973-243C-4F44-AD57-EED6AC429342}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullPath": (4, 2, (8, 0), (), "FullPath", None),
		"LastWrittenFullPath": (5, 2, (8, 0), (), "LastWrittenFullPath", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"UseJointReport": (3, 2, (11, 0), (), "UseJointReport", None),
	}
	_prop_map_put_ = {
		"FullPath": ((4, LCID, 4, 0),()),
		"UseJointReport": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationReport3(DispatchBaseClass):
	'ITestConfigurationReport3 Interface'
	CLSID = IID('{BAAEF49A-D7AD-4EA1-A3F6-B4318D1FAD41}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FilterSettings": (7, 2, (9, 0), (), "FilterSettings", None),
		"FullPath": (4, 2, (8, 0), (), "FullPath", None),
		"LastWrittenFullPath": (5, 2, (8, 0), (), "LastWrittenFullPath", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"StyleSheet": (9, 2, (8, 0), (), "StyleSheet", None),
		"StyleSheetEnabled": (8, 2, (11, 0), (), "StyleSheetEnabled", None),
		"TestRun": (6, 2, (3, 0), (), "TestRun", None),
		"UseJointReport": (3, 2, (11, 0), (), "UseJointReport", None),
	}
	_prop_map_put_ = {
		"FullPath": ((4, LCID, 4, 0),()),
		"StyleSheet": ((9, LCID, 4, 0),()),
		"StyleSheetEnabled": ((8, LCID, 4, 0),()),
		"TestRun": ((6, LCID, 4, 0),()),
		"UseJointReport": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationReport4(DispatchBaseClass):
	'ITestConfigurationReport4 Interface'
	CLSID = IID('{9E85F768-1B1C-4D26-9EEB-3A0BBAEBA374}')
	coclass_clsid = IID('{AB1EE4BF-EB3E-4AF0-96AC-4C4050633EA3}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FilterSettings": (7, 2, (9, 0), (), "FilterSettings", None),
		"FullPath": (4, 2, (8, 0), (), "FullPath", None),
		"LastWrittenFullPath": (5, 2, (8, 0), (), "LastWrittenFullPath", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReportFormat": (33, 2, (3, 0), (), "ReportFormat", None),
		"StyleSheet": (9, 2, (8, 0), (), "StyleSheet", None),
		"StyleSheetEnabled": (8, 2, (11, 0), (), "StyleSheetEnabled", None),
		"TestRun": (6, 2, (3, 0), (), "TestRun", None),
		"UseJointReport": (3, 2, (11, 0), (), "UseJointReport", None),
	}
	_prop_map_put_ = {
		"FullPath": ((4, LCID, 4, 0),()),
		"ReportFormat": ((33, LCID, 4, 0),()),
		"StyleSheet": ((9, LCID, 4, 0),()),
		"StyleSheetEnabled": ((8, LCID, 4, 0),()),
		"TestRun": ((6, LCID, 4, 0),()),
		"UseJointReport": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationReportFilterSettings(DispatchBaseClass):
	'ITestConfigurationReportFilterSettings Interface'
	CLSID = IID('{55217A2D-832D-4768-BAD7-1B6B3D19D9A6}')
	coclass_clsid = IID('{6DFAB307-89D8-4344-BB5B-BF40EEDFAC48}')

	def IsActive(self, eventId=defaultNamedNotOptArg):
		'method IsActive'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),eventId
			)

	def SetActive(self, eventId=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		'method SetActive'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (11, 1)),eventId
			, val)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"MaxTestStepLevel": (5, 2, (3, 0), (), "MaxTestStepLevel", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReportedTestCases": (3, 2, (3, 0), (), "ReportedTestCases", None),
		"ReportedTestStepsCommands": (4, 2, (3, 0), (), "ReportedTestStepsCommands", None),
	}
	_prop_map_put_ = {
		"MaxTestStepLevel": ((5, LCID, 4, 0),()),
		"ReportedTestCases": ((3, LCID, 4, 0),()),
		"ReportedTestStepsCommands": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationSettings(DispatchBaseClass):
	'ITestConfigurationSettings Interface'
	CLSID = IID('{8D16877F-6BB0-4149-AD69-E44F6FBB330C}')
	coclass_clsid = None

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"ExecutionMode": (7, 2, (3, 0), (), "ExecutionMode", None),
		"NumberOfExecutions": (8, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"StartOnEnvVar": (4, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (6, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (3, 2, (11, 0), (), "StartOnMeasurement", None),
		"StartOnSysVar": (5, 2, (8, 0), (), "StartOnSysVar", None),
		"VerdictImpact": (9, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"ExecutionMode": ((7, LCID, 4, 0),()),
		"NumberOfExecutions": ((8, LCID, 4, 0),()),
		"StartOnEnvVar": ((4, LCID, 4, 0),()),
		"StartOnKey": ((6, LCID, 4, 0),()),
		"StartOnMeasurement": ((3, LCID, 4, 0),()),
		"StartOnSysVar": ((5, LCID, 4, 0),()),
		"VerdictImpact": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationSettings2(DispatchBaseClass):
	'ITestConfigurationSettings2 Interface'
	CLSID = IID('{32D8C5C4-4E98-4D35-85E8-4FFFBFD0B7C5}')
	coclass_clsid = None

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DebugMode": (13, 2, (3, 0), (), "DebugMode", None),
		"DebugModePausingVerdict": (14, 2, (3, 0), (), "DebugModePausingVerdict", None),
		"ExecutionMode": (7, 2, (3, 0), (), "ExecutionMode", None),
		"IgnoreBreakOnFail": (12, 2, (11, 0), (), "IgnoreBreakOnFail", None),
		"NumberOfExecutions": (8, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RandomizeExecutionMode": (11, 2, (3, 0), (), "RandomizeExecutionMode", None),
		"StartOnEnvVar": (4, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (6, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (3, 2, (11, 0), (), "StartOnMeasurement", None),
		"StartOnSysVar": (5, 2, (8, 0), (), "StartOnSysVar", None),
		"VerdictImpact": (9, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((13, LCID, 4, 0),()),
		"DebugModePausingVerdict": ((14, LCID, 4, 0),()),
		"ExecutionMode": ((7, LCID, 4, 0),()),
		"IgnoreBreakOnFail": ((12, LCID, 4, 0),()),
		"NumberOfExecutions": ((8, LCID, 4, 0),()),
		"RandomizeExecutionMode": ((11, LCID, 4, 0),()),
		"StartOnEnvVar": ((4, LCID, 4, 0),()),
		"StartOnKey": ((6, LCID, 4, 0),()),
		"StartOnMeasurement": ((3, LCID, 4, 0),()),
		"StartOnSysVar": ((5, LCID, 4, 0),()),
		"VerdictImpact": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationSettings3(DispatchBaseClass):
	'ITestConfigurationSettings3 Interface'
	CLSID = IID('{73138884-E89A-4560-91E4-ABE2A8B4D5AE}')
	coclass_clsid = None

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DebugMode": (13, 2, (3, 0), (), "DebugMode", None),
		"DebugModePausingVerdict": (14, 2, (3, 0), (), "DebugModePausingVerdict", None),
		"ExecutionMode": (7, 2, (3, 0), (), "ExecutionMode", None),
		"IgnoreBreakOnFail": (12, 2, (11, 0), (), "IgnoreBreakOnFail", None),
		"NumberOfExecutions": (8, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RandomizeExecutionMode": (11, 2, (3, 0), (), "RandomizeExecutionMode", None),
		"StartOnEnvVar": (4, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (6, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (3, 2, (11, 0), (), "StartOnMeasurement", None),
		"StartOnSysVar": (5, 2, (8, 0), (), "StartOnSysVar", None),
		"StopOnEnvVar": (15, 2, (8, 0), (), "StopOnEnvVar", None),
		"StopOnKey": (17, 2, (8, 0), (), "StopOnKey", None),
		"StopOnSysVar": (16, 2, (8, 0), (), "StopOnSysVar", None),
		"VerdictImpact": (9, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((13, LCID, 4, 0),()),
		"DebugModePausingVerdict": ((14, LCID, 4, 0),()),
		"ExecutionMode": ((7, LCID, 4, 0),()),
		"IgnoreBreakOnFail": ((12, LCID, 4, 0),()),
		"NumberOfExecutions": ((8, LCID, 4, 0),()),
		"RandomizeExecutionMode": ((11, LCID, 4, 0),()),
		"StartOnEnvVar": ((4, LCID, 4, 0),()),
		"StartOnKey": ((6, LCID, 4, 0),()),
		"StartOnMeasurement": ((3, LCID, 4, 0),()),
		"StartOnSysVar": ((5, LCID, 4, 0),()),
		"StopOnEnvVar": ((15, LCID, 4, 0),()),
		"StopOnKey": ((17, LCID, 4, 0),()),
		"StopOnSysVar": ((16, LCID, 4, 0),()),
		"VerdictImpact": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurationSettings4(DispatchBaseClass):
	'ITestConfigurationSettings4 Interface'
	CLSID = IID('{369D42D9-095C-402E-82B7-DE421D0CC79C}')
	coclass_clsid = IID('{242CE8FB-6C01-456C-BAF6-38AFA74F7843}')

	def SetExecutionTime(self, days=defaultNamedNotOptArg, hours=defaultNamedNotOptArg, minutes=defaultNamedNotOptArg):
		'method SetExecutionTime'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),days
			, hours, minutes)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"DebugMode": (13, 2, (3, 0), (), "DebugMode", None),
		"DebugModePausingVerdict": (14, 2, (3, 0), (), "DebugModePausingVerdict", None),
		"ExecutionMode": (7, 2, (3, 0), (), "ExecutionMode", None),
		"IgnoreBreakOnErrorInTestSystem": (18, 2, (11, 0), (), "IgnoreBreakOnErrorInTestSystem", None),
		"IgnoreBreakOnFail": (12, 2, (11, 0), (), "IgnoreBreakOnFail", None),
		"NumberOfExecutions": (8, 2, (3, 0), (), "NumberOfExecutions", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RandomizeExecutionMode": (11, 2, (3, 0), (), "RandomizeExecutionMode", None),
		"StartOnEnvVar": (4, 2, (8, 0), (), "StartOnEnvVar", None),
		"StartOnKey": (6, 2, (8, 0), (), "StartOnKey", None),
		"StartOnMeasurement": (3, 2, (11, 0), (), "StartOnMeasurement", None),
		"StartOnSysVar": (5, 2, (8, 0), (), "StartOnSysVar", None),
		"StopOnEnvVar": (15, 2, (8, 0), (), "StopOnEnvVar", None),
		"StopOnKey": (17, 2, (8, 0), (), "StopOnKey", None),
		"StopOnSysVar": (16, 2, (8, 0), (), "StopOnSysVar", None),
		"VerdictImpact": (9, 2, (3, 0), (), "VerdictImpact", None),
	}
	_prop_map_put_ = {
		"DebugMode": ((13, LCID, 4, 0),()),
		"DebugModePausingVerdict": ((14, LCID, 4, 0),()),
		"ExecutionMode": ((7, LCID, 4, 0),()),
		"IgnoreBreakOnErrorInTestSystem": ((18, LCID, 4, 0),()),
		"IgnoreBreakOnFail": ((12, LCID, 4, 0),()),
		"NumberOfExecutions": ((8, LCID, 4, 0),()),
		"RandomizeExecutionMode": ((11, LCID, 4, 0),()),
		"StartOnEnvVar": ((4, LCID, 4, 0),()),
		"StartOnKey": ((6, LCID, 4, 0),()),
		"StartOnMeasurement": ((3, LCID, 4, 0),()),
		"StartOnSysVar": ((5, LCID, 4, 0),()),
		"StopOnEnvVar": ((15, LCID, 4, 0),()),
		"StopOnKey": ((17, LCID, 4, 0),()),
		"StopOnSysVar": ((16, LCID, 4, 0),()),
		"VerdictImpact": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestConfigurations(DispatchBaseClass):
	'ITestConfigurations Interface'
	CLSID = IID('{CC065BBC-C124-4F43-A8C8-BE54D736197E}')
	coclass_clsid = IID('{CC053D94-6CC0-481A-BACA-EF0B0BC33FFD}')

	# Result is of type ITestConfiguration
	def Add(self):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{41AA0642-6523-473C-8A58-57123E020859}')
		return ret

	# Result is of type ITestConfiguration
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{41AA0642-6523-473C-8A58-57123E020859}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{41AA0642-6523-473C-8A58-57123E020859}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{41AA0642-6523-473C-8A58-57123E020859}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestEnvironment(DispatchBaseClass):
	'ITestEnvironment Interface'
	CLSID = IID('{C7616799-F96E-4D03-861E-A7577ECB6741}')
	coclass_clsid = None

	def ExecuteAll(self):
		'method ExecuteAll'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedOptArg, promptUser=defaultNamedOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 17), (12, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (12, 17)),Name
			, major, minor, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullName": (8, 2, (8, 0), (), "FullName", None),
		"Items": (5, 2, (9, 0), (), "Items", None),
		"Modified": (10, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (9, 2, (8, 0), (), "Path", None),
		"Report": (6, 2, (9, 0), (), "Report", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestEnvironment2(DispatchBaseClass):
	'ITestEnvironment2 Interface'
	CLSID = IID('{6CA91FF6-FC46-4855-BCD8-B8D5F4EC948F}')
	coclass_clsid = IID('{A932C329-690A-407B-AEEF-5C86183F5F01}')

	def ExecuteAll(self):
		'method ExecuteAll'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	def Save(self, Name=defaultNamedOptArg, promptUser=defaultNamedOptArg):
		'method Save'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 17), (12, 17)),Name
			, promptUser)

	def SaveAs(self, Name=defaultNamedNotOptArg, major=defaultNamedNotOptArg, minor=defaultNamedNotOptArg, promptUser=defaultNamedOptArg):
		'method SaveAs'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (12, 17)),Name
			, major, minor, promptUser)

	def StopSequence(self):
		'method StopSequence'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		# Method 'Folders' returns object of type 'ITestSetupFolders'
		"Folders": (13, 2, (9, 0), (), "Folders", '{7AB2423A-58A5-4DEF-A50F-09547CFE38A1}'),
		"FullName": (8, 2, (8, 0), (), "FullName", None),
		"Items": (5, 2, (9, 0), (), "Items", None),
		"Modified": (10, 2, (11, 0), (), "Modified", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (9, 2, (8, 0), (), "Path", None),
		"Report": (6, 2, (9, 0), (), "Report", None),
		# Method 'TestModules' returns object of type 'ITestModules'
		"TestModules": (14, 2, (9, 0), (), "TestModules", '{16086855-B312-436F-A11F-5C1FCA126BBC}'),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestEnvironments(DispatchBaseClass):
	'ITestEnvironments Interface'
	CLSID = IID('{832AD38C-C919-4BD1-8EEE-15C4628F409F}')
	coclass_clsid = IID('{86FD0C15-C362-44A6-8B42-09C124F40767}')

	# Result is of type ITestEnvironment
	def Add(self, Name=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C7616799-F96E-4D03-861E-A7577ECB6741}')
		return ret

	# Result is of type ITestEnvironment
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{C7616799-F96E-4D03-861E-A7577ECB6741}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg, promptUser=defaultNamedOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1), (12, 17)),index
			, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{C7616799-F96E-4D03-861E-A7577ECB6741}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{C7616799-F96E-4D03-861E-A7577ECB6741}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestGroup(DispatchBaseClass):
	'ITestGroup Interface'
	CLSID = IID('{00C60991-E30D-424C-9851-0382F338F394}')
	coclass_clsid = IID('{70E92C02-05B9-47AA-B8DB-2925F8CC4A67}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Sequence": (5, 2, (9, 0), (), "Sequence", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestLibraries(DispatchBaseClass):
	'ITestLibraries Interface'
	CLSID = IID('{D7C09086-A9C6-4287-93A3-64D8230DED0F}')
	coclass_clsid = IID('{406036D7-B464-42D0-BDCE-11D3A9B3D25A}')

	# Result is of type ITestLibrary
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}')
		return ret

	# Result is of type ITestLibrary
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestLibrary(DispatchBaseClass):
	'ITestLibrary Interface'
	CLSID = IID('{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}')
	coclass_clsid = IID('{61567786-D67A-4E65-82B3-BADD16E106AA}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestModules(DispatchBaseClass):
	'ITestModules Interface'
	CLSID = IID('{16086855-B312-436F-A11F-5C1FCA126BBC}')
	coclass_clsid = None

	# Result is of type ITSTestModule
	def Add(self, FullName=defaultNamedNotOptArg):
		'method AddTestModule'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
		return ret

	# Result is of type ITSTestModule
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg, promptUser=defaultNamedOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1), (12, 17)),index
			, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestModules2(DispatchBaseClass):
	'ITestModules Interface'
	CLSID = IID('{3277C299-D4BB-4033-98BA-F29ED83453AB}')
	coclass_clsid = IID('{5326BCE6-000B-4C65-BF9E-E017EFAA7DE9}')

	# Result is of type ITSTestModule
	def Add(self, FullName=defaultNamedNotOptArg):
		'method AddTestModule'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
		return ret

	# Result is of type ITSTestModule
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg, promptUser=defaultNamedOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1), (12, 17)),index
			, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		# Method 'LinSlaveConformanceTesters' returns object of type 'ILinSlaveConformanceTesters'
		"LinSlaveConformanceTesters": (6, 2, (9, 0), (), "LinSlaveConformanceTesters", '{02BCC0B6-446D-4ED1-9EBE-038B1557290F}'),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestReport(DispatchBaseClass):
	'ITestReport Interface'
	CLSID = IID('{1A19D0B2-6D95-402B-9D50-4E378636471D}')
	coclass_clsid = None

	def GenerateReport(self):
		'method GenerateReport'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"AutoNumbering": (7, 2, (11, 0), (), "AutoNumbering", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StyleSheet": (9, 2, (8, 0), (), "StyleSheet", None),
		"StyleSheetEnabled": (8, 2, (11, 0), (), "StyleSheetEnabled", None),
	}
	_prop_map_put_ = {
		"AutoNumbering": ((7, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"FullName": ((4, LCID, 4, 0),()),
		"StyleSheet": ((9, LCID, 4, 0),()),
		"StyleSheetEnabled": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestReport2(DispatchBaseClass):
	'ITestReport2 Interface'
	CLSID = IID('{5ECE511C-1419-4670-BFA9-49AA21F53F26}')
	coclass_clsid = None

	def GenerateReport(self):
		'method GenerateReport'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"AutoNumbering": (7, 2, (11, 0), (), "AutoNumbering", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FilterSettings": (11, 2, (9, 0), (), "FilterSettings", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StyleSheet": (9, 2, (8, 0), (), "StyleSheet", None),
		"StyleSheetEnabled": (8, 2, (11, 0), (), "StyleSheetEnabled", None),
	}
	_prop_map_put_ = {
		"AutoNumbering": ((7, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"FullName": ((4, LCID, 4, 0),()),
		"StyleSheet": ((9, LCID, 4, 0),()),
		"StyleSheetEnabled": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestReport3(DispatchBaseClass):
	'ITestReport3 Interface'
	CLSID = IID('{C535C206-FAB5-4BCE-A597-BEA6D44E52B4}')
	coclass_clsid = None

	def GenerateReport(self):
		'method GenerateReport'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	def GenerateReportAsync(self):
		'method GenerateReportAsync'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"AutoNumbering": (7, 2, (11, 0), (), "AutoNumbering", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FilterSettings": (11, 2, (9, 0), (), "FilterSettings", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StyleSheet": (9, 2, (8, 0), (), "StyleSheet", None),
		"StyleSheetEnabled": (8, 2, (11, 0), (), "StyleSheetEnabled", None),
	}
	_prop_map_put_ = {
		"AutoNumbering": ((7, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"FullName": ((4, LCID, 4, 0),()),
		"StyleSheet": ((9, LCID, 4, 0),()),
		"StyleSheetEnabled": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestReport4(DispatchBaseClass):
	'ITestReport4 Interface'
	CLSID = IID('{C9B2849C-9342-4182-B6F7-119D51E2D10B}')
	coclass_clsid = None

	def GenerateReport(self):
		'method GenerateReport'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	def GenerateReportAsync(self):
		'method GenerateReportAsync'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"AutoNumbering": (7, 2, (11, 0), (), "AutoNumbering", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FilterSettings": (11, 2, (9, 0), (), "FilterSettings", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"LastWrittenFullName": (13, 2, (8, 0), (), "LastWrittenFullName", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"StyleSheet": (9, 2, (8, 0), (), "StyleSheet", None),
		"StyleSheetEnabled": (8, 2, (11, 0), (), "StyleSheetEnabled", None),
	}
	_prop_map_put_ = {
		"AutoNumbering": ((7, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"FullName": ((4, LCID, 4, 0),()),
		"StyleSheet": ((9, LCID, 4, 0),()),
		"StyleSheetEnabled": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestReport5(DispatchBaseClass):
	'ITestReport5 Interface'
	CLSID = IID('{D6370BF7-0091-4DB8-A645-54465C00F336}')
	coclass_clsid = IID('{FF4EDCF9-6020-410C-8A41-915499F8818E}')

	def GenerateReport(self):
		'method GenerateReport'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	def GenerateReportAsync(self):
		'method GenerateReportAsync'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"AutoNumbering": (7, 2, (11, 0), (), "AutoNumbering", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FilterSettings": (11, 2, (9, 0), (), "FilterSettings", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"LastWrittenFullName": (13, 2, (8, 0), (), "LastWrittenFullName", None),
		"Name": (6, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
		"ReportFormat": (33, 2, (3, 0), (), "ReportFormat", None),
		"StyleSheet": (9, 2, (8, 0), (), "StyleSheet", None),
		"StyleSheetEnabled": (8, 2, (11, 0), (), "StyleSheetEnabled", None),
	}
	_prop_map_put_ = {
		"AutoNumbering": ((7, LCID, 4, 0),()),
		"Enabled": ((3, LCID, 4, 0),()),
		"FullName": ((4, LCID, 4, 0),()),
		"ReportFormat": ((33, LCID, 4, 0),()),
		"StyleSheet": ((9, LCID, 4, 0),()),
		"StyleSheetEnabled": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestSequence(DispatchBaseClass):
	'ITestSequence Interface'
	CLSID = IID('{A7CD44E7-7CFC-4B71-9F7C-F3A947BA015F}')
	coclass_clsid = IID('{FF43D776-905D-4814-9CFE-5317E09DBED1}')

	# Result is of type ITestSequenceItem
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{82813530-A143-438E-B2A7-50BEC44064BD}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{82813530-A143-438E-B2A7-50BEC44064BD}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{82813530-A143-438E-B2A7-50BEC44064BD}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestSequenceItem(DispatchBaseClass):
	'ITestSequenceItem Interface'
	CLSID = IID('{82813530-A143-438E-B2A7-50BEC44064BD}')
	coclass_clsid = IID('{FB1BAAE6-2667-4177-BFAC-4AB26F3CBF47}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestSetup(DispatchBaseClass):
	'ITestSetup Interface'
	CLSID = IID('{A715D071-E0FE-4010-9790-E100D69D1287}')
	coclass_clsid = IID('{8A1857E6-0CFF-49FD-ACF3-F5A6014D6BDD}')

	def SaveAll(self, promptUser=defaultNamedOptArg):
		'method SaveAll'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((12, 17),),promptUser
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"TestEnvironments": (3, 2, (9, 0), (), "TestEnvironments", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestSetupFolder(DispatchBaseClass):
	'ITestSetupFolder Interface'
	CLSID = IID('{02510C83-7ED1-404A-BB78-00C2B7B7D529}')
	coclass_clsid = IID('{490B8989-674D-46BF-9D6E-6B093C138377}')

	def ExecuteAll(self):
		'method ExecuteAll'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Items": (5, 2, (9, 0), (), "Items", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Report": (6, 2, (9, 0), (), "Report", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestSetupFolderExt(DispatchBaseClass):
	'ITestSetupFolderExt Interface'
	CLSID = IID('{E263A3BA-4C7A-4520-9784-47A45296ADA1}')
	coclass_clsid = IID('{3E1FBDF3-9E7A-4121-B50B-A0D04D77A47D}')

	def ExecuteAll(self):
		'method ExecuteAll'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def StopSequence(self):
		'method StopSequence'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		# Method 'Folders' returns object of type 'ITestSetupFolders'
		"Folders": (6, 2, (9, 0), (), "Folders", '{7AB2423A-58A5-4DEF-A50F-09547CFE38A1}'),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Report": (5, 2, (9, 0), (), "Report", None),
		# Method 'TestModules' returns object of type 'ITestModules'
		"TestModules": (7, 2, (9, 0), (), "TestModules", '{16086855-B312-436F-A11F-5C1FCA126BBC}'),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestSetupFolders(DispatchBaseClass):
	'ITestSetupFolders Interface'
	CLSID = IID('{7AB2423A-58A5-4DEF-A50F-09547CFE38A1}')
	coclass_clsid = IID('{76B814A5-CD92-4D68-B388-8FB1E24F4363}')

	# Result is of type ITestSetupFolderExt
	def Add(self, Name=defaultNamedNotOptArg):
		'method AddFolder'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E263A3BA-4C7A-4520-9784-47A45296ADA1}')
		return ret

	# Result is of type ITestSetupFolderExt
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E263A3BA-4C7A-4520-9784-47A45296ADA1}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg, promptUser=defaultNamedOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1), (12, 17)),index
			, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E263A3BA-4C7A-4520-9784-47A45296ADA1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E263A3BA-4C7A-4520-9784-47A45296ADA1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestSetupItem(DispatchBaseClass):
	'ITestSetupItem Interface'
	CLSID = IID('{2E27EBE7-EC01-46E4-A6B8-813E8CBA5EAD}')
	coclass_clsid = IID('{A3CBCE2E-A397-4464-8AA1-934255050384}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestSetupItems(DispatchBaseClass):
	'ITestSetupItems Interface'
	CLSID = IID('{B7CC0F27-2EE0-416B-852F-898D99F5F01F}')
	coclass_clsid = IID('{B0DDEC6D-84D4-4576-A222-021101CEEEFE}')

	# Result is of type ITestSetupFolder
	def AddFolder(self, Name=defaultNamedNotOptArg):
		'method AddFolder'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddFolder', '{02510C83-7ED1-404A-BB78-00C2B7B7D529}')
		return ret

	# Result is of type ITSTestModule
	def AddTestModule(self, FullName=defaultNamedNotOptArg):
		'method AddTestModule'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTestModule', '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')
		return ret

	# Result is of type ITestSetupItem
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{2E27EBE7-EC01-46E4-A6B8-813E8CBA5EAD}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg, promptUser=defaultNamedOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((12, 1), (12, 17)),index
			, promptUser)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{2E27EBE7-EC01-46E4-A6B8-813E8CBA5EAD}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{2E27EBE7-EC01-46E4-A6B8-813E8CBA5EAD}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestTreeElement1(DispatchBaseClass):
	'ITestTreeElement1 interface'
	CLSID = IID('{57D81B0F-19E6-4682-8C24-6CF10A984A81}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (4, 2, (8, 0), (), "Caption", None),
		"Elements": (7, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Type": (6, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestTreeElement2(DispatchBaseClass):
	'ITestTreeElement2 interface'
	CLSID = IID('{09E17429-8E58-4B7D-96BD-860B634F075C}')
	coclass_clsid = IID('{B00A2245-2B50-408B-B2A9-597460111486}')

	def ContainsId(self, Id=defaultNamedNotOptArg):
		'method ContainsId'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((8, 1),),Id
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (4, 2, (8, 0), (), "Caption", None),
		"Elements": (7, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Id": (8, 2, (8, 0), (), "Id", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Type": (6, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestTreeElements(DispatchBaseClass):
	'ITestTreeElements interface'
	CLSID = IID('{A00F3381-2821-4258-ACD4-7AACD16FD1FF}')
	coclass_clsid = IID('{2A3433D9-C68B-41DA-BBFF-BD808F501D06}')

	# Result is of type ITestTreeElement1
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{57D81B0F-19E6-4682-8C24-6CF10A984A81}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{57D81B0F-19E6-4682-8C24-6CF10A984A81}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{57D81B0F-19E6-4682-8C24-6CF10A984A81}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestUnit(DispatchBaseClass):
	'ITestUnit interface'
	CLSID = IID('{A25AD662-DCDC-4844-983D-F750631753F3}')
	coclass_clsid = IID('{B59ED397-7804-4FBB-95C1-87FF759E760F}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		# Method 'Report' returns object of type 'ITestUnitReport'
		"Report": (6, 2, (9, 0), (), "Report", '{8924FA59-9F14-4A3A-818D-FA1D1C2AFE2F}'),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestUnit2(DispatchBaseClass):
	'ITestUnit2 interface'
	CLSID = IID('{7101A9AF-332E-4295-BF95-4A543D257F21}')
	coclass_clsid = None

	def GetVariant(self, Name=defaultNamedNotOptArg):
		'method GetVariant'
		return self._ApplyTypes_(11, 1, (12, 0), ((8, 1),), 'GetVariant', None,Name
			)

	def SetVariant(self, Name=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		'method SetVariant'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((8, 1), (12, 1)),Name
			, val)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (4, 2, (8, 0), (), "Caption", None),
		"Elements": (7, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullPath": (10, 2, (8, 0), (), "FullPath", None),
		"Name": (8, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Report": (9, 2, (9, 0), (), "Report", None),
		"Type": (6, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestUnit3(DispatchBaseClass):
	'ITestUnit3 interface'
	CLSID = IID('{B2EF4B1D-1908-4C2A-A9AF-07EDFC50010C}')
	coclass_clsid = IID('{B59ED397-7804-4FBB-95C1-87FF759E760F}')

	def ContainsId(self, Id=defaultNamedNotOptArg):
		'method ContainsId'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((8, 1),),Id
			)

	def GetVariant(self, Name=defaultNamedNotOptArg):
		'method GetVariant'
		return self._ApplyTypes_(11, 1, (12, 0), ((8, 1),), 'GetVariant', None,Name
			)

	def SetVariant(self, Name=defaultNamedNotOptArg, val=defaultNamedNotOptArg):
		'method SetVariant'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((8, 1), (12, 1)),Name
			, val)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Caption": (4, 2, (8, 0), (), "Caption", None),
		"Elements": (7, 2, (9, 0), (), "Elements", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullPath": (10, 2, (8, 0), (), "FullPath", None),
		"Id": (18, 2, (8, 0), (), "Id", None),
		"Name": (8, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Report": (9, 2, (9, 0), (), "Report", None),
		"Type": (6, 2, (3, 0), (), "Type", None),
		"Verdict": (5, 2, (3, 0), (), "Verdict", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"Name": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestUnitReport(DispatchBaseClass):
	'ITestUnitReport Interface'
	CLSID = IID('{8924FA59-9F14-4A3A-818D-FA1D1C2AFE2F}')
	coclass_clsid = IID('{C0A2A4FC-26B3-431E-BA90-3D725012FB04}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestUnitReport2(DispatchBaseClass):
	'ITestUnitReport2 Interface'
	CLSID = IID('{79C2403E-14B1-4C4C-81E7-F1D5DDA9C143}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullPath": (4, 2, (8, 0), (), "FullPath", None),
		"LastWrittenFullPath": (5, 2, (8, 0), (), "LastWrittenFullPath", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"FullPath": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestUnitReport3(DispatchBaseClass):
	'ITestUnitReport3 Interface'
	CLSID = IID('{E3420774-A352-4FA5-B4F0-E2693A76FE3B}')
	coclass_clsid = IID('{C0A2A4FC-26B3-431E-BA90-3D725012FB04}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"FullPath": (4, 2, (8, 0), (), "FullPath", None),
		"LastWrittenFullPath": (5, 2, (8, 0), (), "LastWrittenFullPath", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"StyleSheet": (7, 2, (8, 0), (), "StyleSheet", None),
		"StyleSheetEnabled": (6, 2, (11, 0), (), "StyleSheetEnabled", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
		"FullPath": ((4, LCID, 4, 0),()),
		"StyleSheet": ((7, LCID, 4, 0),()),
		"StyleSheetEnabled": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITestUnits(DispatchBaseClass):
	'ITestUnits Interface'
	CLSID = IID('{CC055F08-5DF6-4FD0-B375-E67976E81F42}')
	coclass_clsid = None

	# Result is of type ITestUnit
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{A25AD662-DCDC-4844-983D-F750631753F3}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{A25AD662-DCDC-4844-983D-F750631753F3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{A25AD662-DCDC-4844-983D-F750631753F3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITestUnits2(DispatchBaseClass):
	'ITestUnits2 Interface'
	CLSID = IID('{0ABE0B62-8C71-4DD4-BFF5-19B18C0CB345}')
	coclass_clsid = IID('{B66F5723-54E6-4D53-89E1-CA25B0D1B5B8}')

	# Result is of type ITestUnit2
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{7101A9AF-332E-4295-BF95-4A543D257F21}')
		return ret

	# Result is of type ITestUnit
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{A25AD662-DCDC-4844-983D-F750631753F3}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{A25AD662-DCDC-4844-983D-F750631753F3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{A25AD662-DCDC-4844-983D-F750631753F3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITesterSettings(DispatchBaseClass):
	'ITesterSettings Interface'
	CLSID = IID('{890EA72F-67EF-480D-AD38-C9841A7D053B}')
	coclass_clsid = IID('{A377B29C-B668-44E6-9D2E-B7FC51C0A6D2}')

	_prop_map_get_ = {
		"AddTraceSnapshotOnFailedTestCase": (3, 2, (11, 0), (), "AddTraceSnapshotOnFailedTestCase", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"TraceWindowName": (4, 2, (8, 0), (), "TraceWindowName", None),
	}
	_prop_map_put_ = {
		"AddTraceSnapshotOnFailedTestCase": ((3, LCID, 4, 0),()),
		"TraceWindowName": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITimeSection(DispatchBaseClass):
	'ITimeSection Interface'
	CLSID = IID('{BCD7DA0D-D0A3-4394-BC11-25E23503A102}')
	coclass_clsid = IID('{E0BFE606-E6A6-4797-AA5E-FF4B38F927D8}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"End": (5, 2, (8, 0), (), "End", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Start": (4, 2, (8, 0), (), "Start", None),
		"Type": (3, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"End": ((5, LCID, 4, 0),()),
		"Start": ((4, LCID, 4, 0),()),
		"Type": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITimeSettings(DispatchBaseClass):
	'ITimeSettings Interface'
	CLSID = IID('{DA475018-9635-4372-9F22-B3A2FB91BFCC}')
	coclass_clsid = IID('{2E3E2DB6-AA45-4C2D-BC9B-04179D23092F}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"EndTime": (4, 2, (21, 0), (), "EndTime", None),
		"Offset": (5, 2, (20, 0), (), "Offset", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"StartTime": (3, 2, (21, 0), (), "StartTime", None),
	}
	_prop_map_put_ = {
		"EndTime": ((4, LCID, 4, 0),()),
		"Offset": ((5, LCID, 4, 0),()),
		"StartTime": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITrigger(DispatchBaseClass):
	'ITrigger Interface'
	CLSID = IID('{89AA4460-BBA0-4AB1-A926-D81BAD5A1436}')
	coclass_clsid = IID('{83844F35-B2F1-4692-AA7C-48AE8DD6ACCB}')

	def Start(self):
		'property Start'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def Stop(self):
		'property Stop'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Active": (5, 2, (11, 0), (), "Active", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUI(DispatchBaseClass):
	'IUI Interface'
	CLSID = IID('{884DBC00-7A76-11D3-8571-00105A3E017B}')
	coclass_clsid = None

	# The method GetCommandEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def GetCommandEnabled(self, command=defaultNamedNotOptArg):
		'property CommandEnabled'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (11, 0), ((8, 17),),command
			)

	def OpenBaudrateDialog(self):
		'method OpenBaudrateDialog'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def OpenDbDialog(self):
		'method OpenDbDialog'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	# The method SetCommandEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def SetCommandEnabled(self, command=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property CommandEnabled'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((8, 17), (11, 1)),command
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CommandEnabled": (6, 2, (11, 0), ((8, 17),), "CommandEnabled", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Write": (3, 2, (9, 0), (), "Write", None),
	}
	_prop_map_put_ = {
		"CommandEnabled": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUI2(DispatchBaseClass):
	'IUI2 Interface'
	CLSID = IID('{6CA22AED-1400-4811-A022-3C791766280F}')
	coclass_clsid = IID('{884DBC01-7A76-11D3-8571-00105A3E017B}')

	def ActivateDesktop(self, Name=defaultNamedNotOptArg):
		'method ActivateDesktop'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((8, 1),),Name
			)

	# The method GetCommandEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def GetCommandEnabled(self, command=defaultNamedNotOptArg):
		'property CommandEnabled'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (11, 0), ((8, 17),),command
			)

	def OpenBaudrateDialog(self):
		'method OpenBaudrateDialog'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def OpenDbDialog(self):
		'method OpenDbDialog'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	# The method SetCommandEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def SetCommandEnabled(self, command=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property CommandEnabled'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((8, 17), (11, 1)),command
			, arg1)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"CommandEnabled": (6, 2, (11, 0), ((8, 17),), "CommandEnabled", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Write": (3, 2, (9, 0), (), "Write", None),
	}
	_prop_map_put_ = {
		"CommandEnabled": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserFile(DispatchBaseClass):
	'IUserFile Interface'
	CLSID = IID('{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}')
	coclass_clsid = IID('{8E2AE92D-9FD5-42DA-A902-4E66DE545BFC}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (6, 2, (11, 0), (), "Enabled", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
		"Enabled": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserFiles(DispatchBaseClass):
	'IUserFiles Interface'
	CLSID = IID('{61CB1B7A-EC25-47EE-A956-0A6EE39FF651}')
	coclass_clsid = IID('{63BDF234-52E1-45C9-BBEB-AD6220B21ACA}')

	# Result is of type IUserFile
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}')
		return ret

	# Result is of type IUserFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IVANBusStatistic(DispatchBaseClass):
	'IVANBusStatistic Interface'
	CLSID = IID('{A7566B42-D7E8-11D3-85EE-00105A3E017B}')
	coclass_clsid = IID('{A7566B43-D7E8-11D3-85EE-00105A3E017B}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BusLoad": (0, 2, (3, 0), (), "BusLoad", None),
		"ChipState": (10, 2, (8, 0), (), "ChipState", None),
		"Data": (4, 2, (3, 0), (), "Data", None),
		"DataTotal": (5, 2, (3, 0), (), "DataTotal", None),
		"DeferredReply": (8, 2, (3, 0), (), "DeferredReply", None),
		"DeferredReplyTotal": (9, 2, (3, 0), (), "DeferredReplyTotal", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"PeakLoad": (3, 2, (3, 0), (), "PeakLoad", None),
		"ReplyRequest": (6, 2, (3, 0), (), "ReplyRequest", None),
		"ReplyRequestTotal": (7, 2, (3, 0), (), "ReplyRequestTotal", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'BusLoad'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "BusLoad", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable(DispatchBaseClass):
	'IVariable Interface'
	CLSID = IID('{E172E995-EF4B-46FE-99BF-B99DAE854305}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable10(DispatchBaseClass):
	'IVariable10 Interface'
	CLSID = IID('{4FB65BCF-FBBB-44BC-9DC3-61F58966BF6F}')
	coclass_clsid = None

	def BeginStructUpdate(self):
		'method BeginStructUpdate'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	def EndStructUpdate(self):
		'method EndStructUpdate'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def GetMemberPhysValue(self, member=defaultNamedNotOptArg):
		'method GetMemberPhysValue'
		return self._ApplyTypes_(17, 1, (12, 0), ((8, 1),), 'GetMemberPhysValue', None,member
			)

	def GetMemberType(self, member=defaultNamedNotOptArg, IsSigned=pythoncom.Missing):
		'method GetMemberType'
		return self._ApplyTypes_(37, 1, (19, 0), ((8, 1), (16395, 2)), 'GetMemberType', None,member
			, IsSigned)

	def GetMemberValue(self, member=defaultNamedNotOptArg):
		'method GetMemberValue'
		return self._ApplyTypes_(15, 1, (12, 0), ((8, 1),), 'GetMemberValue', None,member
			)

	def GetSymbolicValueName(self, Value=defaultNamedNotOptArg):
		'method GetSymbolicValueName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(13, LCID, 1, (8, 0), ((12, 1),),Value
			)

	def SetMemberPhysValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberPhysValue'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetMemberValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberValue'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetSymbolicValueName(self, Value=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method SetSymbolicValueName'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1), (8, 1)),Value
			, Name)

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BitCount": (26, 2, (3, 0), (), "BitCount", None),
		"Comment": (11, 2, (8, 0), (), "Comment", None),
		"ElementCount": (27, 2, (3, 0), (), "ElementCount", None),
		"Encodings": (36, 2, (9, 0), (), "Encodings", None),
		"FullName": (33, 2, (8, 0), (), "FullName", None),
		"InitValue": (31, 2, (12, 0), (), "InitValue", None),
		"IsArray": (23, 2, (11, 0), (), "IsArray", None),
		"IsMember": (25, 2, (11, 0), (), "IsMember", None),
		"IsSigned": (22, 2, (11, 0), (), "IsSigned", None),
		"IsStruct": (24, 2, (11, 0), (), "IsStruct", None),
		"MaxValue": (10, 2, (12, 0), (), "MaxValue", None),
		"MemberName": (34, 2, (8, 0), (), "MemberName", None),
		"Members": (35, 2, (9, 0), (), "Members", None),
		"MinValue": (9, 2, (12, 0), (), "MinValue", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"PhysicalInitValue": (32, 2, (12, 0), (), "PhysicalInitValue", None),
		"PhysicalMaxValue": (30, 2, (12, 0), (), "PhysicalMaxValue", None),
		"PhysicalMinValue": (29, 2, (12, 0), (), "PhysicalMinValue", None),
		"PhysicalValue": (28, 2, (12, 0), (), "PhysicalValue", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Type": (21, 2, (19, 0), (), "Type", None),
		"Unit": (14, 2, (8, 0), (), "Unit", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"Comment": ((11, LCID, 4, 0),()),
		"InitValue": ((31, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"PhysicalInitValue": ((32, LCID, 4, 0),()),
		"PhysicalValue": ((28, LCID, 4, 0),()),
		"Unit": ((14, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable11(DispatchBaseClass):
	'IVariable11 Interface'
	CLSID = IID('{F25DC68D-2894-4D3F-BFF1-8E7464FEA91B}')
	coclass_clsid = IID('{FB1A8BBE-584F-4669-B927-3567D70FF952}')

	def BeginStructUpdate(self):
		'method BeginStructUpdate'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	def EndStructUpdate(self):
		'method EndStructUpdate'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def GetMemberPhysValue(self, member=defaultNamedNotOptArg):
		'method GetMemberPhysValue'
		return self._ApplyTypes_(17, 1, (12, 0), ((8, 1),), 'GetMemberPhysValue', None,member
			)

	def GetMemberType(self, member=defaultNamedNotOptArg, IsSigned=pythoncom.Missing):
		'method GetMemberType'
		return self._ApplyTypes_(37, 1, (19, 0), ((8, 1), (16395, 2)), 'GetMemberType', None,member
			, IsSigned)

	def GetMemberType2(self, member=defaultNamedNotOptArg, IsSigned=pythoncom.Missing, BitCount=pythoncom.Missing):
		'method GetMemberType2'
		return self._ApplyTypes_(38, 1, (19, 0), ((8, 1), (16395, 2), (16403, 2)), 'GetMemberType2', None,member
			, IsSigned, BitCount)

	def GetMemberValue(self, member=defaultNamedNotOptArg):
		'method GetMemberValue'
		return self._ApplyTypes_(15, 1, (12, 0), ((8, 1),), 'GetMemberValue', None,member
			)

	def GetSymbolicValueName(self, Value=defaultNamedNotOptArg):
		'method GetSymbolicValueName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(13, LCID, 1, (8, 0), ((12, 1),),Value
			)

	def SetMemberPhysValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberPhysValue'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetMemberValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberValue'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetSymbolicValueName(self, Value=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method SetSymbolicValueName'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1), (8, 1)),Value
			, Name)

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BitCount": (26, 2, (3, 0), (), "BitCount", None),
		"Comment": (11, 2, (8, 0), (), "Comment", None),
		"ElementCount": (27, 2, (3, 0), (), "ElementCount", None),
		"Encodings": (36, 2, (9, 0), (), "Encodings", None),
		"FullName": (33, 2, (8, 0), (), "FullName", None),
		"InitValue": (31, 2, (12, 0), (), "InitValue", None),
		"IsArray": (23, 2, (11, 0), (), "IsArray", None),
		"IsMember": (25, 2, (11, 0), (), "IsMember", None),
		"IsSigned": (22, 2, (11, 0), (), "IsSigned", None),
		"IsStruct": (24, 2, (11, 0), (), "IsStruct", None),
		"MaxValue": (10, 2, (12, 0), (), "MaxValue", None),
		"MemberName": (34, 2, (8, 0), (), "MemberName", None),
		"Members": (35, 2, (9, 0), (), "Members", None),
		"MinValue": (9, 2, (12, 0), (), "MinValue", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"PhysicalInitValue": (32, 2, (12, 0), (), "PhysicalInitValue", None),
		"PhysicalMaxValue": (30, 2, (12, 0), (), "PhysicalMaxValue", None),
		"PhysicalMinValue": (29, 2, (12, 0), (), "PhysicalMinValue", None),
		"PhysicalValue": (28, 2, (12, 0), (), "PhysicalValue", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Type": (21, 2, (19, 0), (), "Type", None),
		"Unit": (14, 2, (8, 0), (), "Unit", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"Comment": ((11, LCID, 4, 0),()),
		"InitValue": ((31, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"PhysicalInitValue": ((32, LCID, 4, 0),()),
		"PhysicalValue": ((28, LCID, 4, 0),()),
		"Unit": ((14, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable2(DispatchBaseClass):
	'IVariable2 Interface'
	CLSID = IID('{D6898505-EBE9-4453-AF67-E8CAFE344D41}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable3(DispatchBaseClass):
	'IVariable3 Interface'
	CLSID = IID('{8CC2F044-16F7-4D33-92E4-9E92BBAD6D70}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable4(DispatchBaseClass):
	'IVariable4 Interface'
	CLSID = IID('{8B8AF3AF-4FF4-4DA5-952B-7C07FF654671}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (11, 2, (8, 0), (), "Comment", None),
		"MaxValue": (10, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (9, 2, (12, 0), (), "MinValue", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"Comment": ((11, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable5(DispatchBaseClass):
	'IVariable5 Interface'
	CLSID = IID('{ED343C77-A3D5-418F-9059-8FBB9D0608EB}')
	coclass_clsid = None

	def GetSymbolicValueName(self, Value=defaultNamedNotOptArg):
		'method GetSymbolicValueName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(13, LCID, 1, (8, 0), ((12, 1),),Value
			)

	def SetSymbolicValueName(self, Value=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method SetSymbolicValueName'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1), (8, 1)),Value
			, Name)

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (11, 2, (8, 0), (), "Comment", None),
		"MaxValue": (10, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (9, 2, (12, 0), (), "MinValue", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"Comment": ((11, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable6(DispatchBaseClass):
	'IVariable6 Interface'
	CLSID = IID('{3F0112A4-A816-44DC-A95D-2E075EA1BAA5}')
	coclass_clsid = None

	def GetSymbolicValueName(self, Value=defaultNamedNotOptArg):
		'method GetSymbolicValueName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(13, LCID, 1, (8, 0), ((12, 1),),Value
			)

	def SetSymbolicValueName(self, Value=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method SetSymbolicValueName'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1), (8, 1)),Value
			, Name)

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (11, 2, (8, 0), (), "Comment", None),
		"MaxValue": (10, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (9, 2, (12, 0), (), "MinValue", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Unit": (14, 2, (8, 0), (), "Unit", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"Comment": ((11, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"Unit": ((14, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable7(DispatchBaseClass):
	'IVariable7 Interface'
	CLSID = IID('{6B50964C-B914-4EDF-921F-0A6F9E5AD6B9}')
	coclass_clsid = None

	def BeginStructUpdate(self):
		'method BeginStructUpdate'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	def EndStructUpdate(self):
		'method EndStructUpdate'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def GetMemberPhysValue(self, member=defaultNamedNotOptArg):
		'method GetMemberPhysValue'
		return self._ApplyTypes_(17, 1, (12, 0), ((8, 1),), 'GetMemberPhysValue', None,member
			)

	def GetMemberValue(self, member=defaultNamedNotOptArg):
		'method GetMemberValue'
		return self._ApplyTypes_(15, 1, (12, 0), ((8, 1),), 'GetMemberValue', None,member
			)

	def GetSymbolicValueName(self, Value=defaultNamedNotOptArg):
		'method GetSymbolicValueName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(13, LCID, 1, (8, 0), ((12, 1),),Value
			)

	def SetMemberPhysValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberPhysValue'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetMemberValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberValue'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetSymbolicValueName(self, Value=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method SetSymbolicValueName'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1), (8, 1)),Value
			, Name)

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (11, 2, (8, 0), (), "Comment", None),
		"MaxValue": (10, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (9, 2, (12, 0), (), "MinValue", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Unit": (14, 2, (8, 0), (), "Unit", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"Comment": ((11, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"Unit": ((14, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable8(DispatchBaseClass):
	'IVariable8 Interface'
	CLSID = IID('{B42FB853-B9BE-41DF-9085-E5821465B7E4}')
	coclass_clsid = None

	def BeginStructUpdate(self):
		'method BeginStructUpdate'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	def EndStructUpdate(self):
		'method EndStructUpdate'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def GetMemberPhysValue(self, member=defaultNamedNotOptArg):
		'method GetMemberPhysValue'
		return self._ApplyTypes_(17, 1, (12, 0), ((8, 1),), 'GetMemberPhysValue', None,member
			)

	def GetMemberValue(self, member=defaultNamedNotOptArg):
		'method GetMemberValue'
		return self._ApplyTypes_(15, 1, (12, 0), ((8, 1),), 'GetMemberValue', None,member
			)

	def GetSymbolicValueName(self, Value=defaultNamedNotOptArg):
		'method GetSymbolicValueName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(13, LCID, 1, (8, 0), ((12, 1),),Value
			)

	def SetMemberPhysValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberPhysValue'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetMemberValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberValue'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetSymbolicValueName(self, Value=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method SetSymbolicValueName'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1), (8, 1)),Value
			, Name)

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Comment": (11, 2, (8, 0), (), "Comment", None),
		"MaxValue": (10, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (9, 2, (12, 0), (), "MinValue", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Type": (21, 2, (19, 0), (), "Type", None),
		"Unit": (14, 2, (8, 0), (), "Unit", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"Comment": ((11, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"Unit": ((14, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable9(DispatchBaseClass):
	'IVariable9 Interface'
	CLSID = IID('{B98EB387-B9C7-4699-A3F2-01E216C9536E}')
	coclass_clsid = None

	def BeginStructUpdate(self):
		'method BeginStructUpdate'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	def EndStructUpdate(self):
		'method EndStructUpdate'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), (),)

	def GetMemberPhysValue(self, member=defaultNamedNotOptArg):
		'method GetMemberPhysValue'
		return self._ApplyTypes_(17, 1, (12, 0), ((8, 1),), 'GetMemberPhysValue', None,member
			)

	def GetMemberValue(self, member=defaultNamedNotOptArg):
		'method GetMemberValue'
		return self._ApplyTypes_(15, 1, (12, 0), ((8, 1),), 'GetMemberValue', None,member
			)

	def GetSymbolicValueName(self, Value=defaultNamedNotOptArg):
		'method GetSymbolicValueName'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(13, LCID, 1, (8, 0), ((12, 1),),Value
			)

	def SetMemberPhysValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberPhysValue'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetMemberValue(self, member=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method SetMemberValue'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1), (12, 1)),member
			, Value)

	def SetSymbolicValueName(self, Value=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'method SetSymbolicValueName'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1), (8, 1)),Value
			, Name)

	_prop_map_get_ = {
		"AnalysisOnly": (7, 2, (11, 0), (), "AnalysisOnly", None),
		"Application": (1, 2, (9, 0), (), "Application", None),
		"BitCount": (26, 2, (3, 0), (), "BitCount", None),
		"Comment": (11, 2, (8, 0), (), "Comment", None),
		"ElementCount": (27, 2, (3, 0), (), "ElementCount", None),
		"Encodings": (36, 2, (9, 0), (), "Encodings", None),
		"FullName": (33, 2, (8, 0), (), "FullName", None),
		"InitValue": (31, 2, (12, 0), (), "InitValue", None),
		"IsArray": (23, 2, (11, 0), (), "IsArray", None),
		"IsMember": (25, 2, (11, 0), (), "IsMember", None),
		"IsSigned": (22, 2, (11, 0), (), "IsSigned", None),
		"IsStruct": (24, 2, (11, 0), (), "IsStruct", None),
		"MaxValue": (10, 2, (12, 0), (), "MaxValue", None),
		"MemberName": (34, 2, (8, 0), (), "MemberName", None),
		"Members": (35, 2, (9, 0), (), "Members", None),
		"MinValue": (9, 2, (12, 0), (), "MinValue", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"NotificationType": (6, 2, (3, 0), (), "NotificationType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"PhysicalInitValue": (32, 2, (12, 0), (), "PhysicalInitValue", None),
		"PhysicalMaxValue": (30, 2, (12, 0), (), "PhysicalMaxValue", None),
		"PhysicalMinValue": (29, 2, (12, 0), (), "PhysicalMinValue", None),
		"PhysicalValue": (28, 2, (12, 0), (), "PhysicalValue", None),
		"ReadOnly": (8, 2, (11, 0), (), "ReadOnly", None),
		"Type": (21, 2, (19, 0), (), "Type", None),
		"Unit": (14, 2, (8, 0), (), "Unit", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueAndTime": (5, 2, (12, 0), (), "ValueAndTime", None),
	}
	_prop_map_put_ = {
		"AnalysisOnly": ((7, LCID, 4, 0),()),
		"Comment": ((11, LCID, 4, 0),()),
		"InitValue": ((31, LCID, 4, 0),()),
		"NotificationType": ((6, LCID, 4, 0),()),
		"PhysicalInitValue": ((32, LCID, 4, 0),()),
		"PhysicalValue": ((28, LCID, 4, 0),()),
		"Unit": ((14, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariableArray(DispatchBaseClass):
	'IVariableArray Interface'
	CLSID = IID('{894AADD6-AF47-4FF1-8973-D3DDEF44B3E8}')
	coclass_clsid = IID('{51315E01-B623-4484-9F05-6D20C02B7799}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Values": (3, 2, (12, 0), (), "Values", None),
	}
	_prop_map_put_ = {
		"Values": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariables(DispatchBaseClass):
	'IVariables Interface'
	CLSID = IID('{4D27AA78-B622-42E7-A237-3DA76B14A23D}')
	coclass_clsid = None

	# Result is of type IVariable
	def Add(self, Name=defaultNamedNotOptArg, Value=defaultNamedOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (12, 17)),Name
			, Value)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	# Result is of type IVariable
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IVariables2(DispatchBaseClass):
	'IVariables2 Interface'
	CLSID = IID('{D667F629-CD0B-459E-B0DC-A9EF928568B5}')
	coclass_clsid = None

	# Result is of type IVariable
	def Add(self, Name=defaultNamedNotOptArg, Value=defaultNamedOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (12, 17)),Name
			, Value)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	# Result is of type IVariable
	def AddWriteable(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method AddWriteable'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (12, 1)),Name
			, Value)
		if ret is not None:
			ret = Dispatch(ret, 'AddWriteable', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	# Result is of type IVariable
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IVariables3(DispatchBaseClass):
	'IVariables3 interface'
	CLSID = IID('{2FB1BA83-C881-4B48-9366-94F2BFBE4AC6}')
	coclass_clsid = IID('{A3D77EE1-0B95-4AEC-8D67-072E9657C7D3}')

	# Result is of type IVariable
	def Add(self, Name=defaultNamedNotOptArg, Value=defaultNamedOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1), (12, 17)),Name
			, Value)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	# Result is of type IVariable
	def AddEx(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, MinValue=defaultNamedOptArg, MaxValue=defaultNamedOptArg):
		'method AddEx'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 17), (12, 17)),Name
			, Value, MinValue, MaxValue)
		if ret is not None:
			ret = Dispatch(ret, 'AddEx', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	# Result is of type IVariable
	def AddWriteable(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'method AddWriteable'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (12, 1)),Name
			, Value)
		if ret is not None:
			ret = Dispatch(ret, 'AddWriteable', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	# Result is of type IVariable
	def AddWriteableEx(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, MinValue=defaultNamedOptArg, MaxValue=defaultNamedOptArg):
		'method AddWriteableEx'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((8, 1), (12, 1), (12, 17), (12, 17)),Name
			, Value, MinValue, MaxValue)
		if ret is not None:
			ret = Dispatch(ret, 'AddWriteableEx', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	# Result is of type IVariable
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E172E995-EF4B-46FE-99BF-B99DAE854305}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IVariablesFile(DispatchBaseClass):
	'IVariablesFile Interface'
	CLSID = IID('{E56B7F82-29B3-4977-85FD-E7994A570D03}')
	coclass_clsid = IID('{A35AC08F-4B92-470A-A2C1-7C1C75319964}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"FullName": (3, 2, (8, 0), (), "FullName", None),
		"Name": (4, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Path": (5, 2, (8, 0), (), "Path", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariablesFiles(DispatchBaseClass):
	'IVariablesFiles Interface'
	CLSID = IID('{2CE0ED53-874C-4C36-A84D-C5F189CD11DD}')
	coclass_clsid = IID('{1F59FD71-7B7C-4D7E-83F5-8E995EBB5508}')

	# Result is of type IVariablesFile
	def Add(self, FullName=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),FullName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E56B7F82-29B3-4977-85FD-E7994A570D03}')
		return ret

	# Result is of type IVariablesFile
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E56B7F82-29B3-4977-85FD-E7994A570D03}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E56B7F82-29B3-4977-85FD-E7994A570D03}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E56B7F82-29B3-4977-85FD-E7994A570D03}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IVariantProfileNames(DispatchBaseClass):
	'IVariantProfileNames Interface'
	CLSID = IID('{9F64CBD2-C6F2-4BB7-B656-5D856796A16D}')
	coclass_clsid = IID('{E73129B3-B05A-419A-B00F-118AA3E0E38F}')

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(0, LCID, 2, (8, 0), ((12, 1),),index
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IVersion2(DispatchBaseClass):
	'IVersion2 Interface'
	CLSID = IID('{3A1BEFB4-D9DD-4D31-901F-05CC393242F3}')
	coclass_clsid = IID('{1B6FDCD2-317D-4D78-BF4B-0BD9E2A91840}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Build": (5, 2, (3, 0), (), "Build", None),
		"FullName": (7, 2, (8, 0), (), "FullName", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Patch": (6, 2, (3, 0), (), "Patch", None),
		"major": (3, 2, (3, 0), (), "major", None),
		"minor": (4, 2, (3, 0), (), "minor", None),
	}
	_prop_map_put_ = {
	}
	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVideoWindow(DispatchBaseClass):
	'IVideoWindow Interface'
	CLSID = IID('{63008CF3-5A5C-42A8-9095-4B996EC15FC8}')
	coclass_clsid = IID('{5BAE3260-AD4F-45F9-A110-F64CADC955AA}')

	def SetTriggerTimes(self, preTriggerTime=defaultNamedNotOptArg, postTriggerTime=defaultNamedNotOptArg):
		'method SetTriggerTimes'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((19, 1), (19, 1)),preTriggerTime
			, postTriggerTime)

	def StartRecording(self):
		'method StartRecording '
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def StopRecording(self):
		'method StopRecording '
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RecordFile": (4, 2, (8, 0), (), "RecordFile", None),
	}
	_prop_map_put_ = {
		"RecordFile": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVideoWindow2(DispatchBaseClass):
	'IVideoWindow2 Interface'
	CLSID = IID('{63008CF3-5A5C-42A8-9095-4B996EC15FC9}')
	coclass_clsid = None

	def SetOfflineLoggerCam(self, camType=defaultNamedNotOptArg, filePrefix=defaultNamedNotOptArg):
		'method SetOfflineLoggerCam '
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((3, 1), (8, 17)),camType
			, filePrefix)

	def SetOfflineSource(self, SourceType=defaultNamedNotOptArg, sourcePath=defaultNamedNotOptArg):
		'method SetOfflineSource'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((3, 1), (8, 17)),SourceType
			, sourcePath)

	def SetTriggerTimes(self, preTriggerTime=defaultNamedNotOptArg, postTriggerTime=defaultNamedNotOptArg):
		'method SetTriggerTimes'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((19, 1), (19, 1)),preTriggerTime
			, postTriggerTime)

	def StartRecording(self):
		'method StartRecording '
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def StopRecording(self):
		'method StopRecording '
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"OfflineLoggerCam": (10, 2, (3, 0), (), "OfflineLoggerCam", None),
		"OfflineLoggerPrefix": (11, 2, (8, 0), (), "OfflineLoggerPrefix", None),
		"OfflineSourcePath": (9, 2, (8, 0), (), "OfflineSourcePath", None),
		"OfflineSourceType": (8, 2, (3, 0), (), "OfflineSourceType", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RecordFile": (4, 2, (8, 0), (), "RecordFile", None),
	}
	_prop_map_put_ = {
		"RecordFile": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVideoWindows(DispatchBaseClass):
	'IVideoWindows Interface'
	CLSID = IID('{53E11521-81AC-4D16-A147-17A68F40A7B7}')
	coclass_clsid = IID('{AEAEF5EF-E37E-4CD1-A65E-27C5EC8C903A}')

	# Result is of type IVideoWindow
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{63008CF3-5A5C-42A8-9095-4B996EC15FC8}')
		return ret

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{63008CF3-5A5C-42A8-9095-4B996EC15FC8}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{63008CF3-5A5C-42A8-9095-4B996EC15FC8}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IViewSynchronization(DispatchBaseClass):
	'IViewSynchronization Interface'
	CLSID = IID('{0BF3185A-C2C0-4C2C-8DFD-5F324D078D0D}')
	coclass_clsid = None

	def SetTime(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
		'method SetTime'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((3, 1), (3, 1)),timeHigh
			, time)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IViewSynchronization2(DispatchBaseClass):
	'IViewSynchronization2 Interface'
	CLSID = IID('{F258EB3B-C1D5-4427-B712-A550D88E3926}')
	coclass_clsid = IID('{6F214176-B587-49D1-826F-0776E127F1CA}')

	def SetTime(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
		'method SetTime'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((3, 1), (3, 1)),timeHigh
			, time)

	def SetTimeNS(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
		'method SetTimeNS'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1), (3, 1)),timeHigh
			, time)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Enabled": (3, 2, (11, 0), (), "Enabled", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
		"Enabled": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVlan(DispatchBaseClass):
	'IVlan Interface'
	CLSID = IID('{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}')
	coclass_clsid = IID('{EE0F1462-1359-4FBD-933F-3912CD5865E6}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Id": (3, 2, (19, 0), (), "Id", None),
		"IpV4Setting": (5, 2, (9, 0), (), "IpV4Setting", None),
		"IpV6Setting": (6, 2, (9, 0), (), "IpV6Setting", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Priority": (4, 2, (19, 0), (), "Priority", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVlans(DispatchBaseClass):
	'IVlans Interface'
	CLSID = IID('{8A32A0E9-C1A1-4E8B-94DA-C6910338C058}')
	coclass_clsid = IID('{145F2519-541A-407E-85A9-B6F18AECE6C4}')

	# Result is of type IVlan
	def Add(self, Id=defaultNamedNotOptArg, Priority=defaultNamedNotOptArg):
		'method Add'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((19, 1), (19, 1)),Id
			, Priority)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}')
		return ret

	# Result is of type IVlan
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}')
		return ret

	def Remove(self, index=defaultNamedNotOptArg):
		'method Remove'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((12, 1),),index
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'property Item'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IVttSutImportResult(DispatchBaseClass):
	'IVttSutImportResult Interface'
	CLSID = IID('{D06241F9-C503-42D5-B148-10E8604F8959}')
	coclass_clsid = IID('{0C44B6A3-FEB2-4913-AC3C-E8CF54ACA3C2}')

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		# Method 'CreatedApplicationModels' returns object of type 'IApplicationModels'
		"CreatedApplicationModels": (4, 2, (9, 0), (), "CreatedApplicationModels", '{C9ECF396-A1B4-4FB8-938E-0ED26AD41476}'),
		# Method 'CreatedDataSource' returns object of type 'IDataSource'
		"CreatedDataSource": (5, 2, (9, 0), (), "CreatedDataSource", '{0F3BAE57-2F92-450D-BA54-478F5B372173}'),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"success": (3, 2, (11, 0), (), "success", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWrite(DispatchBaseClass):
	'IWrite Interface'
	CLSID = IID('{97FBEA50-A327-11D3-85BA-00105A3E017B}')
	coclass_clsid = None

	def Clear(self):
		'method Clear'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def Copy(self):
		'method Copy'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def Output(self, config=defaultNamedNotOptArg):
		'method Output'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 17),),config
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWrite2(DispatchBaseClass):
	'IWrite2 Interface'
	CLSID = IID('{2676A0A7-8EBB-4C0A-B355-F49CE34852FE}')
	coclass_clsid = None

	def Clear(self):
		'method Clear'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def Copy(self):
		'method Copy'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def DisableOutputFile(self, tabIndex=defaultNamedNotOptArg):
		'method DisableOutputFile'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 17),),tabIndex
			)

	def EnableOutputFile(self, outputFile=defaultNamedNotOptArg, tabIndex=defaultNamedNotOptArg):
		'method EnableOutputFile'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((8, 17), (3, 17)),outputFile
			, tabIndex)

	def Output(self, config=defaultNamedNotOptArg):
		'method Output'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 17),),config
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWrite3(DispatchBaseClass):
	'IWrite3 Interface'
	CLSID = IID('{EF692849-4DFE-41A0-BCBA-4F4803B815A2}')
	coclass_clsid = IID('{97FBEA51-A327-11D3-85BA-00105A3E017B}')

	def Clear(self):
		'method Clear'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def Copy(self):
		'method Copy'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def DisableOutputFile(self, tabIndex=defaultNamedNotOptArg):
		'method DisableOutputFile'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 17),),tabIndex
			)

	def EnableOutputFile(self, outputFile=defaultNamedNotOptArg, tabIndex=defaultNamedNotOptArg):
		'method EnableOutputFile'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((8, 17), (3, 17)),outputFile
			, tabIndex)

	def Output(self, config=defaultNamedNotOptArg):
		'method Output'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 17),),config
			)

	_prop_map_get_ = {
		"Application": (1, 2, (9, 0), (), "Application", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"Text": (8, 2, (8, 0), (), "Text", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IXCPSetup(DispatchBaseClass):
	'IXCPSetup Interface'
	CLSID = IID('{AEC1E946-BE26-4981-AAF7-0A9ECA360436}')
	coclass_clsid = IID('{665DC99E-CAD9-49A0-A678-BECBC71DD93A}')

	_prop_map_get_ = {
		# Method 'ECUs' returns object of type 'IMcECUs1'
		"ECUs": (1, 2, (9, 0), (), "ECUs", '{1B987168-9FA2-460B-BAE5-7194F7CAE469}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _IApplicationEvents:
	'_IApplicationEvents Interface'
	CLSID = CLSID_Sink = IID('{CD866FB4-44BF-11D3-8538-00105A3E017B}')
	coclass_clsid = IID('{7F31DEB1-5BCC-11D3-8562-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnOpen",
		        2 : "OnQuit",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnOpen(self, Name=defaultNamedNotOptArg):
#		'method OnOpen'
#	def OnQuit(self):
#		'method OnQuit'


class _IApplicationSocketEvents:
	'_IApplicationSocketEvents Interface'
	CLSID = CLSID_Sink = IID('{3AD52BF6-800A-45CF-867E-D7AE77E32F08}')
	coclass_clsid = IID('{9894BF32-15B0-41D8-A5B8-C3CF911CF43C}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBusRegistry",
		        2 : "OnFBlockList",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBusRegistry(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
#		'method OnBusRegistry'
#	def OnFBlockList(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
#		'method OnFBlockList'


class _IAudioInterfaceEvents:
	'_IAudioInterfaceEvents Interface'
	CLSID = CLSID_Sink = IID('{9E8E090A-ED0B-4CE8-BCA3-499856FAEA28}')
	coclass_clsid = IID('{00F559D5-19A5-4118-BC6D-82EA6AF9749C}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnMute",
		        2 : "OnVolume",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnMute(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, lineInOut=defaultNamedNotOptArg, Mute=defaultNamedNotOptArg):
#		'method OnMute'
#	def OnVolume(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, lineInOut=defaultNamedNotOptArg, Volume=defaultNamedNotOptArg):
#		'method OnVolume'


class _IConfigurationEvents:
	'_IConfigurationEvents Interface'
	CLSID = CLSID_Sink = IID('{48461815-4502-11D3-8539-00105A3E017B}')
	coclass_clsid = IID('{48461814-4502-11D3-8539-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnClose",
		        2 : "OnSystemVariablesDefinitionChanged",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnClose(self):
#		'method OnClose'
#	def OnSystemVariablesDefinitionChanged(self):
#		'method OnSystemVariablesDefinitionChanged'


class _IDatabaseSetupEvents:
	'_IDatabaseSetupEvents Interface'
	CLSID = CLSID_Sink = IID('{9E2F76EE-D239-11D3-85E6-00105A3E017B}')
	coclass_clsid = IID('{9E2F76EF-D239-11D3-85E6-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnChange",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnChange(self):
#		'method OnChange'


class _IEnvironmentVariableEvents:
	'_IEnvironmentVariableEvents Interface'
	CLSID = CLSID_Sink = IID('{4793A122-7008-11D3-8566-00105A3E017B}')
	coclass_clsid = IID('{4793A121-7008-11D3-8566-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnChange",
		        2 : "OnChangeAndTime",
		        3 : "OnChangeAndTimeU",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnChange(self, Value=defaultNamedNotOptArg):
#		'method OnChange'
#	def OnChangeAndTime(self, Value=defaultNamedNotOptArg, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnChangeAndTime'
#	def OnChangeAndTimeU(self, Value=defaultNamedNotOptArg, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnChangeAndTimeU'


class _IGeneralSetupEvents:
	'_IGeneralSetupEvents Interface'
	CLSID = CLSID_Sink = IID('{48461818-4502-11D3-8539-00105A3E017B}')
	coclass_clsid = IID('{48461817-4502-11D3-8539-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:


class _IMeasurementEvents:
	'_IMeasurementEvents Interface'
	CLSID = CLSID_Sink = IID('{CD866FB7-44BF-11D3-8538-00105A3E017B}')
	coclass_clsid = IID('{CD866FB6-44BF-11D3-8538-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnInit",
		        2 : "OnStart",
		        3 : "OnStop",
		        4 : "OnExit",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnInit(self):
#		'method OnInit'
#	def OnStart(self):
#		'method OnStart'
#	def OnStop(self):
#		'method OnStop'
#	def OnExit(self):
#		'method OnExit'


class _IMeasurementSetupEvents:
	'_IMeasurementSetupEvents Interface'
	CLSID = CLSID_Sink = IID('{4846181B-4502-11D3-8539-00105A3E017B}')
	coclass_clsid = IID('{4846181A-4502-11D3-8539-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:


class _IMostNetworkInterfaceEvents:
	'_IMostNetworkInterfaceEvents Interface'
	CLSID = CLSID_Sink = IID('{3A4DC1F2-D27C-454D-B1D8-B76D53B7B049}')
	coclass_clsid = IID('{1465BF57-23AD-4253-A4E9-52F615FAC47D}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnCMSRx",
		        2 : "OnCMSTx",
		        3 : "OnAMSRx",
		        4 : "OnAMSTx",
		        5 : "OnPacketRx",
		        6 : "OnPacketTx",
		        7 : "OnControlSpyCMS",
		        8 : "OnControlSpyAMS",
		        9 : "OnAsynchronousSpy",
		       10 : "OnLight",
		       11 : "OnNoLight",
		       12 : "OnStableLock",
		       13 : "OnLock",
		       14 : "OnUnlock",
		       15 : "OnCriticalUnlock",
		       16 : "OnNetState",
		       17 : "OnAllocationTable",
		       18 : "OnRegister",
		       19 : "OnNodeAddress",
		       20 : "OnGroupAddress",
		       21 : "OnAlternativePacketAddress",
		       22 : "OnMPR",
		       23 : "OnNPR",
		       24 : "OnSBC",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnCMSRx(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, rType=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg
#			, destinationAddress=defaultNamedNotOptArg, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg, State=defaultNamedNotOptArg):
#		'method OnCMSRx'
#	def OnCMSTx(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, rType=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg
#			, destinationAddress=defaultNamedNotOptArg, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg, State=defaultNamedNotOptArg, ackNack=defaultNamedNotOptArg):
#		'method OnCMSTx'
#	def OnAMSRx(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg, destinationAddress=defaultNamedNotOptArg
#			, fBlockID=defaultNamedNotOptArg, instanceID=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg, opType=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg
#			, dataArray=defaultNamedNotOptArg, State=defaultNamedNotOptArg):
#		'method OnAMSRx'
#	def OnAMSTx(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg, destinationAddress=defaultNamedNotOptArg
#			, fBlockID=defaultNamedNotOptArg, instanceID=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg, opType=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg
#			, dataArray=defaultNamedNotOptArg, State=defaultNamedNotOptArg):
#		'method OnAMSTx'
#	def OnPacketRx(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg, destinationAddress=defaultNamedNotOptArg
#			, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
#		'method OnPacketRx'
#	def OnPacketTx(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg, destinationAddress=defaultNamedNotOptArg
#			, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
#		'method OnPacketTx'
#	def OnControlSpyCMS(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, mostRTType=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg
#			, destinationAddress=defaultNamedNotOptArg, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg, State=defaultNamedNotOptArg, ackNack=defaultNamedNotOptArg
#			, CRC=defaultNamedNotOptArg):
#		'method OnControlSpyCMS'
#	def OnControlSpyAMS(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg, destinationAddress=defaultNamedNotOptArg
#			, fBlockID=defaultNamedNotOptArg, instanceID=defaultNamedNotOptArg, FunctionID=defaultNamedNotOptArg, opType=defaultNamedNotOptArg, dataLength=defaultNamedNotOptArg
#			, dataArray=defaultNamedNotOptArg, State=defaultNamedNotOptArg, ackNack=defaultNamedNotOptArg):
#		'method OnControlSpyAMS'
#	def OnAsynchronousSpy(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, sourceAddress=defaultNamedNotOptArg, destinationAddress=defaultNamedNotOptArg
#			, DLC=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
#		'method OnAsynchronousSpy'
#	def OnLight(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnLight'
#	def OnNoLight(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnNoLight'
#	def OnStableLock(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnStableLock'
#	def OnLock(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnLock'
#	def OnUnlock(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnUnlock'
#	def OnCriticalUnlock(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnCriticalUnlock'
#	def OnNetState(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, netState=defaultNamedNotOptArg):
#		'method OnNetState'
#	def OnAllocationTable(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
#		'method OnAllocationTable'
#	def OnRegister(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, chip=defaultNamedNotOptArg, Offset=defaultNamedNotOptArg
#			, dataLength=defaultNamedNotOptArg, dataArray=defaultNamedNotOptArg):
#		'method OnRegister'
#	def OnNodeAddress(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, NodeAddress=defaultNamedNotOptArg):
#		'method OnNodeAddress'
#	def OnGroupAddress(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, GroupAddress=defaultNamedNotOptArg):
#		'method OnGroupAddress'
#	def OnAlternativePacketAddress(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, AlternativePacketAddress=defaultNamedNotOptArg):
#		'method OnAlternativePacketAddress'
#	def OnMPR(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, MPR=defaultNamedNotOptArg):
#		'method OnMPR'
#	def OnNPR(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, NPR=defaultNamedNotOptArg):
#		'method OnNPR'
#	def OnSBC(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg, SBC=defaultNamedNotOptArg):
#		'method OnSBC'


class _IPanelSetupEvents:
	'_IPanelSetupEvents Interface'
	CLSID = CLSID_Sink = IID('{3BC4EED1-D25F-11D3-85E6-00105A3E017B}')
	coclass_clsid = IID('{2FCA3564-CDA6-11D3-85E1-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnChange",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnChange(self):
#		'method OnChange'


class _ISimulationEvents:
	'_ISimulationEvents Interface'
	CLSID = CLSID_Sink = IID('{0D44F5D1-9B74-11D4-86D0-00105A3E017B}')
	coclass_clsid = IID('{CA5C18B0-A1B0-11D3-85B7-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnIdle",
		        2 : "OnIdleU",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnIdle(self, CurrentTimeHigh=defaultNamedNotOptArg, CurrentTime=defaultNamedNotOptArg):
#		'method OnIdle'
#	def OnIdleU(self, CurrentTimeHigh=defaultNamedNotOptArg, CurrentTime=defaultNamedNotOptArg):
#		'method OnIdleU'


class _ISimulationSetupEvents:
	'_ISimulationSetupEvents Interface'
	CLSID = CLSID_Sink = IID('{9E2F76E1-D239-11D3-85E6-00105A3E017B}')
	coclass_clsid = IID('{9E2F76E2-D239-11D3-85E6-00105A3E017B}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:


class _ITSTestModuleEvents:
	'_ITSTestModuleEvents Interface'
	CLSID = CLSID_Sink = IID('{C6DB40F8-210C-40E2-A950-FCF23AF2BE62}')
	coclass_clsid = IID('{7F029E34-1167-49E7-8859-193BDD1900C5}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnStart",
		        2 : "OnStop",
		        3 : "OnVerdictFail",
		        4 : "OnReportGenerated",
		        5 : "OnPause",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnStart(self):
#		'method OnStart'
#	def OnStop(self, reason=defaultNamedNotOptArg):
#		'method OnStop'
#	def OnVerdictFail(self):
#		'method OnVerdictFail'
#	def OnReportGenerated(self, success=defaultNamedNotOptArg, sourceFullName=defaultNamedNotOptArg, generatedFullName=defaultNamedNotOptArg):
#		'method OnReportGenerated'
#	def OnPause(self):
#		'method OnPause'


class _ITestConfigurationEvents:
	'_ITestConfigurationEvents Interface'
	CLSID = CLSID_Sink = IID('{1E0577C8-B62F-43E7-A896-3E171A1BA9DF}')
	coclass_clsid = IID('{B00A2245-2B50-408B-B2A9-597460111486}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnStart",
		        2 : "OnStop",
		        3 : "OnVerdictFail",
		        4 : "OnVerdictChanged",
		        5 : "OnVariantsChanged",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnStart(self):
#		'method OnStart'
#	def OnStop(self, reason=defaultNamedNotOptArg):
#		'method OnStop'
#	def OnVerdictFail(self):
#		'method OnVerdictFail'
#	def OnVerdictChanged(self, Verdict=defaultNamedNotOptArg):
#		'method OnVerdictChanged'
#	def OnVariantsChanged(self):
#		'method OnVariantsChanged'


class _ITestConfigurationReportEvents:
	CLSID = CLSID_Sink = IID('{840961AD-15FB-45B7-8493-C0AC2DE5C5D3}')
	coclass_clsid = IID('{AB1EE4BF-EB3E-4AF0-96AC-4C4050633EA3}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnGenerated",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnGenerated(self, success=defaultNamedNotOptArg, sourceFullPath=defaultNamedNotOptArg, generatedFullPath=defaultNamedNotOptArg):
#		'method OnGenerated'


class _ITestReportEvents:
	'_ITestReportEvents Interface'
	CLSID = CLSID_Sink = IID('{02B511AB-85FC-45C1-A971-7D81B7E7C4A0}')
	coclass_clsid = IID('{FF4EDCF9-6020-410C-8A41-915499F8818E}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnReportGenerated",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnReportGenerated(self, success=defaultNamedNotOptArg, sourceFullName=defaultNamedNotOptArg, generatedFullName=defaultNamedNotOptArg):
#		'method OnReportGenerated'


class _ITestUnitReportEvents:
	CLSID = CLSID_Sink = IID('{C36F463D-B9FF-4E16-A2C0-B1964C8421FA}')
	coclass_clsid = IID('{C0A2A4FC-26B3-431E-BA90-3D725012FB04}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnGenerated",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnGenerated(self, success=defaultNamedNotOptArg, sourceFullPath=defaultNamedNotOptArg, generatedFullPath=defaultNamedNotOptArg):
#		'method OnGenerated'


class _IVariableEvents:
	'_IVariableEvents Interface'
	CLSID = CLSID_Sink = IID('{6AC60F41-28E6-47DD-A172-6AA345462974}')
	coclass_clsid = IID('{FB1A8BBE-584F-4669-B927-3567D70FF952}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnChange",
		        2 : "OnChangeAndTime",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnChange(self, Value=defaultNamedNotOptArg):
#		'method OnChange'
#	def OnChangeAndTime(self, Value=defaultNamedNotOptArg, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnChangeAndTime'


class _IViewSynchronizationEvents:
	'_IViewSynchronizationEvents Interface'
	CLSID = CLSID_Sink = IID('{DF8ABAE7-2A2F-442E-A37D-AB7DDB974BD7}')
	coclass_clsid = IID('{6F214176-B587-49D1-826F-0776E127F1CA}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnSynchronizationEnabled",
		        2 : "OnSynchronizationDisabled",
		        3 : "OnSetTime",
		        4 : "OnSetTimeNS",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnSynchronizationEnabled(self):
#		'method OnSynchronizationEnabled'
#	def OnSynchronizationDisabled(self):
#		'method OnSynchronizationDisabled'
#	def OnSetTime(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnSetTime'
#	def OnSetTimeNS(self, timeHigh=defaultNamedNotOptArg, time=defaultNamedNotOptArg):
#		'method OnSetTimeNS'


from win32com.client import CoClassBaseClass
class ARXMLImportParameters(CoClassBaseClass): # A CoClass
	# ARXMLImportParameters Class
	CLSID = IID('{F38D7030-C528-4CE0-B38A-952EE58E0A7F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IARXMLImportParameters,
	]
	default_interface = IARXMLImportParameters

class AdditionalDescription(CoClassBaseClass): # A CoClass
	# AdditionalDescription Class
	CLSID = IID('{094FC1CC-96B5-43B9-84D0-4AED35E4678C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAdditionalDescription,
	]
	default_interface = IAdditionalDescription

class AdditionalDescriptions(CoClassBaseClass): # A CoClass
	# AdditionalDescriptions Class
	CLSID = IID('{A1082BC2-71A2-4390-8DE9-C887C889984A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IAdditionalDescriptions,
	]
	default_interface = IAdditionalDescriptions

# This CoClass is known by the name 'CANoe.Application.1'
class Application(CoClassBaseClass): # A CoClass
	# Application Class
	CLSID = IID('{7F31DEB1-5BCC-11D3-8562-00105A3E017B}')
	coclass_sources = [
		_IApplicationEvents,
	]
	default_source = _IApplicationEvents
	coclass_interfaces = [
		IApplication10,
	]
	default_interface = IApplication10

class ApplicationModel(CoClassBaseClass): # A CoClass
	# ApplicationModel Class
	CLSID = IID('{DAB1810C-B0CB-4D4C-9BFD-C9AB8FB2E68F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IApplicationModel,
	]
	default_interface = IApplicationModel

class ApplicationModelFile(CoClassBaseClass): # A CoClass
	# ApplicationModelFile Class
	CLSID = IID('{2306E68C-5EFD-4CDF-9B1B-46A306C627F2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IApplicationModelFile,
	]
	default_interface = IApplicationModelFile

class ApplicationModelFiles(CoClassBaseClass): # A CoClass
	# ApplicationModelFiles Class
	CLSID = IID('{14E96426-79F5-4D61-8B78-25CEDD7C8325}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IApplicationModelFiles,
	]
	default_interface = IApplicationModelFiles

class ApplicationModelSetup(CoClassBaseClass): # A CoClass
	# ApplicationModelSetup Class
	CLSID = IID('{8727551E-24B3-46D2-8C63-FAF798CA70EB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IApplicationModelSetup,
	]
	default_interface = IApplicationModelSetup

class ApplicationModels(CoClassBaseClass): # A CoClass
	# ApplicationModels Class
	CLSID = IID('{3FA83260-DC0B-4AA5-8550-8FAF585944F5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IApplicationModels,
	]
	default_interface = IApplicationModels

class ApplicationSocket(CoClassBaseClass): # A CoClass
	# ApplicationSocket Class
	CLSID = IID('{9894BF32-15B0-41D8-A5B8-C3CF911CF43C}')
	coclass_sources = [
		_IApplicationSocketEvents,
	]
	default_source = _IApplicationSocketEvents
	coclass_interfaces = [
		IApplicationSocket,
	]
	default_interface = IApplicationSocket

class AudioInterface(CoClassBaseClass): # A CoClass
	# AudioInterface Class
	CLSID = IID('{00F559D5-19A5-4118-BC6D-82EA6AF9749C}')
	coclass_sources = [
		_IAudioInterfaceEvents,
	]
	default_source = _IAudioInterfaceEvents
	coclass_interfaces = [
		IAudioInterface,
	]
	default_interface = IAudioInterface

class Bus(CoClassBaseClass): # A CoClass
	# Bus Class
	CLSID = IID('{884DBC03-7A76-11D3-8571-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBusVB5,
	]
	default_interface = IBusVB5

class BusStatistics(CoClassBaseClass): # A CoClass
	# BusStatistics Class
	CLSID = IID('{A7566B47-D7E8-11D3-85EE-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBusStatistics,
	]
	default_interface = IBusStatistics

class Buses(CoClassBaseClass): # A CoClass
	# Buses Class
	CLSID = IID('{41C470FC-DB1F-4286-9723-A5C39BBBDDAF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IBuses2,
	]
	default_interface = IBuses2

class CANBusStatistic(CoClassBaseClass): # A CoClass
	# CANBusStatistic Class
	CLSID = IID('{A7566B41-D7E8-11D3-85EE-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICANBusStatistic,
	]
	default_interface = ICANBusStatistic

class CANController(CoClassBaseClass): # A CoClass
	# CANController Class
	CLSID = IID('{886978D1-CE60-11D3-85E2-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICANController4,
	]
	default_interface = ICANController4

class CANOpen(CoClassBaseClass): # A CoClass
	# CANopen Class
	CLSID = IID('{C877EFE5-AF23-4D9B-B2A0-347884FDCE8E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICANopen,
	]
	default_interface = ICANopen

class CANoe4Server(CoClassBaseClass): # A CoClass
	# CANoe4Server Class
	CLSID = IID('{A1FDF8F0-4ABF-4FBE-97F2-D05456D3A985}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICANoe4Server,
	]
	default_interface = ICANoe4Server

# This CoClass is known by the name 'CANoe.Server.1'
class CANoeServer(CoClassBaseClass): # A CoClass
	CLSID = IID('{D54CED00-A490-11D2-A3D7-00609768736E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMeasurement,
		ISIM,
	]
	default_interface = IMeasurement

class CAPL(CoClassBaseClass): # A CoClass
	# CAPL Class
	CLSID = IID('{8CCE6461-54AE-11D3-8554-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICAPL5,
	]
	default_interface = ICAPL5

class CAPLFunction(CoClassBaseClass): # A CoClass
	# CAPLFunction Class
	CLSID = IID('{8CCE6465-54AE-11D3-8554-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICAPLFunction2,
	]
	default_interface = ICAPLFunction2

class CCPSetup(CoClassBaseClass): # A CoClass
	# CCPSetup Class
	CLSID = IID('{202F6E75-6E15-4E85-86F5-1E31AEE16B71}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICCPSetup,
	]
	default_interface = ICCPSetup

class CLibraries(CoClassBaseClass): # A CoClass
	# CLibraries Class
	CLSID = IID('{2FB74EE4-AFC4-47E8-8BE2-4C0193A82EDA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICLibraries,
	]
	default_interface = ICLibraries

class CLibrary(CoClassBaseClass): # A CoClass
	# CLibrary Class
	CLSID = IID('{B0DC4058-4BB9-4A81-BCAC-79BF2A272598}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICLibrary,
	]
	default_interface = ICLibrary

class Channel(CoClassBaseClass): # A CoClass
	# Channel Class
	CLSID = IID('{7A5F5AE7-6840-43EF-B44F-CFBC25379BC3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IChannel,
	]
	default_interface = IChannel

class ChannelMapping(CoClassBaseClass): # A CoClass
	# ChannelMapping Class
	CLSID = IID('{5CE8F12F-09B4-4521-A7DC-558557DD2123}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IChannelMapping,
	]
	default_interface = IChannelMapping

class ChannelMappingSet(CoClassBaseClass): # A CoClass
	# ChannelMappingSet Class
	CLSID = IID('{B12BE5BC-E26F-48C6-A6ED-554E34D8B615}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IChannelMappingSet,
	]
	default_interface = IChannelMappingSet

class ChannelMappingSets(CoClassBaseClass): # A CoClass
	# ChannelMappingSets Class
	CLSID = IID('{EC8BE2DF-4F01-432C-AAA5-FF6D52C41C71}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IChannelMappingSets,
	]
	default_interface = IChannelMappingSets

class Channels(CoClassBaseClass): # A CoClass
	# Channels Class
	CLSID = IID('{C539A226-09E6-46B0-B26A-7C5823634D21}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IChannels,
	]
	default_interface = IChannels

class CommunicationSetup(CoClassBaseClass): # A CoClass
	# CommunicationSetup Class
	CLSID = IID('{CD8065CD-59C5-4681-81FD-C39946FAFB8C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICommunicationSetup,
	]
	default_interface = ICommunicationSetup

class CompileResult(CoClassBaseClass): # A CoClass
	# CompileResult Class
	CLSID = IID('{031CD126-8258-4CD4-8264-CC848B0BFBBD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ICompileResult,
	]
	default_interface = ICompileResult

class Configuration(CoClassBaseClass): # A CoClass
	# Configuration Class
	CLSID = IID('{48461814-4502-11D3-8539-00105A3E017B}')
	coclass_sources = [
		_IConfigurationEvents,
	]
	default_source = _IConfigurationEvents
	coclass_interfaces = [
		IConfiguration17,
	]
	default_interface = IConfiguration17

class DataSource(CoClassBaseClass): # A CoClass
	# DataSource Class
	CLSID = IID('{FF9081E5-8A96-461A-8A1A-3BEBEED16DA5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSource,
	]
	default_interface = IDataSource

class DataSourceBase(CoClassBaseClass): # A CoClass
	# DataSourceBase Class
	CLSID = IID('{D4C1E81F-3858-453B-9F4E-E57BDD4D2B0A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSourceBase,
	]
	default_interface = IDataSourceBase

class DataSourceFile(CoClassBaseClass): # A CoClass
	# DataSourceFile Class
	CLSID = IID('{32BF5C41-397A-42B6-82D3-3842E90DD832}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSourceFile,
	]
	default_interface = IDataSourceFile

class DataSourceFiles(CoClassBaseClass): # A CoClass
	# DataSourceFiles Class
	CLSID = IID('{5FEE3F8C-4781-42CF-98B4-FF3CEFEAFEEF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSourceFiles,
	]
	default_interface = IDataSourceFiles

class DataSourceIssue(CoClassBaseClass): # A CoClass
	# DataSourceIssue Class
	CLSID = IID('{64D565BE-4D4F-421C-9058-5433260703A6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSourceIssue,
	]
	default_interface = IDataSourceIssue

class DataSourceIssues(CoClassBaseClass): # A CoClass
	# DataSourceIssues Class
	CLSID = IID('{2A37DADB-03E5-4980-8794-73A935C14DB7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSourceIssues,
	]
	default_interface = IDataSourceIssues

class DataSourceSetup(CoClassBaseClass): # A CoClass
	# DataSourceSetup Class
	CLSID = IID('{A49B6C3A-0923-4DAE-AD77-459AC1DDEBBA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSourceSetup,
	]
	default_interface = IDataSourceSetup

class DataSources(CoClassBaseClass): # A CoClass
	# DataSources Class
	CLSID = IID('{6F30F320-A550-4286-9FBD-AD71D89F68FB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDataSources,
	]
	default_interface = IDataSources

class Database(CoClassBaseClass): # A CoClass
	# Database Class
	CLSID = IID('{9E2F76F3-D239-11D3-85E6-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDatabase2,
	]
	default_interface = IDatabase2

class DatabaseSetup(CoClassBaseClass): # A CoClass
	# DatabaseSetup Class
	CLSID = IID('{9E2F76EF-D239-11D3-85E6-00105A3E017B}')
	coclass_sources = [
		_IDatabaseSetupEvents,
	]
	default_source = _IDatabaseSetupEvents
	coclass_interfaces = [
		IDatabaseSetup2,
	]
	default_interface = IDatabaseSetup2

class Databases(CoClassBaseClass): # A CoClass
	# Databases Class
	CLSID = IID('{9E2F76F1-D239-11D3-85E6-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDatabases3,
	]
	default_interface = IDatabases3

class Device(CoClassBaseClass): # A CoClass
	# Device Class
	CLSID = IID('{A4C7D0B0-4FEE-4C9D-89B3-4E9D43B57410}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDevice2,
	]
	default_interface = IDevice2

class Devices(CoClassBaseClass): # A CoClass
	# Devices Class
	CLSID = IID('{63B261DC-118F-4E71-BF6A-EC7B54B1B95D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDevices,
	]
	default_interface = IDevices

class DiagDescription(CoClassBaseClass): # A CoClass
	# DiagDescription Class
	CLSID = IID('{0ECA866E-61D3-4874-9FFE-D6BD9AEC7E02}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDiagDescription6,
	]
	default_interface = IDiagDescription6

class DiagDescriptions(CoClassBaseClass): # A CoClass
	# DiagDescriptions Class
	CLSID = IID('{9CED63DB-D1C2-4CAB-8718-CE238D10E91C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDiagDescriptions2,
	]
	default_interface = IDiagDescriptions2

class DiagVariant(CoClassBaseClass): # A CoClass
	# DiagVariant Class
	CLSID = IID('{0549FFD8-44EB-4AF0-90C3-4E72AF6F273D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDiagVariant,
	]
	default_interface = IDiagVariant

class DiagVariants(CoClassBaseClass): # A CoClass
	# DiagVariants Class
	CLSID = IID('{9ED438B7-D055-4B03-ADF2-C1771A374AA0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDiagVariants,
	]
	default_interface = IDiagVariants

class DiagnosticsSetup(CoClassBaseClass): # A CoClass
	# DiagnosticsSetup Class
	CLSID = IID('{E913F4F9-D757-4625-9E9A-BD5A649B77EC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDiagnosticsSetup,
	]
	default_interface = IDiagnosticsSetup

class Disassembler(CoClassBaseClass): # A CoClass
	# Disassembler Class
	CLSID = IID('{B122211A-DCA8-4A70-8198-C9193549409C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IDisassembler,
	]
	default_interface = IDisassembler

class Encoding(CoClassBaseClass): # A CoClass
	# Encoding Class
	CLSID = IID('{33276274-0E5C-4C7A-A134-B681E81BE6C6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IEncoding,
	]
	default_interface = IEncoding

class Encodings(CoClassBaseClass): # A CoClass
	# Encodings Class
	CLSID = IID('{E4664608-17D8-4DA1-9038-2A0A42B8FC74}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IEncodings,
	]
	default_interface = IEncodings

class Environment(CoClassBaseClass): # A CoClass
	# Environment Class
	CLSID = IID('{8CCE6463-54AE-11D3-8554-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IEnvironment3,
	]
	default_interface = IEnvironment3

class EnvironmentArray(CoClassBaseClass): # A CoClass
	# EnvironmentArray Class
	CLSID = IID('{4C9FD953-7671-11D3-856E-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IEnvironmentArray,
	]
	default_interface = IEnvironmentArray

class EnvironmentGroup(CoClassBaseClass): # A CoClass
	# EnvironmentGroup Class
	CLSID = IID('{4C9FD951-7671-11D3-856E-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IEnvironmentGroup,
	]
	default_interface = IEnvironmentGroup

class EnvironmentInfo(CoClassBaseClass): # A CoClass
	# EnvironmentInfo Class
	CLSID = IID('{28978A11-8FA3-11D4-86C5-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IEnvironmentInfo,
	]
	default_interface = IEnvironmentInfo

class EnvironmentVariable(CoClassBaseClass): # A CoClass
	# EnvironmentVariable Class
	CLSID = IID('{4793A121-7008-11D3-8566-00105A3E017B}')
	coclass_sources = [
		_IEnvironmentVariableEvents,
	]
	default_source = _IEnvironmentVariableEvents
	coclass_interfaces = [
		IEnvironmentVariable2,
	]
	default_interface = IEnvironmentVariable2

class Exporter(CoClassBaseClass): # A CoClass
	# Exporter Class
	CLSID = IID('{43E268FF-FE9E-404E-BB8D-918059BE3E25}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporter3,
	]
	default_interface = IExporter3

class ExporterASCIISettings(CoClassBaseClass): # A CoClass
	# IExporterASCIISettings Class
	CLSID = IID('{C8DDE103-2060-43B2-8CC6-8AA9F8CF7027}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterASCIISettings2,
	]
	default_interface = IExporterASCIISettings2

class ExporterCsvSettings(CoClassBaseClass): # A CoClass
	# ExporterCsvSettings Class
	CLSID = IID('{9BAEDEA1-533F-41FE-8AEE-1C8EE43357B0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterCsvSettings,
	]
	default_interface = IExporterCsvSettings

class ExporterCsvSettingsExt(CoClassBaseClass): # A CoClass
	# ExporterCsvSettingsExt Class
	CLSID = IID('{13755E82-7617-4C0F-91C6-4197C334FB24}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterCsvSettingsExt,
	]
	default_interface = IExporterCsvSettingsExt

class ExporterDiademSettings(CoClassBaseClass): # A CoClass
	# ExporterDiademSettings Class
	CLSID = IID('{B9AB63A2-B46C-465F-B27A-CCF64DA7D4AC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterDiademSettings,
	]
	default_interface = IExporterDiademSettings

class ExporterMatlabSettings(CoClassBaseClass): # A CoClass
	# ExporterMatlabSettings Class
	CLSID = IID('{47FA0D24-EBF5-41C2-ADF2-7C2BC47DED97}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterMatlabSettings2,
	]
	default_interface = IExporterMatlabSettings2

class ExporterMdfSettings(CoClassBaseClass): # A CoClass
	# ExporterMdfSettings Class
	CLSID = IID('{B5D35582-40D9-499B-95FC-D34C838F3ED5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterMdfSettings2,
	]
	default_interface = IExporterMdfSettings2

class ExporterSettings(CoClassBaseClass): # A CoClass
	# ExporterSettings Class
	CLSID = IID('{764E7139-AB99-4646-B853-F9F88E514B7B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterSettings4,
	]
	default_interface = IExporterSettings4

class ExporterSymbol(CoClassBaseClass): # A CoClass
	# ExporterSymbol Class
	CLSID = IID('{29F3568E-2799-4174-8A4E-88C7EC90A65C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterSymbol,
	]
	default_interface = IExporterSymbol

class ExporterSymbols(CoClassBaseClass): # A CoClass
	# ExporterSymbols Class
	CLSID = IID('{0A9BF106-1A84-4980-85E9-A1112CBBB6C7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterSymbols,
	]
	default_interface = IExporterSymbols

class ExporterXMLSettings(CoClassBaseClass): # A CoClass
	# IExporterXMLSettings Class
	CLSID = IID('{943F8293-B2CA-4B7E-B219-466F7482DFCB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IExporterXMLSettings,
	]
	default_interface = IExporterXMLSettings

class FDXControl(CoClassBaseClass): # A CoClass
	# FDXControl Class
	CLSID = IID('{BBFE8AE2-AB1A-4306-8B94-49B4DA8ADF9C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFDXControl,
	]
	default_interface = IFDXControl

class FDXFile(CoClassBaseClass): # A CoClass
	# FDXFile Class
	CLSID = IID('{E6D06532-D722-42FC-AC35-3FBE5859B63E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFDXFile,
	]
	default_interface = IFDXFile

class FDXFiles(CoClassBaseClass): # A CoClass
	# FDXFiles Class
	CLSID = IID('{D1746F51-D04A-4BA3-A677-9C21992F5238}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFDXFiles,
	]
	default_interface = IFDXFiles

class FileGroupDataSource(CoClassBaseClass): # A CoClass
	# FileGroupDataSource Class
	CLSID = IID('{F492F7DA-6D46-49FD-8254-1C0633791B34}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFileGroupDataSource,
	]
	default_interface = IFileGroupDataSource

class Files(CoClassBaseClass): # A CoClass
	# Files Class
	CLSID = IID('{9901B40E-02EF-415D-9B00-CBBEA95B24C4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFiles,
	]
	default_interface = IFiles

class Filter(CoClassBaseClass): # A CoClass
	# Filter Class
	CLSID = IID('{DF4AFDA4-21D0-48B7-BB47-A430AEB2CC00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IFilter,
	]
	default_interface = IFilter

class GeneralSetup(CoClassBaseClass): # A CoClass
	# GeneralSetup Class
	CLSID = IID('{48461817-4502-11D3-8539-00105A3E017B}')
	coclass_sources = [
		_IGeneralSetupEvents,
	]
	default_source = _IGeneralSetupEvents
	coclass_interfaces = [
		IGeneralSetup7,
	]
	default_interface = IGeneralSetup7

class Generator(CoClassBaseClass): # A CoClass
	# Generator Class
	CLSID = IID('{563ED101-7544-11D5-87D4-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGenerator,
	]
	default_interface = IGenerator

class Generators(CoClassBaseClass): # A CoClass
	# Generators Class
	CLSID = IID('{75718C12-7540-11D5-87D4-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IGenerators,
	]
	default_interface = IGenerators

class IUTInitializationSettings(CoClassBaseClass): # A CoClass
	# IUTInitializationSettings Class
	CLSID = IID('{3B32AC37-53A3-449F-9617-7A0746706627}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IIUTInitializationSettings,
	]
	default_interface = IIUTInitializationSettings

class IUTSettings(CoClassBaseClass): # A CoClass
	# IUTSettings Class
	CLSID = IID('{5E7E7181-6279-408F-A0DE-F8D2DB93187D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IIUTSettings2,
	]
	default_interface = IIUTSettings2

class InteractiveGenerator(CoClassBaseClass): # A CoClass
	# InteractiveGenerator Class
	CLSID = IID('{563ED103-7544-11D5-87D4-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IInteractiveGenerator,
	]
	default_interface = IInteractiveGenerator

class InteractiveGenerators(CoClassBaseClass): # A CoClass
	# InteractiveGenerators Class
	CLSID = IID('{75718C14-7540-11D5-87D4-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IInteractiveGenerators,
	]
	default_interface = IInteractiveGenerators

class InterpretationOrder(CoClassBaseClass): # A CoClass
	# InterpretationOrder Class
	CLSID = IID('{73285601-F71A-4F73-B086-DC317658B740}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IInterpretationOrder,
	]
	default_interface = IInterpretationOrder

class IpNetworkAddress(CoClassBaseClass): # A CoClass
	# IpNetworkAddress Class
	CLSID = IID('{5CBFC6F5-3BFE-4DAC-B54F-62DFA410464C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IIpNetworkAddress,
	]
	default_interface = IIpNetworkAddress

class IpNetworkAddressList(CoClassBaseClass): # A CoClass
	# IpNetworkAddressList Class
	CLSID = IID('{861C0BCA-45BC-4A0F-9257-F128A93790BF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IIpNetworkAddressList,
	]
	default_interface = IIpNetworkAddressList

class IpSetting(CoClassBaseClass): # A CoClass
	# IpSetting Class
	CLSID = IID('{E995CBE7-526C-464D-83F7-F72F8D08B8B1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IIpSetting,
	]
	default_interface = IIpSetting

class LinProtocolVersion(CoClassBaseClass): # A CoClass
	# LinProtocolVersion Class
	CLSID = IID('{63AE269A-DC8F-4655-B6B8-080ED17AE91A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILinProtocolVersion,
	]
	default_interface = ILinProtocolVersion

class LinSlaveConformanceTester(CoClassBaseClass): # A CoClass
	# ConformanceTester Class
	CLSID = IID('{7F029E34-1167-49E7-8859-193BDD1900C5}')
	coclass_sources = [
		_ITSTestModuleEvents,
	]
	default_source = _ITSTestModuleEvents
	coclass_interfaces = [
		ILinSlaveConformanceTester3,
	]
	default_interface = ILinSlaveConformanceTester3

class LinSlaveConformanceTesters(CoClassBaseClass): # A CoClass
	# ILinSlaveConformanceTesters Class
	CLSID = IID('{15AA4325-FF94-4B36-A9A1-B872D1BF22C2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILinSlaveConformanceTesters,
	]
	default_interface = ILinSlaveConformanceTesters

class Logging(CoClassBaseClass): # A CoClass
	# Logging Class
	CLSID = IID('{FD859B9C-4E28-11D3-854C-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILogging5,
	]
	default_interface = ILogging5

class LoggingCollection(CoClassBaseClass): # A CoClass
	# LoggingCollection Class
	CLSID = IID('{FD859B9A-4E28-11D3-854C-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoggingCollection2,
	]
	default_interface = ILoggingCollection2

class LoggingFileNameOptions(CoClassBaseClass): # A CoClass
	# LoggingFileNameOptions Class
	CLSID = IID('{DD4129B5-8CBD-4A93-A6B3-A85DB99533E8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoggingFileNameOptions,
	]
	default_interface = ILoggingFileNameOptions

class LoggingFilter(CoClassBaseClass): # A CoClass
	# LoggingFilter Class
	CLSID = IID('{948BA572-6E11-4C3A-A88E-8AE183BF76C4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ILoggingFilter,
	]
	default_interface = ILoggingFilter

class MOSTBusStatistic(CoClassBaseClass): # A CoClass
	# MOSTBusStatistic Class
	CLSID = IID('{A7566B45-D7E8-11D3-85EE-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMOSTBusStatistic,
	]
	default_interface = IMOSTBusStatistic

class Macro(CoClassBaseClass): # A CoClass
	# Macro Class
	CLSID = IID('{044D15FF-F799-4964-90C9-05C94E7991B2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMacro,
	]
	default_interface = IMacro

class MacroSetup(CoClassBaseClass): # A CoClass
	# MacroSetup Class
	CLSID = IID('{7D7AA38C-5FFA-45B6-A511-7110E68E0C6A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMacroSetup,
	]
	default_interface = IMacroSetup

class Macros(CoClassBaseClass): # A CoClass
	# Macros Class
	CLSID = IID('{E4B3EC09-AD48-43D5-8B50-3137F9933B2E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMacros,
	]
	default_interface = IMacros

class McCANSettings(CoClassBaseClass): # A CoClass
	# McCANSettings Class
	CLSID = IID('{F63D68FE-9255-40DF-A3F9-6E347A42BFC5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcCANSettings2,
	]
	default_interface = IMcCANSettings2

class McConfiguredSignal(CoClassBaseClass): # A CoClass
	# McConfiguredSignal Class
	CLSID = IID('{F22E1DC6-E6A4-4392-B1F7-F8B613575E23}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcConfiguredSignal,
	]
	default_interface = IMcConfiguredSignal

class McConfiguredSignals(CoClassBaseClass): # A CoClass
	# McConfiguredSignals Class
	CLSID = IID('{16FD50D3-D638-41CE-A7EB-7CC94BCE6887}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcConfiguredSignals,
	]
	default_interface = IMcConfiguredSignals

class McDatabaseSignal(CoClassBaseClass): # A CoClass
	# McDatabaseSignal Class
	CLSID = IID('{67812C38-1688-4651-8AAB-5DC651048E74}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcDatabaseSignal,
	]
	default_interface = IMcDatabaseSignal

class McDatabaseSignals(CoClassBaseClass): # A CoClass
	# McDatabaseSignals Class
	CLSID = IID('{7095B02E-FAC2-4746-88C0-60BCE901B808}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcDatabaseSignals,
	]
	default_interface = IMcDatabaseSignals

class McECU(CoClassBaseClass): # A CoClass
	# McECU Class
	CLSID = IID('{97E18ED8-FFAF-4CAF-A85F-43375E0EA4DE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcECU6,
	]
	default_interface = IMcECU6

class McECUs(CoClassBaseClass): # A CoClass
	# McECUs Class
	CLSID = IID('{076B5716-A5ED-4BD2-891A-E365411BF3DC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcECUs1,
	]
	default_interface = IMcECUs1

class McEthernetSettings(CoClassBaseClass): # A CoClass
	# McEthernetSettings Class
	CLSID = IID('{0F4C589B-ED4C-4FA6-BBB6-53E20E807207}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcEthernetSettings,
	]
	default_interface = IMcEthernetSettings

class McFlexRaySettings(CoClassBaseClass): # A CoClass
	# McFlexRaySettings Class
	CLSID = IID('{02FCFE42-E542-4BEC-8D16-F024B05C9A7B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcFlexRaySettings1,
	]
	default_interface = IMcFlexRaySettings1

class McLINSettings(CoClassBaseClass): # A CoClass
	# McLINSettings Class
	CLSID = IID('{AB1EEE97-FAE1-4762-AC91-DC5266B04946}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcLINSettings,
	]
	default_interface = IMcLINSettings

class McMeasurementGroup(CoClassBaseClass): # A CoClass
	# McMeasurementGroup Class
	CLSID = IID('{82B94993-4095-4C8E-99E0-72D0CFD100F9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcMeasurementGroup1,
	]
	default_interface = IMcMeasurementGroup1

class McMeasurementGroups(CoClassBaseClass): # A CoClass
	# McMeasurementGroups Class
	CLSID = IID('{8F2884CA-69EB-4102-983C-E6E5C2B387A3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcMeasurementGroups,
	]
	default_interface = IMcMeasurementGroups

class McParameter(CoClassBaseClass): # A CoClass
	# McParameter Class
	CLSID = IID('{9D815F19-D88D-4F34-9F49-D7DA65D7298C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcParameter,
	]
	default_interface = IMcParameter

class McParameters(CoClassBaseClass): # A CoClass
	# McParameters Class
	CLSID = IID('{1895FF43-EFA7-4DCB-9E51-FAFFE6B60CAA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMcParameters,
	]
	default_interface = IMcParameters

class Measurement(CoClassBaseClass): # A CoClass
	# Measurement Class
	CLSID = IID('{CD866FB6-44BF-11D3-8538-00105A3E017B}')
	coclass_sources = [
		_IMeasurementEvents,
	]
	default_source = _IMeasurementEvents
	coclass_interfaces = [
		IMeasurement5,
	]
	default_interface = IMeasurement5

class MeasurementSetup(CoClassBaseClass): # A CoClass
	# MeasurementSetup Class
	CLSID = IID('{4846181A-4502-11D3-8539-00105A3E017B}')
	coclass_sources = [
		_IMeasurementSetupEvents,
	]
	default_source = _IMeasurementSetupEvents
	coclass_interfaces = [
		IMeasurementSetup8,
	]
	default_interface = IMeasurementSetup8

class Message(CoClassBaseClass): # A CoClass
	# Message Class
	CLSID = IID('{7AAAC432-B249-49E7-BD53-C397334DB8A3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMessage2,
	]
	default_interface = IMessage2

class Messages(CoClassBaseClass): # A CoClass
	# Messages Class
	CLSID = IID('{6AE9A276-8F06-4DD6-ACB9-59FB2DA16E50}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMessages,
	]
	default_interface = IMessages

class Module(CoClassBaseClass): # A CoClass
	# Module Class
	CLSID = IID('{79ACC0C0-2091-4D13-BFAE-650FF6F15E60}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IModule2,
	]
	default_interface = IModule2

class Modules(CoClassBaseClass): # A CoClass
	# Modules Class
	CLSID = IID('{1DB49512-0FB1-4B48-B8AD-EB0647121FC6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IModules,
	]
	default_interface = IModules

class MostApplicationFilter(CoClassBaseClass): # A CoClass
	# MostApplicationFilter Class
	CLSID = IID('{8DC32A61-B317-4A52-A285-AC90B9F02367}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMostApplicationFilter,
	]
	default_interface = IMostApplicationFilter

class MostDisassembler(CoClassBaseClass): # A CoClass
	# MostDisassembler Class
	CLSID = IID('{C0921F97-0A08-477E-B383-D43BA8AEA47E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMostDisassembler,
	]
	default_interface = IMostDisassembler

class MostNetworkInterface(CoClassBaseClass): # A CoClass
	# MostNetworkInterface Class
	CLSID = IID('{1465BF57-23AD-4253-A4E9-52F615FAC47D}')
	coclass_sources = [
		_IMostNetworkInterfaceEvents,
	]
	default_source = _IMostNetworkInterfaceEvents
	coclass_interfaces = [
		IMostNetworkInterface2,
	]
	default_interface = IMostNetworkInterface2

class Namespace(CoClassBaseClass): # A CoClass
	# Namespace Class
	CLSID = IID('{A76DB45F-6BBD-46CD-9B92-4AE56C6AE44F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INamespace3,
	]
	default_interface = INamespace3

class Namespaces(CoClassBaseClass): # A CoClass
	# Namespaces Class
	CLSID = IID('{DD6D4307-85D2-4869-84F8-72DE34DDFBC8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INamespaces2,
	]
	default_interface = INamespaces2

class Network(CoClassBaseClass): # A CoClass
	# Network Class
	CLSID = IID('{1B1447DB-1D6C-4637-B985-35FB7381960C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INetwork2,
	]
	default_interface = INetwork2

class NetworkInterface(CoClassBaseClass): # A CoClass
	# NetworkInterface Class
	CLSID = IID('{5F8F2157-19DA-4120-8847-7B93520F5584}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INetworkInterface,
	]
	default_interface = INetworkInterface

class NetworkInterfaces(CoClassBaseClass): # A CoClass
	# NetworkInterfaces Class
	CLSID = IID('{D6ABB000-1FE9-464B-A7BB-2C8BDC2155AC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INetworkInterfaces,
	]
	default_interface = INetworkInterfaces

class Networks(CoClassBaseClass): # A CoClass
	# Networks Class
	CLSID = IID('{C4D6EC2F-9E5B-46B7-9E29-543F160CCEA2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INetworks,
	]
	default_interface = INetworks

class Node(CoClassBaseClass): # A CoClass
	# Node Class
	CLSID = IID('{FD96E0A3-BE9F-4B65-8619-D839ABA29CAB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INode8,
	]
	default_interface = INode8

class Nodes(CoClassBaseClass): # A CoClass
	# Nodes Class
	CLSID = IID('{9E2F76E4-D239-11D3-85E6-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		INodes2,
	]
	default_interface = INodes2

class OfflineGroup(CoClassBaseClass): # A CoClass
	# OfflineGroup Class
	CLSID = IID('{E27D9B1D-5DFD-4922-9DB8-50BC07867F3A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineGroup2,
	]
	default_interface = IOfflineGroup2

class OfflineGroups(CoClassBaseClass): # A CoClass
	# OfflineGroups Class
	CLSID = IID('{71845BBF-0E3B-450E-B95C-A0074B19761D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineGroups,
	]
	default_interface = IOfflineGroups

class OfflineImageSequence(CoClassBaseClass): # A CoClass
	# OfflineImageSequence Class
	CLSID = IID('{1B5B551E-1260-4A63-B956-AD554A1DC0B0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineImageSequence,
	]
	default_interface = IOfflineImageSequence

class OfflineImageSequences(CoClassBaseClass): # A CoClass
	# OfflineImageSequences Class
	CLSID = IID('{2EFFFDB9-5ADE-4843-A5C7-F7CB7B9D34FF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineImageSequences,
	]
	default_interface = IOfflineImageSequences

class OfflineLogFile(CoClassBaseClass): # A CoClass
	# OfflineLogFile Class
	CLSID = IID('{238A7264-980F-44EC-B8C5-F81777C5E93F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineLogFile2,
	]
	default_interface = IOfflineLogFile2

class OfflineLogFiles(CoClassBaseClass): # A CoClass
	# OfflineLogFiles Class
	CLSID = IID('{D5F7A3F3-C1C6-4372-9B1E-81CFC3ACF408}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineLogFiles,
	]
	default_interface = IOfflineLogFiles

class OfflineSource(CoClassBaseClass): # A CoClass
	# OfflineSource Class
	CLSID = IID('{D180177F-4F3F-4B02-A3D2-990A975BABB1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineSource5,
	]
	default_interface = IOfflineSource5

class OfflineSourceExes(CoClassBaseClass): # A CoClass
	# OfflineSourceExes Class
	CLSID = IID('{79708026-C765-44D5-B633-9ACF8DBF8C47}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineSourceExes,
	]
	default_interface = IOfflineSourceExes

class OfflineTargets(CoClassBaseClass): # A CoClass
	# OfflineTargets Class
	CLSID = IID('{DFB1D3D7-D0B8-4C5C-BE31-01A9BB3016FD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineTargets,
	]
	default_interface = IOfflineTargets

class OfflineVideo(CoClassBaseClass): # A CoClass
	# OfflineVideo Class
	CLSID = IID('{D92BE9B6-DEED-45FC-9D6F-8FC806C052D8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineVideo,
	]
	default_interface = IOfflineVideo

class OfflineVideos(CoClassBaseClass): # A CoClass
	# OfflineVideos Class
	CLSID = IID('{F5BBD2E5-DA95-42DC-8C34-09D90EF1C8CF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOfflineVideos,
	]
	default_interface = IOfflineVideos

class OpenConfigurationResult(CoClassBaseClass): # A CoClass
	# OpenConfigurationResult Class
	CLSID = IID('{18584844-AFCE-451F-A155-CCA1CED12B15}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IOpenConfigurationResult,
	]
	default_interface = IOpenConfigurationResult

class Panel(CoClassBaseClass): # A CoClass
	# Panel Class
	CLSID = IID('{2FCA3566-CDA6-11D3-85E1-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPanel2,
	]
	default_interface = IPanel2

class PanelSetup(CoClassBaseClass): # A CoClass
	# PanelSetup Class
	CLSID = IID('{2FCA3564-CDA6-11D3-85E1-00105A3E017B}')
	coclass_sources = [
		_IPanelSetupEvents,
	]
	default_source = _IPanelSetupEvents
	coclass_interfaces = [
		IPanelSetup3,
	]
	default_interface = IPanelSetup3

class Panels(CoClassBaseClass): # A CoClass
	# Panels Class
	CLSID = IID('{2FCA3563-CDA6-11D3-85E1-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPanels,
	]
	default_interface = IPanels

class Participant(CoClassBaseClass): # A CoClass
	# Participant Class
	CLSID = IID('{DD8CA9BA-EE85-481B-B107-FB7A46680151}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IParticipant,
	]
	default_interface = IParticipant

class Participants(CoClassBaseClass): # A CoClass
	# Participants Class
	CLSID = IID('{44C130F9-7508-4464-AE48-37FA7BAD6613}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IParticipants,
	]
	default_interface = IParticipants

class Performance(CoClassBaseClass): # A CoClass
	# Performance Class
	CLSID = IID('{DE9CCB1F-FE4A-43F4-942D-C27013A7B397}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPerformance,
	]
	default_interface = IPerformance

class Port(CoClassBaseClass): # A CoClass
	# Port Class
	CLSID = IID('{836A0C24-4BBD-4D44-9CEC-A715FFF9CA82}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPort2,
	]
	default_interface = IPort2

class Ports(CoClassBaseClass): # A CoClass
	# Ports Class
	CLSID = IID('{5C63E7EC-50FD-4844-A457-C08184E33DD5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPorts2,
	]
	default_interface = IPorts2

class Reference(CoClassBaseClass): # A CoClass
	# Reference Class
	CLSID = IID('{C5B2393E-46BC-410A-8533-9BEC023239BE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IReference,
	]
	default_interface = IReference

class References(CoClassBaseClass): # A CoClass
	# References Class
	CLSID = IID('{5608FED6-E922-4DED-80BF-027A6E0EB4FE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IReferences,
	]
	default_interface = IReferences

class ReplayBlock(CoClassBaseClass): # A CoClass
	# ReplayBlock Class
	CLSID = IID('{563ED105-7544-11D5-87D4-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IReplayBlock2,
	]
	default_interface = IReplayBlock2

class ReplayCollection(CoClassBaseClass): # A CoClass
	# ReplayCollection Class
	CLSID = IID('{75718C16-7540-11D5-87D4-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IReplayCollection,
	]
	default_interface = IReplayCollection

class ReportFilterSettings(CoClassBaseClass): # A CoClass
	# ReportFilterSettings Class
	CLSID = IID('{983EBD87-85F5-43D4-80AC-4874EC515083}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IReportFilterSettings2,
	]
	default_interface = IReportFilterSettings2

class SendNode(CoClassBaseClass): # A CoClass
	# SendNode Class
	CLSID = IID('{F344C7F7-A4A2-4FC0-BD13-C6F6050D3426}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISendNode,
	]
	default_interface = ISendNode

class SendNodes(CoClassBaseClass): # A CoClass
	# SendNodes Class
	CLSID = IID('{40A12CBD-AB8B-427F-A304-419DB8CF28E2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISendNodes,
	]
	default_interface = ISendNodes

class SharedMemory(CoClassBaseClass): # A CoClass
	# SharedMemory Class
	CLSID = IID('{D3711CB7-3059-4EFC-B7CD-B7898336598D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISharedMemory8,
	]
	default_interface = ISharedMemory8

class SharedMemorySetup(CoClassBaseClass): # A CoClass
	# SharedMemorySetup Class
	CLSID = IID('{9A0820B4-F046-4F26-9B53-704B87787A96}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISharedMemorySetup3,
	]
	default_interface = ISharedMemorySetup3

class Signal(CoClassBaseClass): # A CoClass
	# Signal Class
	CLSID = IID('{884DBC05-7A76-11D3-8571-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISignal4,
	]
	default_interface = ISignal4

class Signals(CoClassBaseClass): # A CoClass
	# Signals Class
	CLSID = IID('{F7882897-2BFA-45FE-BE03-29B52EC09CB0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISignals2,
	]
	default_interface = ISignals2

class Simulation(CoClassBaseClass): # A CoClass
	# Simulation Class
	CLSID = IID('{CA5C18B0-A1B0-11D3-85B7-00105A3E017B}')
	coclass_sources = [
		_ISimulationEvents,
	]
	default_source = _ISimulationEvents
	coclass_interfaces = [
		ISimulationVB,
	]
	default_interface = ISimulationVB

class SimulationSetup(CoClassBaseClass): # A CoClass
	# SimulationSetup Class
	CLSID = IID('{9E2F76E2-D239-11D3-85E6-00105A3E017B}')
	coclass_sources = [
		_ISimulationSetupEvents,
	]
	default_source = _ISimulationSetupEvents
	coclass_interfaces = [
		ISimulationSetup2,
	]
	default_interface = ISimulationSetup2

class SingleFileDataSource(CoClassBaseClass): # A CoClass
	# SingleFileDataSource Class
	CLSID = IID('{EF5B78B7-A7EF-46AE-909E-A97FAE458FB9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISingleFileDataSource,
	]
	default_interface = ISingleFileDataSource

class Snippet(CoClassBaseClass): # A CoClass
	# SnippetFile Class
	CLSID = IID('{ABBDCC90-DDEA-43D9-B467-8268E3C151C6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISnippet,
	]
	default_interface = ISnippet

class SnippetFile(CoClassBaseClass): # A CoClass
	# SnippetFile Class
	CLSID = IID('{36A3BDB7-640A-442E-A003-1F2955B4C283}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISnippetFile,
	]
	default_interface = ISnippetFile

class SnippetFiles(CoClassBaseClass): # A CoClass
	# SnippetFiles Class
	CLSID = IID('{E9A42FF9-261E-4362-9A67-91F4A401F835}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISnippetFiles,
	]
	default_interface = ISnippetFiles

class SnippetSetup(CoClassBaseClass): # A CoClass
	# SnippetSetup Class
	CLSID = IID('{DBBFCDE8-7397-4892-97C7-B16A61D1F9D0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISnippetSetup,
	]
	default_interface = ISnippetSetup

class Snippets(CoClassBaseClass): # A CoClass
	# Snippets Class
	CLSID = IID('{35EB8527-B815-4EA3-823A-69BDB263AA95}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISnippets,
	]
	default_interface = ISnippets

class StandaloneMode(CoClassBaseClass): # A CoClass
	# StandaloneMode Class
	CLSID = IID('{DC2B1DF0-A135-4EFF-9E92-70CE86745D5D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IStandaloneMode,
	]
	default_interface = IStandaloneMode

class StartValueList(CoClassBaseClass): # A CoClass
	# StartValueList Class
	CLSID = IID('{2B6E6A79-8C83-4CAB-837C-D218FCB4F75B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IStartValueList,
	]
	default_interface = IStartValueList

class SymbolMappings(CoClassBaseClass): # A CoClass
	# SymbolMappings Class
	CLSID = IID('{321EF8A7-4CE1-4369-9506-ACC3CF936586}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISymbolMappings,
	]
	default_interface = ISymbolMappings

class System(CoClassBaseClass): # A CoClass
	# System Class
	CLSID = IID('{0EC3B32A-A27C-4165-B5AD-7FAECBA029C5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ISystem3,
	]
	default_interface = ISystem3

class TSTestModule(CoClassBaseClass): # A CoClass
	# TestModule Class
	CLSID = IID('{6A5391A1-8951-425F-9191-C4884FA3A27D}')
	coclass_sources = [
		_ITSTestModuleEvents,
	]
	default_source = _ITSTestModuleEvents
	coclass_interfaces = [
		ITSTestModule6,
	]
	default_interface = ITSTestModule6

class TcpIpAdapter(CoClassBaseClass): # A CoClass
	# TcpIpAdapter Class
	CLSID = IID('{C023D52A-E45A-49AA-B6A0-40A654A33592}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITcpIpAdapter,
	]
	default_interface = ITcpIpAdapter

class TcpIpAdapters(CoClassBaseClass): # A CoClass
	# TcpIpAdapters Class
	CLSID = IID('{BA3A99FC-F8C5-44E1-ABC9-0060090ED9BD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITcpIpAdapters,
	]
	default_interface = ITcpIpAdapters

class TcpIpStackSetting(CoClassBaseClass): # A CoClass
	# TcpIpStackSetting Class
	CLSID = IID('{24EC9175-1C91-493D-96FF-89DC8E1A1543}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITcpIpStackSetting,
	]
	default_interface = ITcpIpStackSetting

class TestCase(CoClassBaseClass): # A CoClass
	# TestCase Class
	CLSID = IID('{B69A3E69-6299-4EAA-BE75-E32DF48D2C87}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestCase,
	]
	default_interface = ITestCase

class TestConfiguration(CoClassBaseClass): # A CoClass
	# TestConfigurations Class
	CLSID = IID('{B00A2245-2B50-408B-B2A9-597460111486}')
	coclass_sources = [
		_ITestConfigurationEvents,
	]
	default_source = _ITestConfigurationEvents
	coclass_interfaces = [
		ITestTreeElement2,
		ITestConfiguration7,
	]
	default_interface = ITestConfiguration7

class TestConfigurationReport(CoClassBaseClass): # A CoClass
	# TestConfigurationReport Class
	CLSID = IID('{AB1EE4BF-EB3E-4AF0-96AC-4C4050633EA3}')
	coclass_sources = [
		_ITestConfigurationReportEvents,
	]
	default_source = _ITestConfigurationReportEvents
	coclass_interfaces = [
		ITestConfigurationReport,
		ITestConfigurationReport4,
	]
	default_interface = ITestConfigurationReport4

class TestConfigurationReportFilterSettings(CoClassBaseClass): # A CoClass
	# TestConfigurationReportFilterSettings Class
	CLSID = IID('{6DFAB307-89D8-4344-BB5B-BF40EEDFAC48}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestConfigurationReportFilterSettings,
	]
	default_interface = ITestConfigurationReportFilterSettings

class TestConfigurationSettings(CoClassBaseClass): # A CoClass
	# TestConfigurationSettings Class
	CLSID = IID('{242CE8FB-6C01-456C-BAF6-38AFA74F7843}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestConfigurationSettings4,
	]
	default_interface = ITestConfigurationSettings4

class TestConfigurations(CoClassBaseClass): # A CoClass
	# TestConfigurations Class
	CLSID = IID('{CC053D94-6CC0-481A-BACA-EF0B0BC33FFD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestConfigurations,
	]
	default_interface = ITestConfigurations

class TestEnvironment(CoClassBaseClass): # A CoClass
	# TestEnvironment Class
	CLSID = IID('{A932C329-690A-407B-AEEF-5C86183F5F01}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestEnvironment2,
	]
	default_interface = ITestEnvironment2

class TestEnvironments(CoClassBaseClass): # A CoClass
	# TestEnvironments Class
	CLSID = IID('{86FD0C15-C362-44A6-8B42-09C124F40767}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestEnvironments,
	]
	default_interface = ITestEnvironments

class TestGroup(CoClassBaseClass): # A CoClass
	# TestGroup Class
	CLSID = IID('{70E92C02-05B9-47AA-B8DB-2925F8CC4A67}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestGroup,
	]
	default_interface = ITestGroup

class TestLibraries(CoClassBaseClass): # A CoClass
	# TestLibraries Class
	CLSID = IID('{406036D7-B464-42D0-BDCE-11D3A9B3D25A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestLibraries,
	]
	default_interface = ITestLibraries

class TestLibrary(CoClassBaseClass): # A CoClass
	# TestLibrary Class
	CLSID = IID('{61567786-D67A-4E65-82B3-BADD16E106AA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestLibrary,
	]
	default_interface = ITestLibrary

class TestModules(CoClassBaseClass): # A CoClass
	# ITestModules Class
	CLSID = IID('{5326BCE6-000B-4C65-BF9E-E017EFAA7DE9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestModules2,
	]
	default_interface = ITestModules2

class TestReport(CoClassBaseClass): # A CoClass
	# TestReport Class
	CLSID = IID('{FF4EDCF9-6020-410C-8A41-915499F8818E}')
	coclass_sources = [
		_ITestReportEvents,
	]
	default_source = _ITestReportEvents
	coclass_interfaces = [
		ITestReport5,
	]
	default_interface = ITestReport5

class TestSequence(CoClassBaseClass): # A CoClass
	# TestSequence Class
	CLSID = IID('{FF43D776-905D-4814-9CFE-5317E09DBED1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestSequence,
	]
	default_interface = ITestSequence

class TestSequenceItem(CoClassBaseClass): # A CoClass
	# TestSequenceItem Class
	CLSID = IID('{FB1BAAE6-2667-4177-BFAC-4AB26F3CBF47}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestSequenceItem,
	]
	default_interface = ITestSequenceItem

class TestSetup(CoClassBaseClass): # A CoClass
	# TestSetup Class
	CLSID = IID('{8A1857E6-0CFF-49FD-ACF3-F5A6014D6BDD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestSetup,
	]
	default_interface = ITestSetup

class TestSetupFolder(CoClassBaseClass): # A CoClass
	# TestSetupFolder Class
	CLSID = IID('{490B8989-674D-46BF-9D6E-6B093C138377}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestSetupFolder,
	]
	default_interface = ITestSetupFolder

class TestSetupFolderExt(CoClassBaseClass): # A CoClass
	# TestSetupFolderExt Class
	CLSID = IID('{3E1FBDF3-9E7A-4121-B50B-A0D04D77A47D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestSetupFolderExt,
	]
	default_interface = ITestSetupFolderExt

class TestSetupFolders(CoClassBaseClass): # A CoClass
	# ITestSetupFolders Class
	CLSID = IID('{76B814A5-CD92-4D68-B388-8FB1E24F4363}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestSetupFolders,
	]
	default_interface = ITestSetupFolders

class TestSetupItem(CoClassBaseClass): # A CoClass
	# TestSetupItem Class
	CLSID = IID('{A3CBCE2E-A397-4464-8AA1-934255050384}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestSetupItem,
	]
	default_interface = ITestSetupItem

class TestSetupItems(CoClassBaseClass): # A CoClass
	# TestSetupItems Class
	CLSID = IID('{B0DDEC6D-84D4-4576-A222-021101CEEEFE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestSetupItems,
	]
	default_interface = ITestSetupItems

class TestTreeElement(CoClassBaseClass): # A CoClass
	# TestTreeElement Class
	CLSID = IID('{7B0669D3-5B36-43F2-B513-AC08AE6093E0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestTreeElement2,
	]
	default_interface = ITestTreeElement2

class TestTreeElements(CoClassBaseClass): # A CoClass
	# TestTreeElements Class
	CLSID = IID('{2A3433D9-C68B-41DA-BBFF-BD808F501D06}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestTreeElements,
	]
	default_interface = ITestTreeElements

class TestUnit(CoClassBaseClass): # A CoClass
	# TestUnit Class
	CLSID = IID('{B59ED397-7804-4FBB-95C1-87FF759E760F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestUnit,
		ITestTreeElement2,
		ITestUnit3,
	]
	default_interface = ITestUnit3

class TestUnitReport(CoClassBaseClass): # A CoClass
	# TestUnitReport Class
	CLSID = IID('{C0A2A4FC-26B3-431E-BA90-3D725012FB04}')
	coclass_sources = [
		_ITestUnitReportEvents,
	]
	default_source = _ITestUnitReportEvents
	coclass_interfaces = [
		ITestUnitReport,
		ITestUnitReport3,
	]
	default_interface = ITestUnitReport3

class TestUnits(CoClassBaseClass): # A CoClass
	# TestUnits Class
	CLSID = IID('{B66F5723-54E6-4D53-89E1-CA25B0D1B5B8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITestUnits2,
	]
	default_interface = ITestUnits2

class TesterSettings(CoClassBaseClass): # A CoClass
	# TesterSettings Class
	CLSID = IID('{A377B29C-B668-44E6-9D2E-B7FC51C0A6D2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITesterSettings,
	]
	default_interface = ITesterSettings

class TimeSection(CoClassBaseClass): # A CoClass
	# TimeSection Class
	CLSID = IID('{E0BFE606-E6A6-4797-AA5E-FF4B38F927D8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITimeSection,
	]
	default_interface = ITimeSection

class TimeSettings(CoClassBaseClass): # A CoClass
	# TimeSettings Class
	CLSID = IID('{2E3E2DB6-AA45-4C2D-BC9B-04179D23092F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITimeSettings,
	]
	default_interface = ITimeSettings

class Trigger(CoClassBaseClass): # A CoClass
	# Trigger Class
	CLSID = IID('{83844F35-B2F1-4692-AA7C-48AE8DD6ACCB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		ITrigger,
	]
	default_interface = ITrigger

class UI(CoClassBaseClass): # A CoClass
	# UI Class
	CLSID = IID('{884DBC01-7A76-11D3-8571-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IUI2,
	]
	default_interface = IUI2

class UserFile(CoClassBaseClass): # A CoClass
	# UserFile Class
	CLSID = IID('{8E2AE92D-9FD5-42DA-A902-4E66DE545BFC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IUserFile,
	]
	default_interface = IUserFile

class UserFiles(CoClassBaseClass): # A CoClass
	# UserFiles Class
	CLSID = IID('{63BDF234-52E1-45C9-BBEB-AD6220B21ACA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IUserFiles,
	]
	default_interface = IUserFiles

class VANBusStatistic(CoClassBaseClass): # A CoClass
	# VANBusStatistic Class
	CLSID = IID('{A7566B43-D7E8-11D3-85EE-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVANBusStatistic,
	]
	default_interface = IVANBusStatistic

class Variable(CoClassBaseClass): # A CoClass
	# Variable Class
	CLSID = IID('{FB1A8BBE-584F-4669-B927-3567D70FF952}')
	coclass_sources = [
		_IVariableEvents,
	]
	default_source = _IVariableEvents
	coclass_interfaces = [
		IVariable11,
	]
	default_interface = IVariable11

class VariableArray(CoClassBaseClass): # A CoClass
	# VariableArray Class
	CLSID = IID('{51315E01-B623-4484-9F05-6D20C02B7799}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVariableArray,
	]
	default_interface = IVariableArray

class Variables(CoClassBaseClass): # A CoClass
	# Variables Class
	CLSID = IID('{A3D77EE1-0B95-4AEC-8D67-072E9657C7D3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVariables3,
	]
	default_interface = IVariables3

class VariablesFile(CoClassBaseClass): # A CoClass
	# VariablesFile Class
	CLSID = IID('{A35AC08F-4B92-470A-A2C1-7C1C75319964}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVariablesFile,
	]
	default_interface = IVariablesFile

class VariablesFiles(CoClassBaseClass): # A CoClass
	# VariablesFiles Class
	CLSID = IID('{1F59FD71-7B7C-4D7E-83F5-8E995EBB5508}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVariablesFiles,
	]
	default_interface = IVariablesFiles

class VariantProfileNames(CoClassBaseClass): # A CoClass
	# VariantProfileNames Class
	CLSID = IID('{E73129B3-B05A-419A-B00F-118AA3E0E38F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVariantProfileNames,
	]
	default_interface = IVariantProfileNames

class Version(CoClassBaseClass): # A CoClass
	# Version Class
	CLSID = IID('{1B6FDCD2-317D-4D78-BF4B-0BD9E2A91840}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVersion2,
	]
	default_interface = IVersion2

class VideoWindow(CoClassBaseClass): # A CoClass
	# VideoWindow Class
	CLSID = IID('{5BAE3260-AD4F-45F9-A110-F64CADC955AA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVideoWindow,
	]
	default_interface = IVideoWindow

class VideoWindows(CoClassBaseClass): # A CoClass
	# VideoWindows Class
	CLSID = IID('{AEAEF5EF-E37E-4CD1-A65E-27C5EC8C903A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVideoWindows,
	]
	default_interface = IVideoWindows

class ViewSynchronization(CoClassBaseClass): # A CoClass
	# ViewSynchronization Class
	CLSID = IID('{6F214176-B587-49D1-826F-0776E127F1CA}')
	coclass_sources = [
		_IViewSynchronizationEvents,
	]
	default_source = _IViewSynchronizationEvents
	coclass_interfaces = [
		IViewSynchronization2,
	]
	default_interface = IViewSynchronization2

class Vlan(CoClassBaseClass): # A CoClass
	# Vlan Class
	CLSID = IID('{EE0F1462-1359-4FBD-933F-3912CD5865E6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVlan,
	]
	default_interface = IVlan

class Vlans(CoClassBaseClass): # A CoClass
	# Vlans Class
	CLSID = IID('{145F2519-541A-407E-85A9-B6F18AECE6C4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVlans,
	]
	default_interface = IVlans

class VttSutImportResult(CoClassBaseClass): # A CoClass
	# VttSutImportResult Class
	CLSID = IID('{0C44B6A3-FEB2-4913-AC3C-E8CF54ACA3C2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IVttSutImportResult,
	]
	default_interface = IVttSutImportResult

class Write(CoClassBaseClass): # A CoClass
	# Write Class
	CLSID = IID('{97FBEA51-A327-11D3-85BA-00105A3E017B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IWrite3,
	]
	default_interface = IWrite3

class XCPSetup(CoClassBaseClass): # A CoClass
	# XCPSetup Class
	CLSID = IID('{665DC99E-CAD9-49A0-A678-BECBC71DD93A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IXCPSetup,
	]
	default_interface = IXCPSetup

IARXMLImportParameters_vtables_dispatch_ = 1
IARXMLImportParameters_vtables_ = [
	(( 'LayerToImport' , 'pRetVal' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LayerToImport' , 'pRetVal' , ), 100, (100, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ComDataTypesNamespace' , 'pRetVal' , ), 101, (101, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ComDataTypesNamespace' , 'pRetVal' , ), 101, (101, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ComCommunicationObjectsNamespace' , 'pRetVal' , ), 102, (102, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ComCommunicationObjectsNamespace' , 'pRetVal' , ), 102, (102, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SwcDataTypesNamespace' , 'pRetVal' , ), 103, (103, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SwcDataTypesNamespace' , 'pRetVal' , ), 103, (103, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SwcCommunicationObjectsNamespace' , 'pRetVal' , ), 104, (104, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SwcCommunicationObjectsNamespace' , 'pRetVal' , ), 104, (104, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'TimingsNamespace' , 'pRetVal' , ), 105, (105, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'TimingsNamespace' , 'pRetVal' , ), 105, (105, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ParticipantsNamespace' , 'pRetVal' , ), 106, (106, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ParticipantsNamespace' , 'pRetVal' , ), 106, (106, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BindingsNamespace' , 'pRetVal' , ), 107, (107, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BindingsNamespace' , 'pRetVal' , ), 107, (107, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAdditionalDescription_vtables_dispatch_ = 1
IAdditionalDescription_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DiagVariants' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Qualifier' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FilePath' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Variant' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Variant' , 'pVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Language' , 'pVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Language' , 'pVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MasterDescription' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'OpenWindows' , 'windows' , ), 9, (9, (), [ (3, 49, '255', None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'CloseWindows' , 'windows' , ), 10, (10, (), [ (3, 49, '255', None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IAdditionalDescriptions_vtables_dispatch_ = 1
IAdditionalDescriptions_vtables_ = [
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0B764757-2F83-4493-A185-E4AA29BD8EEF}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FilePath' , 'ecuIdentifier' , 'pVal' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (8, 17, None, None) , (16393, 10, None, "IID('{0B764757-2F83-4493-A185-E4AA29BD8EEF}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IApplication_vtables_dispatch_ = 1
IApplication_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Quit' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'New' , 'autoSave' , 'promptUser' , ), 6, (6, (), [ (11, 17, None, None) , 
			 (11, 17, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Open' , 'config' , 'autoSave' , 'promptUser' , ), 7, (7, (), [ 
			 (8, 1, None, None) , (11, 17, None, None) , (11, 17, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Measurement' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Configuration' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CAPL' , 'pVal' , ), 10, (10, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Environment' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'UI' , 'pVal' , ), 12, (12, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Bus' , 'busTypeParam' , 'pVal' , ), 13, (13, (), [ (8, 17, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Bus' , 'busTypeParam' , 'pVal' , ), 13, (13, (), [ (8, 17, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Simulation' , 'typeParam' , 'pVal' , ), 14, (14, (), [ (8, 17, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Simulation' , 'typeParam' , 'pVal' , ), 14, (14, (), [ (8, 17, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Reserved1' , 'pVal' , ), 15, (15, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Reserved2' , 'pVal' , ), 16, (16, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Reserved3' , 'pVal' , ), 17, (17, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Reserved4' , 'pVal' , ), 18, (18, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Reserved5' , 'pVal' , ), 19, (19, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IApplication10_vtables_dispatch_ = 1
IApplication10_vtables_ = [
	(( 'OpenLink' , 'link' , 'pError' , ), 30, (30, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IApplication2_vtables_dispatch_ = 1
IApplication2_vtables_ = [
	(( 'System' , 'pVal' , ), 21, (21, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IApplication3_vtables_dispatch_ = 1
IApplication3_vtables_ = [
	(( 'Version' , 'pVal' , ), 22, (22, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Networks' , 'typeParam' , 'pVal' , ), 23, (23, (), [ (12, 17, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 1 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Networks' , 'typeParam' , 'pVal' , ), 23, (23, (), [ (12, 17, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 1 , 248 , (3, 0, None, None) , 0 , )),
]

IApplication4_vtables_dispatch_ = 1
IApplication4_vtables_ = [
	(( 'Signals' , 'pVal' , ), 24, (24, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IApplication5_vtables_dispatch_ = 1
IApplication5_vtables_ = [
	(( 'ReleaseDotNetAssemblies' , ), 25, (25, (), [ ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IApplication6_vtables_dispatch_ = 1
IApplication6_vtables_ = [
	(( 'SharedMemorySetup' , 'pVal' , ), 26, (26, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IApplication7_vtables_dispatch_ = 1
IApplication7_vtables_ = [
	(( 'ReloadDotNetAssemblies' , ), 27, (27, (), [ ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IApplication8_vtables_dispatch_ = 1
IApplication8_vtables_ = [
	(( 'Performance' , 'pVal' , ), 28, (28, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IApplication9_vtables_dispatch_ = 1
IApplication9_vtables_ = [
	(( 'ChannelMappingName' , 'pVal' , ), 29, (29, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ChannelMappingName' , 'pVal' , ), 29, (29, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IApplicationModel_vtables_dispatch_ = 1
IApplicationModel_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ApplicationModelFiles' , 'pRetVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{75202966-657C-40F0-942B-036353D2C52D}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Participants' , 'pRetVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{102584C6-E00E-4A63-B2FA-5B79F7DA4DD9}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsActive' , 'pRetVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsActive' , 'pRetVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IApplicationModelFile_vtables_dispatch_ = 1
IApplicationModelFile_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pRetVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pRetVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pRetVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IApplicationModelFiles_vtables_dispatch_ = 1
IApplicationModelFiles_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pRetVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'pIndex' , 'pRetVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pRetVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pApplicationModelFilePath' , 'pRetVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'pIndex' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IApplicationModelSetup_vtables_dispatch_ = 1
IApplicationModelSetup_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ApplicationModels' , 'pRetVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{C9ECF396-A1B4-4FB8-938E-0ED26AD41476}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IApplicationModels_vtables_dispatch_ = 1
IApplicationModels_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pRetVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'pIndex' , 'pRetVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E63A92E2-E07A-4781-9071-FE8071D9E9B7}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pRetVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pApplicationModelFilePath' , 'pRetVal' , ), 4, (4, (), [ (8, 49, "''", None) , 
			 (16393, 10, None, "IID('{E63A92E2-E07A-4781-9071-FE8071D9E9B7}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 32, None, None) , 0 , )),
	(( 'Remove' , 'pIndex' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IApplicationSocket_vtables_dispatch_ = 1
IApplicationSocket_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'BusRegistry' , 'pDataArray' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FBlockList' , 'pDataArray' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IAudioInterface_vtables_dispatch_ = 1
IAudioInterface_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Mute' , 'lineInOut' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Mute' , 'lineInOut' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Volume' , 'lineInOut' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Volume' , 'lineInOut' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ConnectToLabel' , 'lineInOut' , 'connectionLabel' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DisconnectFromLabel' , 'lineInOut' , 'connectionLabel' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IBus_vtables_dispatch_ = 1
IBus_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Baudrate' , 'Channel' , 'Baudrate' , ), 3, (3, (), [ (19, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Baudrate' , 'Channel' , 'Baudrate' , ), 3, (3, (), [ (19, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetSignal' , 'Channel' , 'msgName' , 'signalName' , 'ppSignal' , 
			 ), 4, (4, (), [ (19, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetMessage' , 'Channel' , 'msgName' , 'ppMessage' , ), 5, (5, (), [ 
			 (19, 1, None, None) , (8, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IBus2_vtables_dispatch_ = 1
IBus2_vtables_ = [
	(( 'GetJ1939Signal' , 'Channel' , 'msgName' , 'signalName' , 'srcAddress' , 
			 'dstAddress' , 'ppSignal' , ), 6, (6, (), [ (19, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (17, 1, None, None) , (17, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IBus3_vtables_dispatch_ = 1
IBus3_vtables_ = [
	(( 'Nodes' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Generators' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveGenerators' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ReplayCollection' , 'pVal' , ), 10, (10, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Databases' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Channels' , 'pVal' , ), 12, (12, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IBusStatistics_vtables_dispatch_ = 1
IBusStatistics_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'BusStatistic' , 'busTypeParam' , 'Channel' , 'pVal' , ), 0, (0, (), [ 
			 (3, 1, None, None) , (19, 1, None, None) , (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IBusVB_vtables_dispatch_ = 1
IBusVB_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Baudrate' , 'Channel' , 'Baudrate' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Baudrate' , 'Channel' , 'Baudrate' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetSignal' , 'Channel' , 'msgName' , 'signalName' , 'ppSignal' , 
			 ), 4, (4, (), [ (3, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetMessage' , 'Channel' , 'msgName' , 'ppMessage' , ), 5, (5, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetJ1939Signal' , 'Channel' , 'msgName' , 'signalName' , 'srcAddress' , 
			 'dstAddress' , 'ppSignal' , ), 6, (6, (), [ (3, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (17, 1, None, None) , (17, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Nodes' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Generators' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveGenerators' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ReplayCollection' , 'pVal' , ), 10, (10, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Databases' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Channels' , 'pVal' , ), 12, (12, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IBusVB2_vtables_dispatch_ = 1
IBusVB2_vtables_ = [
	(( 'Active' , 'bActive' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'bActive' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IBusVB3_vtables_dispatch_ = 1
IBusVB3_vtables_ = [
	(( 'SecurityProfile' , 'profileID' , ), 15, (15, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SecurityProfile' , 'profileID' , ), 15, (15, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SecurityActive' , 'bActive' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SecurityActive' , 'bActive' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IBusVB4_vtables_dispatch_ = 1
IBusVB4_vtables_ = [
	(( 'Ports' , 'pVal' , ), 17, (17, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IBusVB5_vtables_dispatch_ = 1
IBusVB5_vtables_ = [
	(( 'PortsOfChannel' , 'Channel' , 'pVal' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IBuses_vtables_dispatch_ = 1
IBuses_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F7D40DFF-E021-46E8-9B7D-6659494332A3}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{F7D40DFF-E021-46E8-9B7D-6659494332A3}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IBuses2_vtables_dispatch_ = 1
IBuses2_vtables_ = [
	(( 'AddWithType' , 'Name' , 'busTypeParam' , 'pVal' , ), 6, (6, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{F7D40DFF-E021-46E8-9B7D-6659494332A3}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ICANBusStatistic_vtables_dispatch_ = 1
ICANBusStatistic_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'BusLoad' , 'pVal' , ), 0, (0, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PeakLoad' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Standard' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'StandardTotal' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'StandardRemote' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'StandardRemoteTotal' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Extended' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedTotal' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedRemote' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedRemoteTotal' , 'pVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Error' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ErrorTotal' , 'pVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Overload' , 'pVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'OverloadTotal' , 'pVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RxErrorCount' , 'pVal' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TxErrorCount' , 'pVal' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ChipState' , 'pVal' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

ICANController_vtables_dispatch_ = 1
ICANController_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Baudrate' , 'Baudrate' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Baudrate' , 'Baudrate' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'BTR0' , 'BTR0' , ), 4, (4, (), [ (16401, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BTR1' , 'BTR1' , ), 5, (5, (), [ (16401, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Samples' , 'Samples' , ), 6, (6, (), [ (16401, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Samples' , 'Samples' , ), 6, (6, (), [ (17, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Acknowlegde' , 'ack' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'Acknowlegde' , 'ack' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
	(( 'OutputControl' , 'Output' , ), 8, (8, (), [ (16401, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'OutputControl' , 'Output' , ), 8, (8, (), [ (17, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Synchronisation' , 'sync' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Synchronisation' , 'sync' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetBTR' , 'BTR0' , 'BTR1' , ), 10, (10, (), [ (17, 1, None, None) , 
			 (17, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'StandardMask' , 'mask' , ), 11, (11, (), [ (16402, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'StandardMask' , 'mask' , ), 11, (11, (), [ (18, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'StandardCode' , 'scode' , ), 12, (12, (), [ (16402, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'StandardCode' , 'scode' , ), 12, (12, (), [ (18, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'StandardBlockAll' , 'block' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'StandardBlockAll' , 'block' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedMask' , 'mask' , ), 14, (14, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedMask' , 'mask' , ), 14, (14, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedCode' , 'xcode' , ), 15, (15, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedCode' , 'xcode' , ), 15, (15, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedBlockAll' , 'block' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ExtendedBlockAll' , 'block' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'TxRequest' , 'TxRequest' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'TxRequest' , 'TxRequest' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'StatisticActive' , 'bActive' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'StatisticActive' , 'bActive' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'StatisticPeriod' , 'period' , ), 19, (19, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'StatisticPeriod' , 'period' , ), 19, (19, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

ICANController2_vtables_dispatch_ = 1
ICANController2_vtables_ = [
	(( 'Acknowledge' , 'ack' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Acknowledge' , 'ack' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

ICANController3_vtables_dispatch_ = 1
ICANController3_vtables_ = [
	(( 'CANSetFDArbPhaseConfig' , 'Baudrate' , 'tseg1' , 'tseg2' , 'sjw' , 
			 'flags' , 'result' , ), 21, (21, (), [ (5, 1, None, None) , (17, 1, None, None) , 
			 (17, 1, None, None) , (17, 1, None, None) , (17, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'CANSetFDDataPhaseConfig' , 'Baudrate' , 'tseg1' , 'tseg2' , 'sjw' , 
			 'flags' , 'result' , ), 22, (22, (), [ (5, 1, None, None) , (17, 1, None, None) , 
			 (17, 1, None, None) , (17, 1, None, None) , (17, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'CANSetConfig' , 'Baudrate' , 'tseg1' , 'tseg2' , 'sjw' , 
			 'sam' , 'flags' , 'result' , ), 23, (23, (), [ (5, 1, None, None) , 
			 (17, 1, None, None) , (17, 1, None, None) , (17, 1, None, None) , (17, 1, None, None) , (17, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

ICANController4_vtables_dispatch_ = 1
ICANController4_vtables_ = [
	(( 'SelfAckEnabled' , 'bActive' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'SelfAckEnabled' , 'bActive' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
]

ICANoe4Server_vtables_dispatch_ = 1
ICANoe4Server_vtables_ = [
	(( 'RTKArchitecture' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RTKArchitecture' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ExportConfiguration' , 'rtcfgPath' , 'ErrorMessage' , 'pVal' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (16392, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

ICANopen_vtables_dispatch_ = 1
ICANopen_vtables_ = [
	(( 'DcfFilePath' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DcfFilePath' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'NodeID' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'NodeID' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ICAPL_vtables_dispatch_ = 1
ICAPL_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetFunction' , 'Name' , 'function' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

ICAPL2_vtables_dispatch_ = 1
ICAPL2_vtables_ = [
	(( 'Compile' , 'FullName' , ), 4, (4, (), [ (8, 17, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

ICAPL3_vtables_dispatch_ = 1
ICAPL3_vtables_ = [
	(( 'CompileResult' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ICAPL4_vtables_dispatch_ = 1
ICAPL4_vtables_ = [
	(( 'InvokeCaplEnvironmentUpdate' , 'pipeSeparatedPaths' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ICAPL5_vtables_dispatch_ = 1
ICAPL5_vtables_ = [
	(( 'InvokeCaplEnvironmentUpdateEx' , 'protocolVersion' , 'instructions' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ICAPLFunction_vtables_dispatch_ = 1
ICAPLFunction_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Call' , 'p1' , 'p2' , 'p3' , 'p4' , 
			 'p5' , 'p6' , 'p7' , 'p8' , 'p9' , 
			 'p10' , 'result' , ), 3, (3, (), [ (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 10 , 72 , (3, 0, None, None) , 0 , )),
]

ICAPLFunction2_vtables_dispatch_ = 1
ICAPLFunction2_vtables_ = [
	(( 'ParameterCount' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ParameterTypes' , 'pArray' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ICCPSetup_vtables_dispatch_ = 1
ICCPSetup_vtables_ = [
	(( 'ECUs' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{1B987168-9FA2-460B-BAE5-7194F7CAE469}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
]

ICLibraries_vtables_dispatch_ = 1
ICLibraries_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{099E8EAA-5EBB-4296-BF34-9776CE620DAF}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{099E8EAA-5EBB-4296-BF34-9776CE620DAF}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ICLibrary_vtables_dispatch_ = 1
ICLibrary_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IChannel_vtables_dispatch_ = 1
IChannel_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'pVal' , ), 0, (0, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'BusType' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Controller' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IChannelMapping_vtables_dispatch_ = 1
IChannelMapping_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Get' , 'src' , 'pDst' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Put' , 'src' , 'dst' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IChannelMappingSet_vtables_dispatch_ = 1
IChannelMappingSet_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Get' , 'busTypeParam' , 'src' , 'pDst' , ), 5, (5, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetByBusName' , 'busName' , 'src' , 'pDst' , ), 6, (6, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Put' , 'busTypeParam' , 'src' , 'dst' , ), 7, (7, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PutByBusName' , 'busName' , 'src' , 'dst' , ), 8, (8, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ClearMappingTable' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , 'ppMapping' , ), 10, (10, (), [ (16393, 10, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IChannelMappingSets_vtables_dispatch_ = 1
IChannelMappingSets_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'ppVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IChannels_vtables_dispatch_ = 1
IChannels_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{52716DB7-DAE9-4365-8B5B-18B1492F728A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'busTypeParam' , 'Number' , 'pVal' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{52716DB7-DAE9-4365-8B5B-18B1492F728A}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
]

ICommunicationSetup_vtables_dispatch_ = 1
ICommunicationSetup_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DataSourceSetup' , 'pRetVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{BA6A18A8-6371-4134-A5B8-E946BDFFE9F4}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ApplicationModelSetup' , 'pRetVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{20A1C9AC-399F-4D79-85FC-A8001A66BB53}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ImportVttSut' , 'pSutManifestPath' , 'pRetVal' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{D06241F9-C503-42D5-B148-10E8604F8959}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ICompileResult_vtables_dispatch_ = 1
ICompileResult_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'result' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'NodeName' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SourceFile' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ErrorMessage' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IConfiguration_vtables_dispatch_ = 1
IConfiguration_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'pVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Saved' , 'pVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GeneralSetup' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'OnlineSetup' , 'pVal' , ), 10, (10, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'OfflineSetup' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SimulationSetup' , 'pVal' , ), 12, (12, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'Name' , 'promptUser' , ), 13, (13, (), [ (8, 17, None, None) , 
			 (11, 17, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IConfiguration10_vtables_dispatch_ = 1
IConfiguration10_vtables_ = [
	(( 'StandaloneMode' , 'pVal' , ), 25, (25, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IConfiguration11_vtables_dispatch_ = 1
IConfiguration11_vtables_ = [
	(( 'TestConfigurations' , 'pVal' , ), 26, (26, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IConfiguration12_vtables_dispatch_ = 1
IConfiguration12_vtables_ = [
	(( 'SymbolMappings' , 'pVal' , ), 27, (27, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IConfiguration13_vtables_dispatch_ = 1
IConfiguration13_vtables_ = [
	(( 'FDXControl' , 'pVal' , ), 28, (28, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IConfiguration14_vtables_dispatch_ = 1
IConfiguration14_vtables_ = [
	(( 'StartValueList' , 'pVal' , ), 29, (29, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IConfiguration15_vtables_dispatch_ = 1
IConfiguration15_vtables_ = [
	(( 'GlobalTcpIpStackSetting' , 'pVal' , ), 30, (30, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IConfiguration16_vtables_dispatch_ = 1
IConfiguration16_vtables_ = [
	(( 'CommunicationSetup' , 'ppVal' , ), 31, (31, (), [ (16393, 10, None, "IID('{2A98FF5A-1C94-49D5-8E9E-7EB0F533E9C3}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IConfiguration17_vtables_dispatch_ = 1
IConfiguration17_vtables_ = [
	(( 'CANoe4Server' , 'ppVal' , ), 32, (32, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
]

IConfiguration2_vtables_dispatch_ = 1
IConfiguration2_vtables_ = [
	(( 'SaveAs' , 'Name' , 'major' , 'minor' , 'promptUser' , 
			 ), 14, (14, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 17, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IConfiguration3_vtables_dispatch_ = 1
IConfiguration3_vtables_ = [
	(( 'mode' , 'mode' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'mode' , 'mode' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IConfiguration4_vtables_dispatch_ = 1
IConfiguration4_vtables_ = [
	(( 'TestSetup' , 'pVal' , ), 16, (16, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CompileAndVerify' , ), 17, (17, (), [ ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IConfiguration5_vtables_dispatch_ = 1
IConfiguration5_vtables_ = [
	(( 'Modified' , 'pVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Modified' , 'pVal' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IConfiguration6_vtables_dispatch_ = 1
IConfiguration6_vtables_ = [
	(( 'SVFiles' , 'pVal' , ), 19, (19, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IConfiguration7_vtables_dispatch_ = 1
IConfiguration7_vtables_ = [
	(( 'OpenConfigurationResult' , 'pVal' , ), 20, (20, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IConfiguration8_vtables_dispatch_ = 1
IConfiguration8_vtables_ = [
	(( 'UserFiles' , 'pVal' , ), 21, (21, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'FDXFiles' , 'pVal' , ), 22, (22, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'CLibraries' , 'pVal' , ), 23, (23, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IConfiguration9_vtables_dispatch_ = 1
IConfiguration9_vtables_ = [
	(( 'FDXEnabled' , 'bEnabled' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'FDXEnabled' , 'bEnabled' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IDataSource_vtables_dispatch_ = 1
IDataSource_vtables_ = [
	(( 'Import' , 'pMergeStrategy' , 'pRetVal' , ), 100, (100, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ImportStatus' , 'pRetVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsGroupSource' , 'pRetVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SourceFormat' , 'pRetVal' , ), 103, (103, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ImportParameters' , 'pRetVal' , ), 104, (104, (), [ (16393, 10, None, "IID('{8AD94E96-2EA9-470B-911C-9CB3508C2CAD}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SourceType' , 'pRetVal' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ImportIssues' , 'pRetVal' , ), 106, (106, (), [ (16393, 10, None, "IID('{47E1195E-8EC7-4B43-85D7-DA57BD9F7C7A}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IDataSourceBase_vtables_dispatch_ = 1
IDataSourceBase_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'pRetVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IDataSourceFile_vtables_dispatch_ = 1
IDataSourceFile_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pRetVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pRetVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pRetVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IDataSourceFiles_vtables_dispatch_ = 1
IDataSourceFiles_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pRetVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'pIndex' , 'pRetVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{800CA71C-6A30-4095-81FC-3051D93501F9}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pRetVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pSourceFilePath' , 'pRetVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{800CA71C-6A30-4095-81FC-3051D93501F9}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'pIndex' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IDataSourceImportParameters_vtables_dispatch_ = 1
IDataSourceImportParameters_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IDataSourceIssue_vtables_dispatch_ = 1
IDataSourceIssue_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'pRetVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Severity' , 'pRetVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Emitter' , 'pRetVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{0F3BAE57-2F92-450D-BA54-478F5B372173}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IDataSourceIssues_vtables_dispatch_ = 1
IDataSourceIssues_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pRetVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'pIndex' , 'pRetVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{AF1D7F3E-D2D3-4C5F-B905-F021F964B85E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pRetVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IDataSourceSetup_vtables_dispatch_ = 1
IDataSourceSetup_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DataSources' , 'pRetVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{68326796-7AF4-450E-983C-5C88DCA473E2}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'GetDataSourceById' , 'pDataSourceId' , 'pRetVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{0F3BAE57-2F92-450D-BA54-478F5B372173}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IDataSources_vtables_dispatch_ = 1
IDataSources_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pRetVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'pIndex' , 'pRetVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0F3BAE57-2F92-450D-BA54-478F5B372173}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pRetVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AddSingleFileDataSource' , 'pSourceFilePath' , 'pRetVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{AAE18347-CE12-47D8-9928-53F639EA65E3}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddGroupDataSource' , 'pName' , 'pRetVal' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{3A89736B-D87A-4F9D-BE14-7A046908FBE8}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'pIndex' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDatabase_vtables_dispatch_ = 1
IDatabase_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Channel' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Channel' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDatabase2_vtables_dispatch_ = 1
IDatabase2_vtables_ = [
	(( 'OpenInfoString' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IDatabaseSetup_vtables_dispatch_ = 1
IDatabaseSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Databases' , 'pVal' , ), 0, (0, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IDatabaseSetup2_vtables_dispatch_ = 1
IDatabaseSetup2_vtables_ = [
	(( 'CODatabaseInfoString' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetCODMFiles' , 'expectedFormatVersion' , 'clientIsFileOwner' , 'fileNames' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (16395, 2, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IDatabases_vtables_dispatch_ = 1
IDatabases_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9E2F76F2-D239-11D3-85E6-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{9E2F76F2-D239-11D3-85E6-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
]

IDatabases2_vtables_dispatch_ = 1
IDatabases2_vtables_ = [
	(( 'AddNetwork' , 'Name' , 'networkName' , 'pVal' , ), 6, (6, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{9E2F76F2-D239-11D3-85E6-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
]

IDatabases3_vtables_dispatch_ = 1
IDatabases3_vtables_ = [
	(( 'AddToChannel' , 'dbFullName' , 'networkName' , 'busTypeParam' , 'ChannelNumber' , 
			 'pVal' , ), 7, (7, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16393, 10, None, "IID('{9E2F76F2-D239-11D3-85E6-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
]

IDevice_vtables_dispatch_ = 1
IDevice_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'NetworkInterface' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AudioInterface' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ApplicationSocket' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Diagnostic' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDevice2_vtables_dispatch_ = 1
IDevice2_vtables_ = [
	(( 'Disassembler' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IDevices_vtables_dispatch_ = 1
IDevices_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IDiagDescription_vtables_dispatch_ = 1
IDiagDescription_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Qualifier' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FilePath' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ManualCommunicationParameters' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Information' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Variant' , 'pVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Variant' , 'pVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Interface' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Interface' , 'pVal' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Language' , 'pVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Language' , 'pVal' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Network' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Node' , 'pVal' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'mode' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IDiagDescription2_vtables_dispatch_ = 1
IDiagDescription2_vtables_ = [
	(( 'SetCommParameter' , 'paramName' , 'Value' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IDiagDescription3_vtables_dispatch_ = 1
IDiagDescription3_vtables_ = [
	(( 'SeednKeyDll' , 'pVal' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SeednKeyDll' , 'pVal' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IDiagDescription4_vtables_dispatch_ = 1
IDiagDescription4_vtables_ = [
	(( 'ReplaceDescriptionFile' , 'newName' , ), 15, (15, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IDiagDescription5_vtables_dispatch_ = 1
IDiagDescription5_vtables_ = [
	(( 'Port' , 'pVal' , ), 16, (16, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Port' , 'pVal' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DiagVariants' , 'pVal' , ), 17, (17, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IDiagDescription6_vtables_dispatch_ = 1
IDiagDescription6_vtables_ = [
	(( 'AdditionalDescriptions' , 'pVal' , ), 18, (18, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'InterpretationOrder' , 'pVal' , ), 19, (19, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'OpenWindows' , 'windows' , ), 20, (20, (), [ (3, 49, '255', None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CloseWindows' , 'windows' , ), 21, (21, (), [ (3, 49, '255', None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IDiagDescriptions_vtables_dispatch_ = 1
IDiagDescriptions_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Network' , 'FilePath' , 'ecuIdentifier' , 'pVal' , 
			 ), 4, (4, (), [ (8, 1, None, None) , (8, 1, None, None) , (8, 17, None, None) , (16393, 10, None, "IID('{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IDiagDescriptions2_vtables_dispatch_ = 1
IDiagDescriptions2_vtables_ = [
	(( 'AddDiagAccess' , 'accessType' , 'FilePath' , 'ecuIdentifier' , 'pVal' , 
			 ), 6, (6, (), [ (3, 1, None, None) , (8, 1, None, None) , (8, 17, None, None) , (16393, 10, None, "IID('{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDiagVariant_vtables_dispatch_ = 1
IDiagVariant_vtables_ = [
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Qualifier' , 'pVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IDiagVariants_vtables_dispatch_ = 1
IDiagVariants_vtables_ = [
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0F8B4279-132B-4AD1-88DF-96837286F5D0}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IDiagnosticsSetup_vtables_dispatch_ = 1
IDiagnosticsSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DiagDescriptions' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IDisassembler_vtables_dispatch_ = 1
IDisassembler_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IEncoding_vtables_dispatch_ = 1
IEncoding_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LowerBound' , 'Value' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'UpperBound' , 'Value' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'Value' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'factor' , 'Value' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'Value' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'Value' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IEncodings_vtables_dispatch_ = 1
IEncodings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F87D41F0-7A2C-4212-9A3C-3436AF7B4A08}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IEnvironment_vtables_dispatch_ = 1
IEnvironment_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetVariable' , 'Name' , 'ppVariable' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CreateGroup' , 'ppGroup' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IEnvironment2_vtables_dispatch_ = 1
IEnvironment2_vtables_ = [
	(( 'CreateInfo' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetVariables' , 'pArray' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IEnvironment3_vtables_dispatch_ = 1
IEnvironment3_vtables_ = [
	(( 'GetVariables' , 'array' , 'pArray' , ), 7, (7, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IEnvironmentArray_vtables_dispatch_ = 1
IEnvironmentArray_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'n' , 'ppVariable' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{4793A120-7008-11D3-8566-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IEnvironmentGroup_vtables_dispatch_ = 1
IEnvironmentGroup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'array' , 'ppVal' , ), 0, (0, (), [ (16393, 10, None, "IID('{4C9FD952-7671-11D3-856E-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pVariable' , ), 3, (3, (), [ (9, 1, None, "IID('{4793A120-7008-11D3-8566-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'pVariable' , ), 4, (4, (), [ (9, 1, None, "IID('{4793A120-7008-11D3-8566-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetValues' , 'array' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetValues' , 'pArray' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IEnvironmentInfo_vtables_dispatch_ = 1
IEnvironmentInfo_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Nodes' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Read' , 'Read' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Read' , 'Read' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Write' , 'Write' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Write' , 'Write' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'GetInfo' , 'ppInfo' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IEnvironmentVariable_vtables_dispatch_ = 1
IEnvironmentVariable_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'Value' , ), 0, (0, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'Value' , ), 0, (0, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Handle' , 'evHandle' , ), 3, (3, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'Handle' , 'evHandle' , ), 3, (3, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'Type' , 'evHandle' , ), 4, (4, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
]

IEnvironmentVariable2_vtables_dispatch_ = 1
IEnvironmentVariable2_vtables_ = [
	(( 'ValueAndTime' , 'pArray' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'NotificationType' , 'notificationTypeParam' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'NotificationType' , 'notificationTypeParam' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IExporter_vtables_dispatch_ = 1
IExporter_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Sources' , 'pVal' , ), 0, (0, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Destinations' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Filter' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Settings' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Signals' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Messages' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'noPromptUser' , ), 8, (8, (), [ (11, 17, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Load' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IExporter2_vtables_dispatch_ = 1
IExporter2_vtables_ = [
	(( 'TimeSection' , 'pVal' , ), 10, (10, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IExporter3_vtables_dispatch_ = 1
IExporter3_vtables_ = [
	(( 'Symbols' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IExporterASCIISettings_vtables_dispatch_ = 1
IExporterASCIISettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LogTimeStampAccuracy' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LogTimeStampAccuracy' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'NumberBase' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'NumberBase' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TimeFormat' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'TimeFormat' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Representation' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Representation' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IExporterASCIISettings2_vtables_dispatch_ = 1
IExporterASCIISettings2_vtables_ = [
	(( 'NumericDecimalPlaces' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'NumericDecimalPlaces' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IExporterCsvSettings_vtables_dispatch_ = 1
IExporterCsvSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ListDelimiter' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ListDelimiter' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DecimalSymbol' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DecimalSymbol' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DecimalPlaces' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DecimalPlaces' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'pVal' , ), 0, (0, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'pVal' , ), 0, (0, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TimestampInSeconds' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'TimestampInSeconds' , 'pVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IExporterCsvSettingsExt_vtables_dispatch_ = 1
IExporterCsvSettingsExt_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ColumnSeparator' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ColumnSeparator' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DecimalSymbol' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DecimalSymbol' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DecimalPlacesForTimeChannel' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DecimalPlacesForTimeChannel' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DecimalPlacesForSignalValue' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DecimalPlacesForSignalValue' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ExportGlobalHeader' , 'pVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ExportGlobalHeader' , 'pVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'QuoteTextCells' , 'pVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'QuoteTextCells' , 'pVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ExportMode' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ExportMode' , 'pVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ResamplingTimeBase' , 'pVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ResamplingTimeBase' , 'pVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TimeStampMode' , 'pVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TimeStampMode' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IExporterDiademSettings_vtables_dispatch_ = 1
IExporterDiademSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Resampling' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Resampling' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TimeBase' , 'pVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TimeBase' , 'pVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IExporterMatlabSettings_vtables_dispatch_ = 1
IExporterMatlabSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LimitNameLength' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LimitNameLength' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IExporterMatlabSettings2_vtables_dispatch_ = 1
IExporterMatlabSettings2_vtables_ = [
	(( 'NameLength' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'NameLength' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ExportMode' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ExportMode' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ResamplingTimeBase' , 'pVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ResamplingTimeBase' , 'pVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'TimeStampMode' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'TimeStampMode' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IExporterMdfSettings_vtables_dispatch_ = 1
IExporterMdfSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SaveAsVersion2' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SaveAsVersion2' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IExporterMdfSettings2_vtables_dispatch_ = 1
IExporterMdfSettings2_vtables_ = [
	(( 'MDFVersion' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MDFVersion' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IExporterSettings_vtables_dispatch_ = 1
IExporterSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SignalFormat' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SignalFormat' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'VariableFormat' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'VariableFormat' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NameDelimiter' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NameDelimiter' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Matlab' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'MDF' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CSV' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Diadem' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IExporterSettings2_vtables_dispatch_ = 1
IExporterSettings2_vtables_ = [
	(( 'SaveInvalidJ1939Values' , 'pVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SaveInvalidJ1939Values' , 'pVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IExporterSettings3_vtables_dispatch_ = 1
IExporterSettings3_vtables_ = [
	(( 'ASCII' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'XML' , 'pVal' , ), 12, (12, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IExporterSettings4_vtables_dispatch_ = 1
IExporterSettings4_vtables_ = [
	(( 'CSVExt' , 'pVal' , ), 13, (13, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'WriteSignalValuesRaw' , 'pVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'WriteSignalValuesRaw' , 'pVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'WriteSignalValuesSymbolic' , 'pVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'WriteSignalValuesSymbolic' , 'pVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IExporterSymbol_vtables_dispatch_ = 1
IExporterSymbol_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IExporterSymbols_vtables_dispatch_ = 1
IExporterSymbols_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{807B7C59-949C-42C1-AB88-D0E72E4DA54C}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IExporterXMLSettings_vtables_dispatch_ = 1
IExporterXMLSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteXSLTConversion' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteXSLTConversion' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'OpenXSLTConversionResult' , 'pVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OpenXSLTConversionResult' , 'pVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'XSLTStyleSheetPath' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'XSLTStyleSheetPath' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ColumnsLayout' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ColumnsLayout' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IFDXControl_vtables_dispatch_ = 1
IFDXControl_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'WriteEditorConfig' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IFDXFile_vtables_dispatch_ = 1
IFDXFile_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IFDXFiles_vtables_dispatch_ = 1
IFDXFiles_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IFileGroupDataSource_vtables_dispatch_ = 1
IFileGroupDataSource_vtables_ = [
	(( 'Name' , 'pRetVal' , ), 200, (200, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pRetVal' , ), 200, (200, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SourceFiles' , 'pRetVal' , ), 201, (201, (), [ (16393, 10, None, "IID('{0F9ABA09-6F61-41F2-B64F-C532A7DE7D74}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IFiles_vtables_dispatch_ = 1
IFiles_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IFilter_vtables_dispatch_ = 1
IFilter_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IGeneralSetup_vtables_dispatch_ = 1
IGeneralSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IGeneralSetup2_vtables_dispatch_ = 1
IGeneralSetup2_vtables_ = [
	(( 'PanelSetup' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ControllerSetup' , 'busTypeParam' , 'Channel' , 'pVal' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (19, 1, None, None) , (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DatabaseSetup' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IGeneralSetup3_vtables_dispatch_ = 1
IGeneralSetup3_vtables_ = [
	(( 'Channels' , 'busTypeParam' , 'pCount' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Channels' , 'busTypeParam' , 'pCount' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IGeneralSetup4_vtables_dispatch_ = 1
IGeneralSetup4_vtables_ = [
	(( 'MacroSetup' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IGeneralSetup5_vtables_dispatch_ = 1
IGeneralSetup5_vtables_ = [
	(( 'DiagnosticsSetup' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IGeneralSetup6_vtables_dispatch_ = 1
IGeneralSetup6_vtables_ = [
	(( 'XCPSetup' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CCPSetup' , 'pVal' , ), 10, (10, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IGeneralSetup7_vtables_dispatch_ = 1
IGeneralSetup7_vtables_ = [
	(( 'SnippetSetup' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IGenerator_vtables_dispatch_ = 1
IGenerator_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IGenerators_vtables_dispatch_ = 1
IGenerators_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{563ED100-7544-11D5-87D4-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{563ED100-7544-11D5-87D4-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IIUTInitializationSettings_vtables_dispatch_ = 1
IIUTInitializationSettings_vtables_ = [
	(( 'ResetType' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ResetType' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'BusIdleWaitTime' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'BusIdleWaitTime' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PowerOffTime' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PowerOffTime' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IUTInitTime' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IUTInitTime' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SupplyVoltage' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SupplyVoltage' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MaxCurrentConsumptionSleep' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'MaxCurrentConsumptionSleep' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'MinCurrentConsumptionAwake' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'MinCurrentConsumptionAwake' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'UseAutomaticSleepDetection' , 'bEnabled' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'UseAutomaticSleepDetection' , 'bEnabled' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IIUTSettings_vtables_dispatch_ = 1
IIUTSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SupportsInterbyteSpace' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SupportsInterbyteSpace' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SendsWakeupSignal' , 'pVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SendsWakeupSignal' , 'pVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DeviceClass' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DeviceClass' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'InitialNAD' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'InitialNAD' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'VariantID' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'VariantID' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IIUTSettings2_vtables_dispatch_ = 1
IIUTSettings2_vtables_ = [
	(( 'SupportsAssignNAD' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SupportsAssignNAD' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SupportsConditionalChangeNAD' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SupportsConditionalChangeNAD' , 'pVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ReconfigureBeforeEachTestCase' , 'pVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ReconfigureBeforeEachTestCase' , 'pVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SupplierID' , 'pVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SupplierID' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'FunctionID' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'FunctionID' , 'pVal' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IInteractiveGenerator_vtables_dispatch_ = 1
IInteractiveGenerator_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IInteractiveGenerators_vtables_dispatch_ = 1
IInteractiveGenerators_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{563ED102-7544-11D5-87D4-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'igType' , 'Name' , 'pVal' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{563ED102-7544-11D5-87D4-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IInterpretationOrder_vtables_dispatch_ = 1
IInterpretationOrder_vtables_ = [
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'fromIndex' , 'toIndex' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IIpNetworkAddress_vtables_dispatch_ = 1
IIpNetworkAddress_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Prefix' , 'pVal' , ), 3, (3, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Address' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IIpNetworkAddressList_vtables_dispatch_ = 1
IIpNetworkAddressList_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Address' , 'Prefix' , 'pVal' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (19, 1, None, None) , (16393, 10, None, "IID('{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IIpSetting_vtables_dispatch_ = 1
IIpSetting_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Addresses' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ConfigMethod' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ConfigMethod' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ILinProtocolVersion_vtables_dispatch_ = 1
ILinProtocolVersion_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'MajorVersion' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MinorVersion' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'VersionString' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ILinSlaveConformanceTester_vtables_dispatch_ = 1
ILinSlaveConformanceTester_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'StartOnMeasurement' , 'bActive' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'StartOnMeasurement' , 'bActive' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'StartOnEnvVar' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'StartOnEnvVar' , 'pVal' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'StartOnKey' , 'pVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'StartOnKey' , 'pVal' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationStyleSheet' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationStyleSheet' , 'pVal' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Report' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Libraries' , 'pVal' , ), 12, (12, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Modules' , 'pVal' , ), 13, (13, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Sequence' , 'pVal' , ), 14, (14, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Verdict' , 'pVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Start' , ), 16, (16, (), [ ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , ), 17, (17, (), [ ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Reload' , ), 18, (18, (), [ ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'TestVariant' , 'pVal' , ), 19, (19, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TestVariant' , 'pVal' , ), 19, (19, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Pause' , ), 20, (20, (), [ ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Resume' , ), 21, (21, (), [ ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteRepeatedly' , 'pVal' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteRepeatedly' , 'pVal' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ExecutionMode' , 'pVal' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ExecutionMode' , 'pVal' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfExecutions' , 'pVal' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfExecutions' , 'pVal' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'SetExecutionTime' , 'days' , 'hours' , 'minutes' , 'success' , 
			 ), 25, (25, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'TestCasesExecutedInRandomOrder' , 'pVal' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'TestCasesExecutedInRandomOrder' , 'pVal' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'RandomizeEachCycle' , 'pVal' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'RandomizeEachCycle' , 'pVal' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'VerdictImpact' , 'pVal' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'VerdictImpact' , 'pVal' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DebugMode' , 'pVal' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'DebugMode' , 'pVal' , ), 29, (29, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'PausingMode' , 'pVal' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'PausingMode' , 'pVal' , ), 30, (30, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'GenerateTestCases' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'SlaveNodeName' , 'pVal' , ), 32, (32, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'SlaveNodeName' , 'pVal' , ), 32, (32, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'ChannelNumber' , 'pVal' , ), 33, (33, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'TesterSettings' , 'pVal' , ), 34, (34, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'IUTSettings' , 'pVal' , ), 35, (35, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'IUTInitializationSettings' , 'pVal' , ), 36, (36, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
]

ILinSlaveConformanceTester2_vtables_dispatch_ = 1
ILinSlaveConformanceTester2_vtables_ = [
	(( 'NodeCapabilityFile' , 'pVal' , ), 37, (37, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'NodeCapabilityFile' , 'pVal' , ), 37, (37, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'NodeCapabilitySource' , 'pVal' , ), 38, (38, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'NodeCapabilitySource' , 'pVal' , ), 38, (38, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
]

ILinSlaveConformanceTester3_vtables_dispatch_ = 1
ILinSlaveConformanceTester3_vtables_ = [
	(( 'SlaveNodeProtocolVersion' , 'pVal' , ), 39, (39, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

ILinSlaveConformanceTesters_vtables_dispatch_ = 1
ILinSlaveConformanceTesters_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{7665020C-4F6E-459C-8C1E-58E792EA825D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{7665020C-4F6E-459C-8C1E-58E792EA825D}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , 'promptUser' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 104 , (3, 0, None, None) , 0 , )),
]

ILogging_vtables_dispatch_ = 1
ILogging_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Trigger' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ILogging2_vtables_dispatch_ = 1
ILogging2_vtables_ = [
	(( 'Name' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ILogging3_vtables_dispatch_ = 1
ILogging3_vtables_ = [
	(( 'Exporter' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILogging4_vtables_dispatch_ = 1
ILogging4_vtables_ = [
	(( 'FileNameOptions' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ILogging5_vtables_dispatch_ = 1
ILogging5_vtables_ = [
	(( 'Filter' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ILoggingCollection_vtables_dispatch_ = 1
ILoggingCollection_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'n' , 'ppLogging' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{FD859B9B-4E28-11D3-854C-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ILoggingCollection2_vtables_dispatch_ = 1
ILoggingCollection2_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'ppLogging' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3BC4EED0-D25F-11D3-85E6-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'ppLogging' , ), 4, (4, (), [ (8, 17, None, None) , 
			 (16393, 10, None, "IID('{3BC4EED0-D25F-11D3-85E6-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ILoggingFileNameOptions_vtables_dispatch_ = 1
ILoggingFileNameOptions_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IncrementAtMeasurementStart' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IncrementAtMeasurementStart' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IncrementAfterTrigger' , 'pVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IncrementAfterTrigger' , 'pVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'EnableExtendedIncrementation' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'EnableExtendedIncrementation' , 'pVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfLeadingZeros' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfLeadingZeros' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IncrementAfterGrowth' , 'pVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IncrementAfterGrowth' , 'pVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IncrementationSize' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'IncrementationSize' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IncrementAfterDuration' , 'pVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IncrementAfterDuration' , 'pVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'IncrementationTime' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'IncrementationTime' , 'pVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

ILoggingFilter_vtables_dispatch_ = 1
ILoggingFilter_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enable' , 'events' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Disable' , 'events' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsEnabled' , 'events' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMOSTBusStatistic_vtables_dispatch_ = 1
IMOSTBusStatistic_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'BusLoad' , 'pVal' , ), 0, (0, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PeakLoad' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Data' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DataTotal' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ChipState' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMacro_vtables_dispatch_ = 1
IMacro_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Start' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsRunning' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMacroSetup_vtables_dispatch_ = 1
IMacroSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Macros' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Play' , 'FullName' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IMacros_vtables_dispatch_ = 1
IMacros_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMcCANSettings_vtables_dispatch_ = 1
IMcCANSettings_vtables_ = [
	(( 'AppChannel' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AppChannel' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RequestId' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RequestId' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ResponseId' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ResponseId' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMcCANSettings1_vtables_dispatch_ = 1
IMcCANSettings1_vtables_ = [
	(( 'UseMaxDLC' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'UseMaxDLC' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMcCANSettings2_vtables_dispatch_ = 1
IMcCANSettings2_vtables_ = [
	(( 'UseCanFD' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UseCanFD' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UseBitrateSwitch' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'UseBitrateSwitch' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IMcConfiguredSignal_vtables_dispatch_ = 1
IMcConfiguredSignal_vtables_ = [
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ReadMode' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ReadMode' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'EventCycle' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'EventCycle' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMcConfiguredSignals_vtables_dispatch_ = 1
IMcConfiguredSignals_vtables_ = [
	(( 'Count' , 'pnCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9143BDF8-5801-42C7-832C-CFABE5FE3948}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'dbSignal' , 'pVal' , ), 2, (2, (), [ (9, 1, None, "IID('{2C5CB149-1C81-43BF-8356-9FC01E7F4445}')") , 
			 (16393, 10, None, "IID('{9143BDF8-5801-42C7-832C-CFABE5FE3948}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMcDatabaseSignal_vtables_dispatch_ = 1
IMcDatabaseSignal_vtables_ = [
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
]

IMcDatabaseSignals_vtables_dispatch_ = 1
IMcDatabaseSignals_vtables_ = [
	(( 'Count' , 'pnCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2C5CB149-1C81-43BF-8356-9FC01E7F4445}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMcECU_vtables_dispatch_ = 1
IMcECU_vtables_ = [
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Protocol' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Protocol' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'BusType' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BusType' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Database' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Database' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ResponseTimeout' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ResponseTimeout' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfConnectionAttempts' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfConnectionAttempts' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyOnDemand' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyOnDemand' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ReconnectAllowedAfterError' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ReconnectAllowedAfterError' , 'pVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ConnectOnMeasurementStart' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ConnectOnMeasurementStart' , 'pVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyActive' , 'pVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyActive' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyFileName' , 'pVal' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyFileName' , 'pVal' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyActiveCAL' , 'pVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyActiveCAL' , 'pVal' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyFileNameCAL' , 'pVal' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SeedAndKeyFileNameCAL' , 'pVal' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ConfiguredSignals' , 'pVal' , ), 15, (15, (), [ (16393, 10, None, "IID('{3B4B1378-DADB-405C-888C-42FAB14A0937}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DatabaseSignals' , 'pVal' , ), 16, (16, (), [ (16393, 10, None, "IID('{9A6830FC-0406-412B-B89A-00E4B36B6536}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'CANSettings' , 'pVal' , ), 17, (17, (), [ (16393, 10, None, "IID('{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'FlexRaySettings' , 'pVal' , ), 18, (18, (), [ (16393, 10, None, "IID('{BB4D9F36-C012-4A47-8765-4361F619EB09}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'EthernetSettings' , 'pVal' , ), 19, (19, (), [ (16393, 10, None, "IID('{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IMcECU1_vtables_dispatch_ = 1
IMcECU1_vtables_ = [
	(( 'PageSwitchingActive' , 'pVal' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PageSwitchingActive' , 'pVal' , ), 20, (20, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'RAMpage' , 'pVal' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'RAMpage' , 'pVal' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

IMcECU2_vtables_dispatch_ = 1
IMcECU2_vtables_ = [
	(( 'UseDAQTimestampsOfECU' , 'pVal' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'UseDAQTimestampsOfECU' , 'pVal' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'UseDAQTimestampsOfECUDivOperator' , 'pVal' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'UseDAQTimestampsOfECUDivOperator' , 'pVal' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DisconnectOnMeasurementStop' , 'pVal' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DisconnectOnMeasurementStop' , 'pVal' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ResetVariablesAfterDisconnect' , 'pVal' , ), 25, (25, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'ResetVariablesAfterDisconnect' , 'pVal' , ), 25, (25, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ObserverActive' , 'pVal' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'ObserverActive' , 'pVal' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
]

IMcECU3_vtables_dispatch_ = 1
IMcECU3_vtables_ = [
	(( 'MeasurementGroups' , 'pVal' , ), 27, (27, (), [ (16393, 10, None, "IID('{9D75612D-C799-4D08-9F96-3996AE447EF2}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
]

IMcECU4_vtables_dispatch_ = 1
IMcECU4_vtables_ = [
	(( 'DAQTimeout' , 'pVal' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'DAQTimeout' , 'pVal' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'DisableVariableUpdates' , 'pVal' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'DisableVariableUpdates' , 'pVal' , ), 29, (29, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'UsePartialIdentifiers' , 'pVal' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'UsePartialIdentifiers' , 'pVal' , ), 30, (30, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'UseExtendedDatatypes' , 'pVal' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'UseExtendedDatatypes' , 'pVal' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'UseModifyBits' , 'pVal' , ), 32, (32, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'UseModifyBits' , 'pVal' , ), 32, (32, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'UseShortDownload' , 'pVal' , ), 33, (33, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'UseShortDownload' , 'pVal' , ), 33, (33, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'UseShortUpload' , 'pVal' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'UseShortUpload' , 'pVal' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'UseGetDAQProcessorInfo' , 'pVal' , ), 35, (35, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'UseGetDAQProcessorInfo' , 'pVal' , ), 35, (35, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'UseGetDAQResolutionInfo' , 'pVal' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'UseGetDAQResolutionInfo' , 'pVal' , ), 36, (36, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'UseSetSStatusCAL' , 'pVal' , ), 37, (37, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'UseSetSStatusCAL' , 'pVal' , ), 37, (37, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'UseSetSStatusDAQ' , 'pVal' , ), 38, (38, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'UseSetSStatusDAQ' , 'pVal' , ), 38, (38, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'ConnectMode' , 'pVal' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'ConnectMode' , 'pVal' , ), 39, (39, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'CheckEPROMIdentifier' , 'pVal' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'CheckEPROMIdentifier' , 'pVal' , ), 40, (40, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'MasterID' , 'pArray' , ), 41, (41, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'MasterID' , 'pArray' , ), 41, (41, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'UseCCP_V2_0' , 'pVal' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'UseCCP_V2_0' , 'pVal' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
]

IMcECU5_vtables_dispatch_ = 1
IMcECU5_vtables_ = [
	(( 'ConnectOnMeasurementStartDelay' , 'pVal' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'ConnectOnMeasurementStartDelay' , 'pVal' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
]

IMcECU6_vtables_dispatch_ = 1
IMcECU6_vtables_ = [
	(( 'LINSettings' , 'pVal' , ), 44, (44, (), [ (16393, 10, None, "IID('{E2575D00-23CD-4A17-8E3D-ACA974E63BFA}')") , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
]

IMcECUs_vtables_dispatch_ = 1
IMcECUs_vtables_ = [
	(( 'Count' , 'pnCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0581A64F-476C-4BC6-B865-B45B60F16FC5}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'dbPath' , 'transportLayer' , 'pVal' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{0581A64F-476C-4BC6-B865-B45B60F16FC5}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMcECUs1_vtables_dispatch_ = 1
IMcECUs1_vtables_ = [
	(( 'AddConfiguration' , 'cfgPath' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMcEthernetSettings_vtables_dispatch_ = 1
IMcEthernetSettings_vtables_ = [
	(( 'Host' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Host' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Tcp' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Tcp' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Port' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Port' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMcFlexRaySettings_vtables_dispatch_ = 1
IMcFlexRaySettings_vtables_ = [
	(( 'DtoBuffer' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DtoBuffer' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'NodeAddress' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'NodeAddress' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AppChannel' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AppChannel' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMcFlexRaySettings1_vtables_dispatch_ = 1
IMcFlexRaySettings1_vtables_ = [
	(( 'MinBufferCount' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MinBufferCount' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBufferCount' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBufferCount' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMcLINSettings_vtables_dispatch_ = 1
IMcLINSettings_vtables_ = [
	(( 'AppChannel' , 'pVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AppChannel' , 'pVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RequestId' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RequestId' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ResponseId' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ResponseId' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NAD' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NAD' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMcMeasurementGroup_vtables_dispatch_ = 1
IMcMeasurementGroup_vtables_ = [
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Parameters' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{9CE780C2-C24D-4134-8FF6-8BA66173B9D9}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Activate' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMcMeasurementGroup1_vtables_dispatch_ = 1
IMcMeasurementGroup1_vtables_ = [
	(( 'BeginUpdate' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'EndUpdate' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMcMeasurementGroups_vtables_dispatch_ = 1
IMcMeasurementGroups_vtables_ = [
	(( 'Count' , 'pnCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{97329791-2957-4E7A-AFA6-ABA838244E58}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{97329791-2957-4E7A-AFA6-ABA838244E58}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMcParameter_vtables_dispatch_ = 1
IMcParameter_vtables_ = [
	(( 'Name' , 'pVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ReadMode' , 'pVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ReadMode' , 'pVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AutoRead' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AutoRead' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'EventCycle' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'EventCycle' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Configured' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Configured' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMcParameters_vtables_dispatch_ = 1
IMcParameters_vtables_ = [
	(( 'Count' , 'pnCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{98830394-D91B-4165-874A-9F3EA5885EA1}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMeasurement_vtables_dispatch_ = 1
IMeasurement_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Start' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Step' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Animate' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Break' , ), 7, (7, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Reset' , ), 8, (8, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AnimationDelay' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AnimationDelay' , 'pVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMeasurement2_vtables_dispatch_ = 1
IMeasurement2_vtables_ = [
	(( 'Running' , 'pVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IMeasurement3_vtables_dispatch_ = 1
IMeasurement3_vtables_ = [
	(( 'NotifyStartFromSimulink' , ), 11, (11, (), [ ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'NotifySimulinkReady' , ), 12, (12, (), [ ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IMeasurement4_vtables_dispatch_ = 1
IMeasurement4_vtables_ = [
	(( 'StopEx' , ), 13, (13, (), [ ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IMeasurement5_vtables_dispatch_ = 1
IMeasurement5_vtables_ = [
	(( 'MeasurementIndex' , 'pVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MeasurementIndex' , 'pVal' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IMeasurementSetup_vtables_dispatch_ = 1
IMeasurementSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Statistics' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'BusStatistics' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TraceCollection' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DataCollection' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GraphicCollection' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LoggingCollection' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMeasurementSetup2_vtables_dispatch_ = 1
IMeasurementSetup2_vtables_ = [
	(( 'Source' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMeasurementSetup3_vtables_dispatch_ = 1
IMeasurementSetup3_vtables_ = [
	(( 'ViewSynchronization' , 'pVal' , ), 10, (10, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMeasurementSetup4_vtables_dispatch_ = 1
IMeasurementSetup4_vtables_ = [
	(( 'SendNodes' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IMeasurementSetup5_vtables_dispatch_ = 1
IMeasurementSetup5_vtables_ = [
	(( 'ParallelizationLevel' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ParallelizationLevel' , 'pVal' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IMeasurementSetup6_vtables_dispatch_ = 1
IMeasurementSetup6_vtables_ = [
	(( 'VideoWindows' , 'pVal' , ), 13, (13, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IMeasurementSetup7_vtables_dispatch_ = 1
IMeasurementSetup7_vtables_ = [
	(( 'OfflineSourceRoot' , 'pVal' , ), 14, (14, (), [ (16393, 10, None, "IID('{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IMeasurementSetup8_vtables_dispatch_ = 1
IMeasurementSetup8_vtables_ = [
	(( 'CreateMappingSet' , 'mappingSetName' , 'ppVal' , ), 15, (15, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RemoveMappingSet' , 'pVal' , ), 16, (16, (), [ (9, 1, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetMappingSetById' , 'mappingSetId' , 'ppVal' , ), 17, (17, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GetMappingSetByName' , 'mappingSetName' , 'ppVal' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetAllMappingSets' , 'ppVal' , ), 19, (19, (), [ (16393, 10, None, "IID('{32E135DC-1ABC-4D9D-8276-546393F7FCDE}')") , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ImportMappingSets' , 'fileName' , 'overwriteExisting' , 'ppVal' , ), 20, (20, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (16393, 10, None, "IID('{32E135DC-1ABC-4D9D-8276-546393F7FCDE}')") , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ExportMappingSets' , 'fileName' , ), 21, (21, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'WorkingMode' , 'mode' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'WorkingMode' , 'mode' , ), 22, (22, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AnimationFactor' , 'factor' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AnimationFactor' , 'factor' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IMessage2_vtables_dispatch_ = 1
IMessage2_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMessages_vtables_dispatch_ = 1
IMessages_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{277C0778-3DF7-415C-8335-69BD2C81914F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IModule_vtables_dispatch_ = 1
IModule_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IModule2_vtables_dispatch_ = 1
IModule2_vtables_ = [
	(( 'References' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IModules_vtables_dispatch_ = 1
IModules_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMostApplicationFilter_vtables_dispatch_ = 1
IMostApplicationFilter_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FilterType' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FilterType' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AddApplicationEvent' , 'sourceAddress' , 'destinationAddress' , 'fBlockID' , 'instanceID' , 
			 'FunctionID' , 'opType' , 'telID' , 'telLen' , ), 6, (6, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 8 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddSystemMessage' , 'sourceAddress' , 'destinationAddress' , 'rType' , ), 7, (7, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddRawPacket' , 'sourceAddress' , 'destinationAddress' , 'telLen' , ), 8, (8, (), [ 
			 (12, 17, None, None) , (12, 17, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 3 , 128 , (3, 0, None, None) , 0 , )),
]

IMostDisassembler_vtables_dispatch_ = 1
IMostDisassembler_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SymbolicMessageIDComponents' , 'fBlockID' , 'instanceID' , 'FunctionID' , 'opTypeID' , 
			 'pFBlockName' , 'pFunctionName' , 'pOpTypeName' , 'pNotDisassembled' , ), 3, (3, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16392, 2, None, None) , 
			 (16392, 2, None, None) , (16392, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SymbolicParameterList1' , 'dataLength' , 'dataArray' , 'maxParams' , 'pParameterList' , 
			 ), 4, (4, (), [ (3, 1, None, None) , (12, 1, None, None) , (3, 49, '65535', None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SymbolicParameterList2' , 'fBlockID' , 'instanceID' , 'FunctionID' , 'opTypeID' , 
			 'dataLength' , 'dataArray' , 'maxParams' , 'pParameterList' , ), 5, (5, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (12, 1, None, None) , (3, 49, '65535', None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ThisMessageIDComponents' , 'fBlockID' , 'instanceID' , 'FunctionID' , 'opTypeID' , 
			 ), 6, (6, (), [ (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ThisSymbolicMessageIDComponents' , 'pFBlockName' , 'pFunctionName' , 'pOpTypeName' , 'pNotDisassembled' , 
			 ), 7, (7, (), [ (16392, 2, None, None) , (16392, 2, None, None) , (16392, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ThisSymbolicParameterList' , 'maxParams' , 'pParameterList' , ), 8, (8, (), [ (3, 49, '65535', None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMostNetworkInterface_vtables_dispatch_ = 1
IMostNetworkInterface_vtables_ = [
	(( 'NodeAddress' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'NodeAddress' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GroupAddress' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GroupAddress' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AlternativePacketAddress' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AlternativePacketAddress' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AllBypass' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AllBypass' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'TimingMode' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'TimingMode' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ControlSpy' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ControlSpy' , 'pVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AsynchronousSpy' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AsynchronousSpy' , 'pVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TxLight' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RxLight' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Lock' , 'pVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Channel' , 'pVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'NodePosition' , 'pVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AllocationTable' , 'pDataArray' , ), 16, (16, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'WriteRegister' , 'chip' , 'Offset' , 'dataLength' , 'dataArray' , 
			 ), 17, (17, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ReadRegister' , 'chip' , 'Offset' , 'dataLength' , ), 18, (18, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'OutputCMS' , 'rType' , 'destinationAddress' , 'DLC' , 'dataArray' , 
			 ), 19, (19, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'OutputAMS' , 'destinationAddress' , 'fBlockID' , 'instanceID' , 'FunctionID' , 
			 'opType' , 'dataLength' , 'dataArray' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'OutputPacket' , 'destinationAddress' , 'DLC' , 'dataArray' , ), 21, (21, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'GenerateLightError' , 'noLightDuration' , 'lightDuration' , 'cycles' , ), 22, (22, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'GenerateLockError' , 'noLockDuration' , 'lockDuration' , 'cycles' , ), 23, (23, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Twinkle' , ), 24, (24, (), [ ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IMostNetworkInterface2_vtables_dispatch_ = 1
IMostNetworkInterface2_vtables_ = [
	(( 'EventSources' , 'pVal' , ), 25, (25, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'EventSources' , 'pVal' , ), 25, (25, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ApplicationFilter' , 'pVal' , ), 26, (26, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AsynchronousSpyMode' , 'pVal' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'AsynchronousSpyMode' , 'pVal' , ), 27, (27, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
]

INamespace_vtables_dispatch_ = 1
INamespace_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Variables' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

INamespace2_vtables_dispatch_ = 1
INamespace2_vtables_ = [
	(( 'Namespaces' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

INamespace3_vtables_dispatch_ = 1
INamespace3_vtables_ = [
	(( 'Comment' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'pVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

INamespaces_vtables_dispatch_ = 1
INamespaces_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{CE6F377E-4D0D-4E81-8C0D-83E86E059138}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

INamespaces2_vtables_dispatch_ = 1
INamespaces2_vtables_ = [
	(( 'CreateVariableArray' , 'Variables' , 'pVal' , ), 6, (6, (), [ (12, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

INetwork_vtables_dispatch_ = 1
INetwork_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'NetworkInterfaces' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Devices' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

INetwork2_vtables_dispatch_ = 1
INetwork2_vtables_ = [
	(( 'BusType' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

INetworkInterface_vtables_dispatch_ = 1
INetworkInterface_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

INetworkInterfaces_vtables_dispatch_ = 1
INetworkInterfaces_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3A78038C-7975-4B22-B6E6-3B7FA14DB05F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

INetworks_vtables_dispatch_ = 1
INetworks_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

INode_vtables_dispatch_ = 1
INode_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'bActive' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'bActive' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'StartDelayActive' , 'bActive' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'StartDelayActive' , 'bActive' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'StartDelayFromDb' , 'fromdb' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'StartDelayFromDb' , 'fromdb' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'StartDelay' , 'delay' , ), 9, (9, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'StartDelay' , 'delay' , ), 9, (9, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterActive' , 'bActive' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterActive' , 'bActive' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterFromDb' , 'fromdb' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterFromDb' , 'fromdb' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterMin' , 'min' , ), 41, (41, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterMax' , 'max' , ), 42, (42, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitter' , 'min' , 'max' , ), 14, (14, (), [ (4, 1, None, None) , 
			 (4, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Compile' , ), 15, (15, (), [ ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

INode2_vtables_dispatch_ = 1
INode2_vtables_ = [
	(( 'TestModule' , 'bActive' , ), 46, (46, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

INode3_vtables_dispatch_ = 1
INode3_vtables_ = [
	(( 'Inputs' , 'pVal' , ), 47, (47, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Outputs' , 'pVal' , ), 48, (48, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Modules' , 'pVal' , ), 16, (16, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

INode4_vtables_dispatch_ = 1
INode4_vtables_ = [
	(( 'StartNM' , ), 49, (49, (), [ ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'StopNM' , ), 50, (50, (), [ ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'RequestNM' , ), 51, (51, (), [ ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ReleaseNM' , ), 52, (52, (), [ ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'StatusNM' , 'pVal' , ), 53, (53, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

INode5_vtables_dispatch_ = 1
INode5_vtables_ = [
	(( 'DriftJitterMode' , 'mode' , ), 55, (55, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterMode' , 'mode' , ), 55, (55, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterFixedDeviation' , 'deviation' , ), 56, (56, (), [ (16388, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DriftJitterFixedDeviation' , 'deviation' , ), 56, (56, (), [ (4, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
]

INode6_vtables_dispatch_ = 1
INode6_vtables_ = [
	(( 'CANOpen' , 'pVal' , ), 57, (57, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

INode7_vtables_dispatch_ = 1
INode7_vtables_ = [
	(( 'TcpIpStackSetting' , 'pVal' , ), 58, (58, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

INode8_vtables_dispatch_ = 1
INode8_vtables_ = [
	(( 'IsGateway' , 'IsGateway' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'AttachedBuses' , 'pVal' , ), 60, (60, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'AttachBus' , 'aBus' , ), 61, (61, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DetachBus' , 'aBus' , ), 62, (62, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'IsBusAttached' , 'aBus' , 'isAttached' , ), 63, (63, (), [ (9, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

INodes_vtables_dispatch_ = 1
INodes_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9E2F76EB-D239-11D3-85E6-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'after' , 'before' , 'pVal' , 
			 ), 4, (4, (), [ (8, 1, None, None) , (12, 17, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{9E2F76EB-D239-11D3-85E6-00105A3E017B}')") , ], 1 , 1 , 4 , 2 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

INodes2_vtables_dispatch_ = 1
INodes2_vtables_ = [
	(( 'AddTestModule' , 'FullName' , 'pVal' , ), 6, (6, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{9E2F76EB-D239-11D3-85E6-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IOfflineGroup_vtables_dispatch_ = 1
IOfflineGroup_vtables_ = [
	(( 'GetMappingTable' , 'busTypeParam' , 'ppMapping' , ), 100, (100, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{FCE0251F-6728-429B-A26B-511903B7090B}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetMappingTableByBusName' , 'busName' , 'ppMapping' , ), 101, (101, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{FCE0251F-6728-429B-A26B-511903B7090B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ImportMappingTable' , 'fileName' , ), 102, (102, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ExportMappingTable' , 'fileName' , ), 103, (103, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GetChildren' , 'ppChildren' , ), 104, (104, (), [ (16393, 10, None, "IID('{73FF6BA0-1C7C-4B28-BD63-7A44BEBA0602}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'GetGroups' , 'ppChildren' , ), 105, (105, (), [ (16393, 10, None, "IID('{1618BDCC-A2BB-40E1-A136-E569F81B7933}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetLogFiles' , 'ppChildren' , ), 106, (106, (), [ (16393, 10, None, "IID('{483ADE4F-A34F-45AD-90E8-2DBD7FC3A2DC}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetVideoSources' , 'ppChildren' , ), 107, (107, (), [ (16393, 10, None, "IID('{BE54D021-BE83-44E0-B9EC-7EDE4A9BC621}')") , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetImageSequences' , 'ppChildren' , ), 108, (108, (), [ (16393, 10, None, "IID('{12371007-ACAA-4ADE-BEB1-3C7B3D13738E}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IOfflineGroup2_vtables_dispatch_ = 1
IOfflineGroup2_vtables_ = [
	(( 'SetMappingSet' , 'pMappingSet' , ), 109, (109, (), [ (9, 1, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetMappingSet' , 'pMappingSet' , ), 110, (110, (), [ (16393, 10, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IOfflineGroups_vtables_dispatch_ = 1
IOfflineGroups_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'ppVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'groupName' , 'ppVal' , ), 4, (4, (), [ (8, 0, None, None) , 
			 (16393, 10, None, "IID('{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IOfflineImageSequence_vtables_dispatch_ = 1
IOfflineImageSequence_vtables_ = [
	(( 'Directory' , 'pVal' , ), 100, (100, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Pattern' , 'pVal' , ), 101, (101, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IOfflineImageSequences_vtables_dispatch_ = 1
IOfflineImageSequences_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'ppVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{15C303D0-7428-491F-9EB5-CE56E3049536}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'imageSequenceFolder' , 'Pattern' , 'target' , 'ppVal' , 
			 ), 4, (4, (), [ (8, 1, None, None) , (8, 1, None, None) , (9, 1, None, None) , (16393, 10, None, "IID('{15C303D0-7428-491F-9EB5-CE56E3049536}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IOfflineLogFile_vtables_dispatch_ = 1
IOfflineLogFile_vtables_ = [
	(( 'Path' , 'pVal' , ), 100, (100, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetMappingTable' , 'busTypeParam' , 'ppMapping' , ), 101, (101, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{FCE0251F-6728-429B-A26B-511903B7090B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetMappingTableByBusName' , 'busName' , 'ppMapping' , ), 102, (102, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{FCE0251F-6728-429B-A26B-511903B7090B}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ImportMappingTable' , 'fileName' , ), 103, (103, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ExportMappingTable' , 'fileName' , ), 104, (104, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IOfflineLogFile2_vtables_dispatch_ = 1
IOfflineLogFile2_vtables_ = [
	(( 'SetMappingSet' , 'pMappingSet' , ), 105, (105, (), [ (9, 1, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetMappingSet' , 'pMappingSet' , ), 106, (106, (), [ (16393, 10, None, "IID('{FD0624C6-8033-430F-8554-AD323A46CDB5}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IOfflineLogFiles_vtables_dispatch_ = 1
IOfflineLogFiles_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'ppVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'logFilePath' , 'ppVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IOfflineSource_vtables_dispatch_ = 1
IOfflineSource_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IOfflineSource2_vtables_dispatch_ = 1
IOfflineSource2_vtables_ = [
	(( 'Sources' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IOfflineSource3_vtables_dispatch_ = 1
IOfflineSource3_vtables_ = [
	(( 'GetMappingTable' , 'busTypeParam' , 'ppMapping' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{FCE0251F-6728-429B-A26B-511903B7090B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetMappingTableByName' , 'busName' , 'ppMapping' , ), 8, (8, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{FCE0251F-6728-429B-A26B-511903B7090B}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IOfflineSource4_vtables_dispatch_ = 1
IOfflineSource4_vtables_ = [
	(( 'TimeSection' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IOfflineSource5_vtables_dispatch_ = 1
IOfflineSource5_vtables_ = [
	(( 'ImportMappingTable' , 'fileName' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ExportMappingTable' , 'fileName' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IOfflineSourceEx_vtables_dispatch_ = 1
IOfflineSourceEx_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TimeSettings' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{DA475018-9635-4372-9F22-B3A2FB91BFCC}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Targets' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IOfflineSourceExes_vtables_dispatch_ = 1
IOfflineSourceExes_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'ppVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2E69C9DD-51F3-43E7-A1AD-51893C17264F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AddGroup' , 'groupName' , 'ppVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{9637D60A-DC57-4A60-9D8F-268F86FE2E20}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddLogFile' , 'logFilePath' , 'ppVal' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AddVideo' , 'videoPath' , 'target' , 'ppVal' , ), 6, (6, (), [ 
			 (8, 1, None, None) , (9, 1, None, None) , (16393, 10, None, "IID('{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddImageSequence' , 'imageSequenceFolder' , 'Pattern' , 'target' , 'ppVal' , 
			 ), 7, (7, (), [ (8, 1, None, None) , (8, 1, None, None) , (9, 1, None, None) , (16393, 10, None, "IID('{15C303D0-7428-491F-9EB5-CE56E3049536}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 8, (8, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IOfflineTargets_vtables_dispatch_ = 1
IOfflineTargets_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'ppVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Item' , ), 4, (4, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IOfflineVideo_vtables_dispatch_ = 1
IOfflineVideo_vtables_ = [
	(( 'Path' , 'pVal' , ), 100, (100, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IOfflineVideos_vtables_dispatch_ = 1
IOfflineVideos_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'ppVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'videoPath' , 'target' , 'ppVal' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (9, 1, None, None) , (16393, 10, None, "IID('{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IOpenConfigurationResult_vtables_dispatch_ = 1
IOpenConfigurationResult_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'result' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ErrorMessage' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IPanel_vtables_dispatch_ = 1
IPanel_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Visible' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Top' , 'Top' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Top' , 'Top' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Left' , 'Left' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Left' , 'Left' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Orphaned' , 'Visible' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'Orphaned' , 'Visible' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
]

IPanel2_vtables_dispatch_ = 1
IPanel2_vtables_ = [
	(( 'WindowType' , 'pVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'WindowType' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IPanelSetup_vtables_dispatch_ = 1
IPanelSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Panels' , 'dwType' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SavePositions' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IPanelSetup2_vtables_dispatch_ = 1
IPanelSetup2_vtables_ = [
	(( 'DesktopFile' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DesktopFile' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LaunchControlOnLoad' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LaunchControlOnLoad' , 'pVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IPanelSetup3_vtables_dispatch_ = 1
IPanelSetup3_vtables_ = [
	(( 'WindowType' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'WindowType' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IPanels_vtables_dispatch_ = 1
IPanels_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2FCA3565-CDA6-11D3-85E1-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{2FCA3565-CDA6-11D3-85E1-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IParticipant_vtables_dispatch_ = 1
IParticipant_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pRetVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pRetVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IParticipants_vtables_dispatch_ = 1
IParticipants_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pRetVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'pIndex' , 'pRetVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'pRetVal' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pParticipantPath' , 'pRetVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'pIndex' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IPerformance_vtables_dispatch_ = 1
IPerformance_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'MaxNumMeasurementSetupThreads' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MaxNumMeasurementSetupThreads' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IPort_vtables_dispatch_ = 1
IPort_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SegmentName' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SegmentName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsSimulated' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsSimulated' , 'pVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IPort2_vtables_dispatch_ = 1
IPort2_vtables_ = [
	(( 'IsActive' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'IsActive' , 'pVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IPorts_vtables_dispatch_ = 1
IPorts_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'portName' , 'SegmentName' , 'pVal' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{D5FE2796-B4E3-4370-B567-89455FEBFE9B}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsSwitchedNetwork' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsSwitchedNetwork' , 'pVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPorts2_vtables_dispatch_ = 1
IPorts2_vtables_ = [
	(( 'networkName' , 'pVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IsPortBasedConfig' , 'pVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IsPortBasedConfig' , 'pVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IReference_vtables_dispatch_ = 1
IReference_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IReferences_vtables_dispatch_ = 1
IReferences_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IReplayBlock_vtables_dispatch_ = 1
IReplayBlock_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IReplayBlock2_vtables_dispatch_ = 1
IReplayBlock2_vtables_ = [
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Start' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Suspend' , ), 7, (7, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IReplayCollection_vtables_dispatch_ = 1
IReplayCollection_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{563ED104-7544-11D5-87D4-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'busTypeParam' , 'Name' , 'pVal' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{563ED104-7544-11D5-87D4-00105A3E017B}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IReportFilterSettings_vtables_dispatch_ = 1
IReportFilterSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestSteps' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestSteps' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestPatterns' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestPatterns' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MaxTestStepLevel' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MaxTestStepLevel' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsActive' , 'eventId' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SetActive' , 'eventId' , 'val' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IReportFilterSettings2_vtables_dispatch_ = 1
IReportFilterSettings2_vtables_ = [
	(( 'ReportedTestCases' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestCases' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

ISIM_vtables_dispatch_ = 1
ISIM_vtables_ = [
	(( 'SIMReset' , 'result' , ), 1, (1, (), [ (16402, 2, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SIMGetBaudrate' , 'result' , 'Baudrate' , 'Channel' , ), 2, (2, (), [ 
			 (16402, 2, None, None) , (16389, 2, None, None) , (18, 1, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SIMGetAnimationFactor' , 'AnimationFactor' , ), 3, (3, (), [ (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SIMRequest' , 'result' , 'Ident' , 'rtr' , 'DLC' , 
			 'Data' , 'action' , 'timeInc' , 'Channel' , ), 4, (4, (), [ 
			 (16402, 2, None, None) , (16403, 3, None, None) , (16401, 3, None, None) , (16401, 3, None, None) , (16396, 3, None, None) , 
			 (18, 1, None, None) , (19, 1, None, None) , (18, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SIMGetState' , 'result' , 'Ident' , 'rtr' , 'DLC' , 
			 'Data' , 'timeInc' , 'Channel' , ), 5, (5, (), [ (16402, 2, None, None) , 
			 (16403, 2, None, None) , (16401, 2, None, None) , (16401, 2, None, None) , (16396, 3, None, None) , (19, 1, None, None) , 
			 (18, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ISendNode_vtables_dispatch_ = 1
ISendNode_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'bActive' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'bActive' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISendNodes_vtables_dispatch_ = 1
ISendNodes_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISharedMemory_vtables_dispatch_ = 1
ISharedMemory_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddEnvVar' , 'Name' , 'nrOfValues' , 'pVal' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (3, 17, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AddSignal' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AddSysVar' , 'nsName' , 'Name' , 'nrOfValues' , 'arrayIndex' , 
			 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Size' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Valid' , 'pVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ISharedMemory2_vtables_dispatch_ = 1
ISharedMemory2_vtables_ = [
	(( 'AddSignal' , 'Name' , 'RawValue' , 'pVal' , ), 9, (9, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISharedMemory3_vtables_dispatch_ = 1
ISharedMemory3_vtables_ = [
	(( 'Version' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ISharedMemory4_vtables_dispatch_ = 1
ISharedMemory4_vtables_ = [
	(( 'AddSysVarMember' , 'svNameSpace' , 'variableAndMemberPath' , 'nrOfValues' , 'arrayIndex' , 
			 'pVal' , ), 11, (11, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ISharedMemory5_vtables_dispatch_ = 1
ISharedMemory5_vtables_ = [
	(( 'AddSignal2' , 'Name' , 'RawValue' , 'exchangeDataType' , 'pVal' , 
			 ), 12, (12, (), [ (8, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AddSysVar2' , 'nsName' , 'Name' , 'nrOfValues' , 'arrayIndex' , 
			 'RawValue' , 'exchangeDataType' , 'pVal' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AddSysVarMember2' , 'svNameSpace' , 'variableAndMemberPath' , 'nrOfValues' , 'arrayIndex' , 
			 'RawValue' , 'exchangeDataType' , 'pVal' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

ISharedMemory6_vtables_dispatch_ = 1
ISharedMemory6_vtables_ = [
	(( 'AddSysVarStruct' , 'nsName' , 'Name' , 'Size' , 'pVal' , 
			 ), 15, (15, (), [ (8, 1, None, None) , (8, 1, None, None) , (16387, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

ISharedMemory7_vtables_dispatch_ = 1
ISharedMemory7_vtables_ = [
	(( 'AddSysVarStruct2' , 'nsName' , 'Name' , 'Size' , 'elementOffsets' , 
			 'pVal' , ), 16, (16, (), [ (8, 1, None, None) , (8, 1, None, None) , (16387, 2, None, None) , 
			 (16396, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

ISharedMemory8_vtables_dispatch_ = 1
ISharedMemory8_vtables_ = [
	(( 'AddCOValueScalar' , 'portPath' , 'exchangeDataTypeLevel' , 'exchangeDataType' , 'pVal' , 
			 ), 17, (17, (), [ (8, 1, None, None) , (3, 1, None, None) , (16387, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AddCOValueScalarArray' , 'portPath' , 'nrOfValues' , 'exchangeDataTypeLevel' , 'dataExchangeByteArraySize' , 
			 'dataExchangeElementType' , 'pVal' , ), 18, (18, (), [ (8, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AddCOValueScalarArrayElement' , 'portPath' , 'arrayIndex' , 'exchangeDataTypeLevel' , 'dataExchangeByteArraySize' , 
			 'dataExchangeElementType' , 'pVal' , ), 19, (19, (), [ (8, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AddCOValueStructElementScalar' , 'portValueType' , 'portPath' , 'memberPath' , 'exchangeDataTypeLevel' , 
			 'unionElementType' , 'unionDiscriminatorIndexerPath' , 'unionDiscriminatorExpectedValue' , 'exchangeDataType' , 'pVal' , 
			 ), 20, (20, (), [ (3, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , (16387, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AddCOValueStructElementScalarArray' , 'portValueType' , 'portPath' , 'memberPath' , 'nrOfValues' , 
			 'exchangeDataTypeLevel' , 'unionElementType' , 'unionDiscriminatorIndexerPath' , 'unionDiscriminatorExpectedValue' , 'dataExchangeByteArraySize' , 
			 'dataExchangeElementType' , 'pVal' , ), 21, (21, (), [ (3, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , 
			 (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

ISharedMemorySetup_vtables_dispatch_ = 1
ISharedMemorySetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddAnalysisInput' , 'Name' , 'updateInterval' , 'pVal' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AddAnalysisOutput' , 'Name' , 'updateInterval' , 'pVal' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AddInput' , 'Name' , 'updateInterval' , 'pVal' , ), 5, (5, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AddOutput' , 'Name' , 'updateInterval' , 'pVal' , ), 6, (6, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISharedMemorySetup2_vtables_dispatch_ = 1
ISharedMemorySetup2_vtables_ = [
	(( 'AddAnalysisInput' , 'Name' , 'updateInterval' , 'pVersion' , 'pVal' , 
			 ), 7, (7, (), [ (8, 1, None, None) , (3, 1, None, None) , (16387, 3, None, None) , (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddAnalysisOutput' , 'Name' , 'updateInterval' , 'pVersion' , 'pVal' , 
			 ), 8, (8, (), [ (8, 1, None, None) , (3, 1, None, None) , (16387, 3, None, None) , (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddInput' , 'Name' , 'updateInterval' , 'pVersion' , 'pVal' , 
			 ), 9, (9, (), [ (8, 1, None, None) , (3, 1, None, None) , (16387, 3, None, None) , (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddOutput' , 'Name' , 'updateInterval' , 'pVersion' , 'pVal' , 
			 ), 10, (10, (), [ (8, 1, None, None) , (3, 1, None, None) , (16387, 3, None, None) , (16393, 10, None, "IID('{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ISharedMemorySetup3_vtables_dispatch_ = 1
ISharedMemorySetup3_vtables_ = [
	(( 'ReleaseAllPages' , ), 11, (11, (), [ ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

ISignal_vtables_dispatch_ = 1
ISignal_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'Value' , ), 0, (0, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'Value' , ), 0, (0, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RawValue' , 'Value' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'RawValue' , 'Value' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ISignal2_vtables_dispatch_ = 1
ISignal2_vtables_ = [
	(( 'FullName' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISignal3_vtables_dispatch_ = 1
ISignal3_vtables_ = [
	(( 'RxIndication' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TxConfirmation' , 'pVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FirstValue' , 'pVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Timeout' , 'pVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ISignal4_vtables_dispatch_ = 1
ISignal4_vtables_ = [
	(( 'IsOnline' , 'pVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

ISignals_vtables_dispatch_ = 1
ISignals_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{884DBC04-7A76-11D3-8571-00105A3E017B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ISignals2_vtables_dispatch_ = 1
ISignals2_vtables_ = [
	(( 'FullSignalName' , 'unique_name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'UniqueSignalName' , 'full_name' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISimulation_vtables_dispatch_ = 1
ISimulation_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CurrentTime' , 'current' , ), 3, (3, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CurrentTimeHigh' , 'currenthigh' , ), 4, (4, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IncrementTime' , 'timeInc' , ), 5, (5, (), [ (19, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ISimulation2_vtables_dispatch_ = 1
ISimulation2_vtables_ = [
	(( 'IncrementTimeAndWait' , 'timeInc' , ), 6, (6, (), [ (19, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NotificationType' , 'notificationTypeParam' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NotificationType' , 'notificationTypeParam' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Animation' , 'factor' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Animation' , 'factor' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ISimulationSetup_vtables_dispatch_ = 1
ISimulationSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Nodes' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Generators' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveGenerators' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ReplayCollection' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ISimulationSetup2_vtables_dispatch_ = 1
ISimulationSetup2_vtables_ = [
	(( 'Buses' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISimulationVB_vtables_dispatch_ = 1
ISimulationVB_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CurrentTime' , 'current' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CurrentTimeHigh' , 'currenthigh' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IncrementTime' , 'timeInc' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IncrementTimeAndWait' , 'timeInc' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NotificationType' , 'notificationTypeParam' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NotificationType' , 'notificationTypeParam' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Animation' , 'factor' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Animation' , 'factor' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ISingleFileDataSource_vtables_dispatch_ = 1
ISingleFileDataSource_vtables_ = [
	(( 'SourceFile' , 'pRetVal' , ), 200, (200, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SourceFile' , 'pRetVal' , ), 200, (200, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

ISnippet_vtables_dispatch_ = 1
ISnippet_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Run' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsRunning' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ISnippetFile_vtables_dispatch_ = 1
ISnippetFile_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Snippets' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ISnippetFiles_vtables_dispatch_ = 1
ISnippetFiles_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'fileName' , 'pVal' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISnippetSetup_vtables_dispatch_ = 1
ISnippetSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SnippetFiles' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

ISnippets_vtables_dispatch_ = 1
ISnippets_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{643C3621-EEF6-4274-97D7-C3AA1171EF5B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IStandaloneMode_vtables_dispatch_ = 1
IStandaloneMode_vtables_ = [
	(( 'ExportConfiguration' , 'rtcfg' , 'pResult' , ), 1, (1, (), [ (8, 1, None, None) , 
			 (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DownloadConfiguration' , 'pResult' , ), 2, (2, (), [ (16396, 2, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IStartValueList_vtables_dispatch_ = 1
IStartValueList_vtables_ = [
	(( 'Load' , 'FilePath' , 'pErrorMessage' , 'pResult' , ), 1, (1, (), [ 
			 (8, 1, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Append' , 'FilePath' , 'pErrorMessage' , 'pResult' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'FilePath' , 'pErrorMessage' , 'pResult' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'pErrorMessage' , 'pResult' , ), 4, (4, (), [ (16396, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

ISymbolMappings_vtables_dispatch_ = 1
ISymbolMappings_vtables_ = [
	(( 'Load' , 'mappingFilePath' , 'pErrorMessage' , 'pResult' , ), 1, (1, (), [ 
			 (8, 1, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Append' , 'mappingFilePath' , 'pErrorMessage' , 'pResult' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'mappingFilePath' , 'pErrorMessage' , 'pResult' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'pErrorMessage' , 'pResult' , ), 4, (4, (), [ (16396, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

ISystem_vtables_dispatch_ = 1
ISystem_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Namespaces' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

ISystem2_vtables_dispatch_ = 1
ISystem2_vtables_ = [
	(( 'VariablesFiles' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

ISystem3_vtables_dispatch_ = 1
ISystem3_vtables_ = [
	(( 'StrongTypedVariables' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'StrongTypedVariables' , 'pVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ITSTestModule_vtables_dispatch_ = 1
ITSTestModule_vtables_ = [
	(( 'FullName' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'StartOnMeasurement' , 'bActive' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'StartOnMeasurement' , 'bActive' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'StartOnEnvVar' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'StartOnEnvVar' , 'pVal' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'StartOnKey' , 'pVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'StartOnKey' , 'pVal' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationStyleSheet' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationStyleSheet' , 'pVal' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Report' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Libraries' , 'pVal' , ), 12, (12, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Modules' , 'pVal' , ), 13, (13, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Sequence' , 'pVal' , ), 14, (14, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Verdict' , 'pVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Start' , ), 16, (16, (), [ ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , ), 17, (17, (), [ ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

ITSTestModule2_vtables_dispatch_ = 1
ITSTestModule2_vtables_ = [
	(( 'Reload' , ), 18, (18, (), [ ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

ITSTestModule3_vtables_dispatch_ = 1
ITSTestModule3_vtables_ = [
	(( 'TestVariant' , 'pVal' , ), 19, (19, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TestVariant' , 'pVal' , ), 19, (19, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Pause' , ), 20, (20, (), [ ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Resume' , ), 21, (21, (), [ ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

ITSTestModule4_vtables_dispatch_ = 1
ITSTestModule4_vtables_ = [
	(( 'ExecuteRepeatedly' , 'pVal' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteRepeatedly' , 'pVal' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ExecutionMode' , 'pVal' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ExecutionMode' , 'pVal' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfExecutions' , 'pVal' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfExecutions' , 'pVal' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'SetExecutionTime' , 'days' , 'hours' , 'minutes' , 'success' , 
			 ), 25, (25, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'TestCasesExecutedInRandomOrder' , 'pVal' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'TestCasesExecutedInRandomOrder' , 'pVal' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'RandomizeEachCycle' , 'pVal' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'RandomizeEachCycle' , 'pVal' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'VerdictImpact' , 'pVal' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'VerdictImpact' , 'pVal' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DebugMode' , 'pVal' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'DebugMode' , 'pVal' , ), 29, (29, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'PausingMode' , 'pVal' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'PausingMode' , 'pVal' , ), 30, (30, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
]

ITSTestModule5_vtables_dispatch_ = 1
ITSTestModule5_vtables_ = [
	(( 'StartOnSysVar' , 'pVal' , ), 31, (31, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'StartOnSysVar' , 'pVal' , ), 31, (31, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'TestStateSysVar' , 'pVal' , ), 32, (32, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'TestStateSysVar' , 'pVal' , ), 32, (32, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
]

ITSTestModule6_vtables_dispatch_ = 1
ITSTestModule6_vtables_ = [
	(( 'TcpIpStackSetting' , 'pVal' , ), 33, (33, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
]

ITcpIpAdapter_vtables_dispatch_ = 1
ITcpIpAdapter_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Mtu' , 'pMtu' , ), 3, (3, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Mtu' , 'pMtu' , ), 3, (3, (), [ (19, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MacId' , 'pMacId' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MacId' , 'pMacId' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'busName' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ChannelName' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IpV4Setting' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'IpV6Setting' , 'pVal' , ), 8, (8, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Vlans' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ITcpIpAdapters_vtables_dispatch_ = 1
ITcpIpAdapters_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{212A97ED-1940-4733-8FE1-901B0AF8DB14}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ITcpIpStackSetting_vtables_dispatch_ = 1
ITcpIpStackSetting_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'TcpIpAdapters' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'StackSelection' , 'pStackSelection' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'StackSelection' , 'pStackSelection' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DelayedAckEnabled' , 'pEnabled' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DelayedAckEnabled' , 'pEnabled' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'RoutingEnabled' , 'pEnabled' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RoutingEnabled' , 'pEnabled' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'IPv4DefaultGateway' , 'pVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IPv4DefaultGateway' , 'pVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IPv6DefaultGateway' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IPv6DefaultGateway' , 'pVal' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

ITestCase_vtables_dispatch_ = 1
ITestCase_vtables_ = [
	(( 'Ident' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Verdict' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ITestConfiguration_vtables_dispatch_ = 1
ITestConfiguration_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Verdict' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'TestUnits' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{CC055F08-5DF6-4FD0-B375-E67976E81F42}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Report' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{BC887636-BB88-42E7-911D-97B8D0681467}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Start' , ), 8, (8, (), [ ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ITestConfiguration2_vtables_dispatch_ = 1
ITestConfiguration2_vtables_ = [
	(( 'Settings' , 'pVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{8D16877F-6BB0-4149-AD69-E44F6FBB330C}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'pVal' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Elements' , 'pVal' , ), 13, (13, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Pause' , ), 14, (14, (), [ ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Resume' , ), 15, (15, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ApplyVariants' , ), 16, (16, (), [ ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

ITestConfiguration3_vtables_dispatch_ = 1
ITestConfiguration3_vtables_ = [
	(( 'Running' , 'bRunning' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

ITestConfiguration4_vtables_dispatch_ = 1
ITestConfiguration4_vtables_ = [
	(( 'Id' , 'pVal' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ContainsId' , 'Id' , 'bContainsId' , ), 19, (19, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

ITestConfiguration5_vtables_dispatch_ = 1
ITestConfiguration5_vtables_ = [
	(( 'ApplyVariantsAsync' , ), 20, (20, (), [ ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

ITestConfiguration6_vtables_dispatch_ = 1
ITestConfiguration6_vtables_ = [
	(( 'TcpIpStackSetting' , 'pVal' , ), 21, (21, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

ITestConfiguration7_vtables_dispatch_ = 1
ITestConfiguration7_vtables_ = [
	(( 'SaveAndApplyVariantProfileAsync' , ), 22, (22, (), [ ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SaveVariantProfileAsAsync' , 'Name' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DeleteVariantProfileAsync' , 'Name' , ), 24, (24, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'RevertCurrentVariantProfile' , ), 25, (25, (), [ ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ImportVariantProfilesAsync' , 'Path' , ), 26, (26, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ExportCurrentVariantProfile' , 'Path' , ), 27, (27, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ExportAllVariantProfiles' , 'Path' , ), 28, (28, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'GetCurrentVariantProfile' , 'pVal' , ), 29, (29, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'SetVariantProfileAsync' , 'Name' , ), 30, (30, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ListAllVariantProfiles' , 'pVal' , ), 31, (31, (), [ (16393, 10, None, "IID('{9F64CBD2-C6F2-4BB7-B656-5D856796A16D}')") , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationReport_vtables_dispatch_ = 1
ITestConfigurationReport_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'UseJointReport' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationReport2_vtables_dispatch_ = 1
ITestConfigurationReport2_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'UseJointReport' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'UseJointReport' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FullPath' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FullPath' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LastWrittenFullPath' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationReport3_vtables_dispatch_ = 1
ITestConfigurationReport3_vtables_ = [
	(( 'TestRun' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TestRun' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FilterSettings' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheetEnabled' , 'bEnabled' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheetEnabled' , 'bEnabled' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pVal' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationReport4_vtables_dispatch_ = 1
ITestConfigurationReport4_vtables_ = [
	(( 'ReportFormat' , 'pVal' , ), 33, (33, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ReportFormat' , 'pVal' , ), 33, (33, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationReportFilterSettings_vtables_dispatch_ = 1
ITestConfigurationReportFilterSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestCases' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestCases' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestStepsCommands' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ReportedTestStepsCommands' , 'pVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MaxTestStepLevel' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MaxTestStepLevel' , 'pVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsActive' , 'eventId' , 'pVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SetActive' , 'eventId' , 'val' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationSettings_vtables_dispatch_ = 1
ITestConfigurationSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'StartOnMeasurement' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'StartOnMeasurement' , 'bEnabled' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'StartOnEnvVar' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'StartOnEnvVar' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'StartOnSysVar' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'StartOnSysVar' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'StartOnKey' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'StartOnKey' , 'pVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ExecutionMode' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ExecutionMode' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfExecutions' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfExecutions' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'VerdictImpact' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'VerdictImpact' , 'pVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SetExecutionTime' , 'days' , 'hours' , 'minutes' , 'success' , 
			 ), 10, (10, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationSettings2_vtables_dispatch_ = 1
ITestConfigurationSettings2_vtables_ = [
	(( 'RandomizeExecutionMode' , 'mode' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RandomizeExecutionMode' , 'mode' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreBreakOnFail' , 'bIgnored' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreBreakOnFail' , 'bIgnored' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DebugMode' , 'mode' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DebugMode' , 'mode' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DebugModePausingVerdict' , 'verdictMask' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DebugModePausingVerdict' , 'verdictMask' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationSettings3_vtables_dispatch_ = 1
ITestConfigurationSettings3_vtables_ = [
	(( 'StopOnEnvVar' , 'pVal' , ), 15, (15, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'StopOnEnvVar' , 'pVal' , ), 15, (15, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'StopOnSysVar' , 'pVal' , ), 16, (16, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'StopOnSysVar' , 'pVal' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'StopOnKey' , 'pVal' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'StopOnKey' , 'pVal' , ), 17, (17, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

ITestConfigurationSettings4_vtables_dispatch_ = 1
ITestConfigurationSettings4_vtables_ = [
	(( 'IgnoreBreakOnErrorInTestSystem' , 'bIgnored' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreBreakOnErrorInTestSystem' , 'bIgnored' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

ITestConfigurations_vtables_dispatch_ = 1
ITestConfigurations_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{41AA0642-6523-473C-8A58-57123E020859}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{41AA0642-6523-473C-8A58-57123E020859}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ITestEnvironment_vtables_dispatch_ = 1
ITestEnvironment_vtables_ = [
	(( 'FullName' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Modified' , 'pVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'Name' , 'promptUser' , ), 11, (11, (), [ (12, 17, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 2 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'Name' , 'major' , 'minor' , 'promptUser' , 
			 ), 12, (12, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 160 , (3, 0, None, None) , 0 , )),
]

ITestEnvironment2_vtables_dispatch_ = 1
ITestEnvironment2_vtables_ = [
	(( 'Folders' , 'pVal' , ), 13, (13, (), [ (16393, 10, None, "IID('{7AB2423A-58A5-4DEF-A50F-09547CFE38A1}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'TestModules' , 'pVal' , ), 14, (14, (), [ (16393, 10, None, "IID('{16086855-B312-436F-A11F-5C1FCA126BBC}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'StopSequence' , ), 15, (15, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

ITestEnvironments_vtables_dispatch_ = 1
ITestEnvironments_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{C7616799-F96E-4D03-861E-A7577ECB6741}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{C7616799-F96E-4D03-861E-A7577ECB6741}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , 'promptUser' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 104 , (3, 0, None, None) , 0 , )),
]

ITestGroup_vtables_dispatch_ = 1
ITestGroup_vtables_ = [
	(( 'Sequence' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ITestLibraries_vtables_dispatch_ = 1
ITestLibraries_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ITestLibrary_vtables_dispatch_ = 1
ITestLibrary_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ITestModules_vtables_dispatch_ = 1
ITestModules_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , 'promptUser' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 104 , (3, 0, None, None) , 0 , )),
]

ITestModules2_vtables_dispatch_ = 1
ITestModules2_vtables_ = [
	(( 'LinSlaveConformanceTesters' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{02BCC0B6-446D-4ED1-9EBE-038B1557290F}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ITestReport_vtables_dispatch_ = 1
ITestReport_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AutoNumbering' , 'bActive' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AutoNumbering' , 'bActive' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheetEnabled' , 'bEnabled' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheetEnabled' , 'bEnabled' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pVal' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GenerateReport' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

ITestReport2_vtables_dispatch_ = 1
ITestReport2_vtables_ = [
	(( 'FilterSettings' , 'pVal' , ), 11, (11, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

ITestReport3_vtables_dispatch_ = 1
ITestReport3_vtables_ = [
	(( 'GenerateReportAsync' , ), 12, (12, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

ITestReport4_vtables_dispatch_ = 1
ITestReport4_vtables_ = [
	(( 'LastWrittenFullName' , 'pVal' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

ITestReport5_vtables_dispatch_ = 1
ITestReport5_vtables_ = [
	(( 'ReportFormat' , 'pVal' , ), 33, (33, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ReportFormat' , 'pVal' , ), 33, (33, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

ITestSequence_vtables_dispatch_ = 1
ITestSequence_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{82813530-A143-438E-B2A7-50BEC44064BD}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ITestSequenceItem_vtables_dispatch_ = 1
ITestSequenceItem_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ITestSetup_vtables_dispatch_ = 1
ITestSetup_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'TestEnvironments' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SaveAll' , 'promptUser' , ), 4, (4, (), [ (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 80 , (3, 0, None, None) , 0 , )),
]

ITestSetupFolder_vtables_dispatch_ = 1
ITestSetupFolder_vtables_ = [
	(( 'Items' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Report' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteAll' , ), 7, (7, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ITestSetupFolderExt_vtables_dispatch_ = 1
ITestSetupFolderExt_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Report' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Folders' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{7AB2423A-58A5-4DEF-A50F-09547CFE38A1}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TestModules' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{16086855-B312-436F-A11F-5C1FCA126BBC}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteAll' , ), 8, (8, (), [ ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'StopSequence' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ITestSetupFolders_vtables_dispatch_ = 1
ITestSetupFolders_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E263A3BA-4C7A-4520-9784-47A45296ADA1}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E263A3BA-4C7A-4520-9784-47A45296ADA1}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , 'promptUser' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 104 , (3, 0, None, None) , 0 , )),
]

ITestSetupItem_vtables_dispatch_ = 1
ITestSetupItem_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ITestSetupItems_vtables_dispatch_ = 1
ITestSetupItems_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2E27EBE7-EC01-46E4-A6B8-813E8CBA5EAD}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AddFolder' , 'Name' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{02510C83-7ED1-404A-BB78-00C2B7B7D529}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddTestModule' , 'FullName' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , 'promptUser' , ), 6, (6, (), [ (12, 1, None, None) , 
			 (12, 17, None, None) , ], 1 , 1 , 4 , 1 , 112 , (3, 0, None, None) , 0 , )),
]

ITestTreeElement1_vtables_dispatch_ = 1
ITestTreeElement1_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Verdict' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Elements' , 'pVal' , ), 7, (7, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ITestTreeElement2_vtables_dispatch_ = 1
ITestTreeElement2_vtables_ = [
	(( 'Id' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ContainsId' , 'Id' , 'bContainsId' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ITestTreeElements_vtables_dispatch_ = 1
ITestTreeElements_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{57D81B0F-19E6-4682-8C24-6CF10A984A81}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ITestUnit_vtables_dispatch_ = 1
ITestUnit_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Verdict' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Report' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{8924FA59-9F14-4A3A-818D-FA1D1C2AFE2F}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ITestUnit2_vtables_dispatch_ = 1
ITestUnit2_vtables_ = [
	(( 'Name' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Report' , 'pVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FullPath' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'GetVariant' , 'Name' , 'pVal' , ), 11, (11, (), [ (8, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SetVariant' , 'Name' , 'val' , ), 12, (12, (), [ (8, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

ITestUnit3_vtables_dispatch_ = 1
ITestUnit3_vtables_ = [
	(( 'Id' , 'pVal' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ContainsId' , 'Id' , 'bContainsId' , ), 19, (19, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

ITestUnitReport_vtables_dispatch_ = 1
ITestUnitReport_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

ITestUnitReport2_vtables_dispatch_ = 1
ITestUnitReport2_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FullPath' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FullPath' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LastWrittenFullPath' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ITestUnitReport3_vtables_dispatch_ = 1
ITestUnitReport3_vtables_ = [
	(( 'StyleSheetEnabled' , 'bEnabled' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheetEnabled' , 'bEnabled' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'StyleSheet' , 'pVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ITestUnits_vtables_dispatch_ = 1
ITestUnits_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A25AD662-DCDC-4844-983D-F750631753F3}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ITestUnits2_vtables_dispatch_ = 1
ITestUnits2_vtables_ = [
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{7101A9AF-332E-4295-BF95-4A543D257F21}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ITesterSettings_vtables_dispatch_ = 1
ITesterSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddTraceSnapshotOnFailedTestCase' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AddTraceSnapshotOnFailedTestCase' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TraceWindowName' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TraceWindowName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ITimeSection_vtables_dispatch_ = 1
ITimeSection_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Start' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Start' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'End' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'End' , 'pVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ITimeSettings_vtables_dispatch_ = 1
ITimeSettings_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'StartTime' , 'pVal' , ), 3, (3, (), [ (16405, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'StartTime' , 'pVal' , ), 3, (3, (), [ (21, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'EndTime' , 'pVal' , ), 4, (4, (), [ (16405, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'EndTime' , 'pVal' , ), 4, (4, (), [ (21, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'pVal' , ), 5, (5, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'pVal' , ), 5, (5, (), [ (20, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ITrigger_vtables_dispatch_ = 1
ITrigger_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Start' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IUI_vtables_dispatch_ = 1
IUI_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Write' , 'pVal' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CommandEnabled' , 'command' , 'Enabled' , ), 6, (6, (), [ (8, 17, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CommandEnabled' , 'command' , 'Enabled' , ), 6, (6, (), [ (8, 17, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CommandEnabled' , 'command' , 'Enabled' , ), 6, (6, (), [ (8, 17, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CommandEnabled' , 'command' , 'Enabled' , ), 6, (6, (), [ (8, 17, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OpenDbDialog' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'OpenBaudrateDialog' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IUI2_vtables_dispatch_ = 1
IUI2_vtables_ = [
	(( 'ActivateDesktop' , 'Name' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IUserFile_vtables_dispatch_ = 1
IUserFile_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'bEnabled' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IUserFiles_vtables_dispatch_ = 1
IUserFiles_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IVANBusStatistic_vtables_dispatch_ = 1
IVANBusStatistic_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'BusLoad' , 'pVal' , ), 0, (0, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PeakLoad' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Data' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DataTotal' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ReplyRequest' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ReplyRequestTotal' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DeferredReply' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DeferredReplyTotal' , 'pVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ChipState' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IVariable_vtables_dispatch_ = 1
IVariable_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'Value' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'Value' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IVariable10_vtables_dispatch_ = 1
IVariable10_vtables_ = [
	(( 'GetMemberType' , 'member' , 'IsSigned' , 'memberType' , ), 37, (37, (), [ 
			 (8, 1, None, None) , (16395, 2, None, None) , (16403, 10, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

IVariable11_vtables_dispatch_ = 1
IVariable11_vtables_ = [
	(( 'GetMemberType2' , 'member' , 'IsSigned' , 'BitCount' , 'memberType' , 
			 ), 38, (38, (), [ (8, 1, None, None) , (16395, 2, None, None) , (16403, 2, None, None) , (16403, 10, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
]

IVariable2_vtables_dispatch_ = 1
IVariable2_vtables_ = [
	(( 'ValueAndTime' , 'pArray' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NotificationType' , 'notificationTypeParam' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NotificationType' , 'notificationTypeParam' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AnalysisOnly' , 'bIsAnalysisOnly' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AnalysisOnly' , 'bIsAnalysisOnly' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IVariable3_vtables_dispatch_ = 1
IVariable3_vtables_ = [
	(( 'ReadOnly' , 'bIsAnalysisOnly' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IVariable4_vtables_dispatch_ = 1
IVariable4_vtables_ = [
	(( 'MinValue' , 'MinValue' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'MaxValue' , 'MaxValue' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'pVal' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'pVal' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IVariable5_vtables_dispatch_ = 1
IVariable5_vtables_ = [
	(( 'SetSymbolicValueName' , 'Value' , 'Name' , ), 12, (12, (), [ (12, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GetSymbolicValueName' , 'Value' , 'pName' , ), 13, (13, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IVariable6_vtables_dispatch_ = 1
IVariable6_vtables_ = [
	(( 'Unit' , 'pVal' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'pVal' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IVariable7_vtables_dispatch_ = 1
IVariable7_vtables_ = [
	(( 'GetMemberValue' , 'member' , 'Value' , ), 15, (15, (), [ (8, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SetMemberValue' , 'member' , 'Value' , ), 16, (16, (), [ (8, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetMemberPhysValue' , 'member' , 'Value' , ), 17, (17, (), [ (8, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SetMemberPhysValue' , 'member' , 'Value' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BeginStructUpdate' , ), 19, (19, (), [ ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'EndStructUpdate' , ), 20, (20, (), [ ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IVariable8_vtables_dispatch_ = 1
IVariable8_vtables_ = [
	(( 'Type' , 'varType' , ), 21, (21, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 64 , )),
]

IVariable9_vtables_dispatch_ = 1
IVariable9_vtables_ = [
	(( 'IsSigned' , 'IsSigned' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'IsArray' , 'IsArray' , ), 23, (23, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'IsStruct' , 'IsStruct' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'IsMember' , 'IsMember' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BitCount' , 'BitCount' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ElementCount' , 'ElementCount' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PhysicalValue' , 'Value' , ), 28, (28, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PhysicalValue' , 'Value' , ), 28, (28, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PhysicalMinValue' , 'Value' , ), 29, (29, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PhysicalMaxValue' , 'Value' , ), 30, (30, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'InitValue' , 'Value' , ), 31, (31, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'InitValue' , 'Value' , ), 31, (31, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'PhysicalInitValue' , 'Value' , ), 32, (32, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'PhysicalInitValue' , 'Value' , ), 32, (32, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 33, (33, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'MemberName' , 'pVal' , ), 34, (34, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Members' , 'pMembers' , ), 35, (35, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Encodings' , 'pEncodings' , ), 36, (36, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
]

IVariableArray_vtables_dispatch_ = 1
IVariableArray_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Values' , 'pValues' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Values' , 'pValues' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IVariables_vtables_dispatch_ = 1
IVariables_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E172E995-EF4B-46FE-99BF-B99DAE854305}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'Value' , 'pVal' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (12, 17, None, None) , (16393, 10, None, "IID('{E172E995-EF4B-46FE-99BF-B99DAE854305}')") , ], 1 , 1 , 4 , 1 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IVariables2_vtables_dispatch_ = 1
IVariables2_vtables_ = [
	(( 'AddWriteable' , 'Name' , 'Value' , 'pVal' , ), 6, (6, (), [ 
			 (8, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{E172E995-EF4B-46FE-99BF-B99DAE854305}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IVariables3_vtables_dispatch_ = 1
IVariables3_vtables_ = [
	(( 'AddEx' , 'Name' , 'Value' , 'MinValue' , 'MaxValue' , 
			 'pVal' , ), 7, (7, (), [ (8, 1, None, None) , (12, 1, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (16393, 10, None, "IID('{E172E995-EF4B-46FE-99BF-B99DAE854305}')") , ], 1 , 1 , 4 , 2 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddWriteableEx' , 'Name' , 'Value' , 'MinValue' , 'MaxValue' , 
			 'pVal' , ), 8, (8, (), [ (8, 1, None, None) , (12, 1, None, None) , (12, 17, None, None) , 
			 (12, 17, None, None) , (16393, 10, None, "IID('{E172E995-EF4B-46FE-99BF-B99DAE854305}')") , ], 1 , 1 , 4 , 2 , 128 , (3, 0, None, None) , 0 , )),
]

IVariablesFile_vtables_dispatch_ = 1
IVariablesFile_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IVariablesFiles_vtables_dispatch_ = 1
IVariablesFiles_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E56B7F82-29B3-4977-85FD-E7994A570D03}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FullName' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E56B7F82-29B3-4977-85FD-E7994A570D03}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IVariantProfileNames_vtables_dispatch_ = 1
IVariantProfileNames_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppUnk' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IVersion2_vtables_dispatch_ = 1
IVersion2_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'major' , 'pVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'minor' , 'pVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Build' , 'pVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Patch' , 'pVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IVideoWindow_vtables_dispatch_ = 1
IVideoWindow_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RecordFile' , 'pVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RecordFile' , 'pVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetTriggerTimes' , 'preTriggerTime' , 'postTriggerTime' , ), 5, (5, (), [ (19, 1, None, None) , 
			 (19, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'StartRecording' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'StopRecording' , ), 7, (7, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IVideoWindow2_vtables_dispatch_ = 1
IVideoWindow2_vtables_ = [
	(( 'OfflineSourceType' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OfflineSourcePath' , 'pVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'OfflineLoggerCam' , 'pVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'OfflineLoggerPrefix' , 'pVal' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SetOfflineSource' , 'SourceType' , 'sourcePath' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (8, 17, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SetOfflineLoggerCam' , 'camType' , 'filePrefix' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (8, 17, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IVideoWindows_vtables_dispatch_ = 1
IVideoWindows_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{63008CF3-5A5C-42A8-9095-4B996EC15FC8}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IViewSynchronization_vtables_dispatch_ = 1
IViewSynchronization_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SetTime' , 'timeHigh' , 'time' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IViewSynchronization2_vtables_dispatch_ = 1
IViewSynchronization2_vtables_ = [
	(( 'SetTimeNS' , 'timeHigh' , 'time' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IVlan_vtables_dispatch_ = 1
IVlan_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'pVal' , ), 3, (3, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Priority' , 'pVal' , ), 4, (4, (), [ (16403, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IpV4Setting' , 'pVal' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IpV6Setting' , 'pVal' , ), 6, (6, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IVlans_vtables_dispatch_ = 1
IVlans_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'pnCount' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'index' , 'pVal' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( '_NewEnum' , 'ppEnum' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Id' , 'Priority' , 'pVal' , ), 4, (4, (), [ 
			 (19, 1, None, None) , (19, 1, None, None) , (16393, 10, None, "IID('{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'index' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IVttSutImportResult_vtables_dispatch_ = 1
IVttSutImportResult_vtables_ = [
	(( 'Application' , 'pRetVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pRetVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'success' , 'pRetVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CreatedApplicationModels' , 'pRetVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{C9ECF396-A1B4-4FB8-938E-0ED26AD41476}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CreatedDataSource' , 'pRetVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{0F3BAE57-2F92-450D-BA54-478F5B372173}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IWrite_vtables_dispatch_ = 1
IWrite_vtables_ = [
	(( 'Application' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pVal' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Output' , 'config' , ), 3, (3, (), [ (8, 17, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IWrite2_vtables_dispatch_ = 1
IWrite2_vtables_ = [
	(( 'EnableOutputFile' , 'outputFile' , 'tabIndex' , ), 6, (6, (), [ (8, 17, None, None) , 
			 (3, 17, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DisableOutputFile' , 'tabIndex' , ), 7, (7, (), [ (3, 17, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IWrite3_vtables_dispatch_ = 1
IWrite3_vtables_ = [
	(( 'Text' , 'pVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IXCPSetup_vtables_dispatch_ = 1
IXCPSetup_vtables_ = [
	(( 'ECUs' , 'pVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{1B987168-9FA2-460B-BAE5-7194F7CAE469}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
]

RecordMap = {
}

CLSIDToClassMap = {
	'{7AB2423A-58A5-4DEF-A50F-09547CFE38A1}' : ITestSetupFolders,
	'{E263A3BA-4C7A-4520-9784-47A45296ADA1}' : ITestSetupFolderExt,
	'{16086855-B312-436F-A11F-5C1FCA126BBC}' : ITestModules,
	'{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}' : ITSTestModule,
	'{2E27EBE7-EC01-46E4-A6B8-813E8CBA5EAD}' : ITestSetupItem,
	'{A3CBCE2E-A397-4464-8AA1-934255050384}' : TestSetupItem,
	'{71409476-01CA-46EB-89EA-960C6BB08B4D}' : ITSTestModule2,
	'{A774A824-018E-4A43-A546-E2659EB42860}' : ITSTestModule3,
	'{46A0D3DE-9A25-47E7-9A53-C685E1B07B34}' : ITSTestModule4,
	'{B117FD73-313E-4EC9-80E5-2A6611F25D23}' : ITSTestModule5,
	'{F500EEE4-D61F-4DF9-B292-B1436B13FC8D}' : ITSTestModule6,
	'{C6DB40F8-210C-40E2-A950-FCF23AF2BE62}' : _ITSTestModuleEvents,
	'{6A5391A1-8951-425F-9191-C4884FA3A27D}' : TSTestModule,
	'{B7DF9A0C-BF22-442C-B378-21CDDEF5A11B}' : ILinProtocolVersion,
	'{63AE269A-DC8F-4655-B6B8-080ED17AE91A}' : LinProtocolVersion,
	'{890EA72F-67EF-480D-AD38-C9841A7D053B}' : ITesterSettings,
	'{A377B29C-B668-44E6-9D2E-B7FC51C0A6D2}' : TesterSettings,
	'{86F18849-87B2-4DB2-8CF4-D4838C784E8A}' : IIUTSettings,
	'{A040F2ED-8FA7-4C0F-961C-1DA7D3362CB9}' : IIUTSettings2,
	'{5E7E7181-6279-408F-A0DE-F8D2DB93187D}' : IUTSettings,
	'{C889E7FD-B60A-4EDB-85DA-89B3102425E5}' : IIUTInitializationSettings,
	'{3B32AC37-53A3-449F-9617-7A0746706627}' : IUTInitializationSettings,
	'{7665020C-4F6E-459C-8C1E-58E792EA825D}' : ILinSlaveConformanceTester,
	'{D8CBC484-7179-4C23-ADF4-99AB03A8C89C}' : ILinSlaveConformanceTester2,
	'{BD53021B-F3EC-4B1B-950D-B7687DCBFB56}' : ILinSlaveConformanceTester3,
	'{7F029E34-1167-49E7-8859-193BDD1900C5}' : LinSlaveConformanceTester,
	'{02510C83-7ED1-404A-BB78-00C2B7B7D529}' : ITestSetupFolder,
	'{490B8989-674D-46BF-9D6E-6B093C138377}' : TestSetupFolder,
	'{3E1FBDF3-9E7A-4121-B50B-A0D04D77A47D}' : TestSetupFolderExt,
	'{02BCC0B6-446D-4ED1-9EBE-038B1557290F}' : ILinSlaveConformanceTesters,
	'{15AA4325-FF94-4B36-A9A1-B872D1BF22C2}' : LinSlaveConformanceTesters,
	'{3277C299-D4BB-4033-98BA-F29ED83453AB}' : ITestModules2,
	'{5326BCE6-000B-4C65-BF9E-E017EFAA7DE9}' : TestModules,
	'{C7616799-F96E-4D03-861E-A7577ECB6741}' : ITestEnvironment,
	'{6CA91FF6-FC46-4855-BCD8-B8D5F4EC948F}' : ITestEnvironment2,
	'{A932C329-690A-407B-AEEF-5C86183F5F01}' : TestEnvironment,
	'{832AD38C-C919-4BD1-8EEE-15C4628F409F}' : ITestEnvironments,
	'{86FD0C15-C362-44A6-8B42-09C124F40767}' : TestEnvironments,
	'{A715D071-E0FE-4010-9790-E100D69D1287}' : ITestSetup,
	'{8A1857E6-0CFF-49FD-ACF3-F5A6014D6BDD}' : TestSetup,
	'{88399322-23E3-4241-832C-5B5B19F948DD}' : IReportFilterSettings,
	'{F725388B-C761-4253-8614-84D979737488}' : IReportFilterSettings2,
	'{983EBD87-85F5-43D4-80AC-4874EC515083}' : ReportFilterSettings,
	'{76B814A5-CD92-4D68-B388-8FB1E24F4363}' : TestSetupFolders,
	'{1A19D0B2-6D95-402B-9D50-4E378636471D}' : ITestReport,
	'{5ECE511C-1419-4670-BFA9-49AA21F53F26}' : ITestReport2,
	'{C535C206-FAB5-4BCE-A597-BEA6D44E52B4}' : ITestReport3,
	'{C9B2849C-9342-4182-B6F7-119D51E2D10B}' : ITestReport4,
	'{D6370BF7-0091-4DB8-A645-54465C00F336}' : ITestReport5,
	'{02B511AB-85FC-45C1-A971-7D81B7E7C4A0}' : _ITestReportEvents,
	'{FF4EDCF9-6020-410C-8A41-915499F8818E}' : TestReport,
	'{B7CC0F27-2EE0-416B-852F-898D99F5F01F}' : ITestSetupItems,
	'{B0DDEC6D-84D4-4576-A222-021101CEEEFE}' : TestSetupItems,
	'{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}' : ITestLibrary,
	'{61567786-D67A-4E65-82B3-BADD16E106AA}' : TestLibrary,
	'{D7C09086-A9C6-4287-93A3-64D8230DED0F}' : ITestLibraries,
	'{406036D7-B464-42D0-BDCE-11D3A9B3D25A}' : TestLibraries,
	'{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}' : IReference,
	'{C5B2393E-46BC-410A-8533-9BEC023239BE}' : Reference,
	'{D8A35CD7-6FF9-42E6-A73A-DAE19E7392D0}' : IReferences,
	'{5608FED6-E922-4DED-80BF-027A6E0EB4FE}' : References,
	'{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}' : IModule,
	'{19A5E120-E223-46AA-BAA7-8D861C706F92}' : IModule2,
	'{79ACC0C0-2091-4D13-BFAE-650FF6F15E60}' : Module,
	'{5CB88F40-B525-436E-AC68-27D86DED6FE5}' : IModules,
	'{1DB49512-0FB1-4B48-B8AD-EB0647121FC6}' : Modules,
	'{603B588F-FC85-49BA-A21B-7EDBAFB0E815}' : ICANopen,
	'{C877EFE5-AF23-4D9B-B2A0-347884FDCE8E}' : CANOpen,
	'{82813530-A143-438E-B2A7-50BEC44064BD}' : ITestSequenceItem,
	'{FB1BAAE6-2667-4177-BFAC-4AB26F3CBF47}' : TestSequenceItem,
	'{7DD67620-CC5F-4234-8390-778053B1FF01}' : ITestCase,
	'{B69A3E69-6299-4EAA-BE75-E32DF48D2C87}' : TestCase,
	'{00C60991-E30D-424C-9851-0382F338F394}' : ITestGroup,
	'{70E92C02-05B9-47AA-B8DB-2925F8CC4A67}' : TestGroup,
	'{A7CD44E7-7CFC-4B71-9F7C-F3A947BA015F}' : ITestSequence,
	'{FF43D776-905D-4814-9CFE-5317E09DBED1}' : TestSequence,
	'{97FBEA50-A327-11D3-85BA-00105A3E017B}' : IWrite,
	'{2676A0A7-8EBB-4C0A-B355-F49CE34852FE}' : IWrite2,
	'{EF692849-4DFE-41A0-BCBA-4F4803B815A2}' : IWrite3,
	'{97FBEA51-A327-11D3-85BA-00105A3E017B}' : Write,
	'{CD866FB5-44BF-11D3-8538-00105A3E017B}' : IMeasurement,
	'{A844C1E0-F5CE-11D3-8612-00105A3E017B}' : IMeasurement2,
	'{B7C2B23A-B181-42C8-90A1-EAA9BB186CFE}' : IMeasurement3,
	'{C595EF75-B5B9-44A0-8811-BE195DE32B83}' : IMeasurement4,
	'{24CA2025-28DB-4982-AB11-C8BCB9C84782}' : IMeasurement5,
	'{CD866FB7-44BF-11D3-8538-00105A3E017B}' : _IMeasurementEvents,
	'{CD866FB6-44BF-11D3-8538-00105A3E017B}' : Measurement,
	'{2FCA3565-CDA6-11D3-85E1-00105A3E017B}' : IPanel,
	'{29FD885E-3E2D-47F9-86CD-02ED21730A36}' : IPanel2,
	'{2FCA3566-CDA6-11D3-85E1-00105A3E017B}' : Panel,
	'{2FCA3562-CDA6-11D3-85E1-00105A3E017B}' : IPanels,
	'{2FCA3563-CDA6-11D3-85E1-00105A3E017B}' : Panels,
	'{2FCA3561-CDA6-11D3-85E1-00105A3E017B}' : IPanelSetup,
	'{6C0F41B3-BA71-4DD2-8D5C-EE263A874125}' : IPanelSetup2,
	'{6952A532-6F9B-459E-90EA-1CFBFF495FAF}' : IPanelSetup3,
	'{3BC4EED1-D25F-11D3-85E6-00105A3E017B}' : _IPanelSetupEvents,
	'{2FCA3564-CDA6-11D3-85E1-00105A3E017B}' : PanelSetup,
	'{886978D0-CE60-11D3-85E2-00105A3E017B}' : ICANController,
	'{D2714009-2320-4F80-A822-FB3D82963BCF}' : ICANController2,
	'{7F07100E-0A04-43F1-AB50-25DD0351109B}' : ICANController3,
	'{FC1A677B-F176-4B58-A595-28AEBD452CCA}' : ICANController4,
	'{886978D1-CE60-11D3-85E2-00105A3E017B}' : CANController,
	'{52716DB7-DAE9-4365-8B5B-18B1492F728A}' : IChannel,
	'{7A5F5AE7-6840-43EF-B44F-CFBC25379BC3}' : Channel,
	'{9E0D95D2-4E76-4639-83AC-18BF4C1F13E8}' : IChannels,
	'{C539A226-09E6-46B0-B26A-7C5823634D21}' : Channels,
	'{9E2F76F2-D239-11D3-85E6-00105A3E017B}' : IDatabase,
	'{F053D71F-6F03-4C73-9944-EA0E505736F3}' : IDatabase2,
	'{9E2F76F3-D239-11D3-85E6-00105A3E017B}' : Database,
	'{9E2F76F0-D239-11D3-85E6-00105A3E017B}' : IDatabases,
	'{01A28209-9EC7-4F34-B749-7CFCE9A5E6FB}' : IDatabases2,
	'{882F452B-AE76-4F45-ABA5-D57764E1B742}' : IDatabases3,
	'{9E2F76F1-D239-11D3-85E6-00105A3E017B}' : Databases,
	'{9E2F76ED-D239-11D3-85E6-00105A3E017B}' : IDatabaseSetup,
	'{E79270BF-53D4-4580-B16D-B12F8AD3E863}' : IDatabaseSetup2,
	'{9E2F76EE-D239-11D3-85E6-00105A3E017B}' : _IDatabaseSetupEvents,
	'{9E2F76EF-D239-11D3-85E6-00105A3E017B}' : DatabaseSetup,
	'{48461816-4502-11D3-8539-00105A3E017B}' : IGeneralSetup,
	'{2FCA3560-CDA6-11D3-85E1-00105A3E017B}' : IGeneralSetup2,
	'{631B6EF2-9569-4CEB-B4CA-9F904931746E}' : IGeneralSetup3,
	'{307C84DA-3D82-4B89-8463-07002865E321}' : IGeneralSetup4,
	'{0A3615F3-7CBE-46DB-A7B4-B856D64FCE8C}' : IGeneralSetup5,
	'{9EE233E3-9DA7-4275-909D-CCC7864FA836}' : IGeneralSetup6,
	'{C736DD92-342C-43A3-B7F0-C5DA139D0E69}' : IGeneralSetup7,
	'{48461818-4502-11D3-8539-00105A3E017B}' : _IGeneralSetupEvents,
	'{48461817-4502-11D3-8539-00105A3E017B}' : GeneralSetup,
	'{A7566B40-D7E8-11D3-85EE-00105A3E017B}' : ICANBusStatistic,
	'{A7566B41-D7E8-11D3-85EE-00105A3E017B}' : CANBusStatistic,
	'{A7566B42-D7E8-11D3-85EE-00105A3E017B}' : IVANBusStatistic,
	'{A7566B43-D7E8-11D3-85EE-00105A3E017B}' : VANBusStatistic,
	'{A7566B44-D7E8-11D3-85EE-00105A3E017B}' : IMOSTBusStatistic,
	'{A7566B45-D7E8-11D3-85EE-00105A3E017B}' : MOSTBusStatistic,
	'{A7566B46-D7E8-11D3-85EE-00105A3E017B}' : IBusStatistics,
	'{A7566B47-D7E8-11D3-85EE-00105A3E017B}' : BusStatistics,
	'{86501547-EE2A-4C9B-AB8D-DBE8DFC4898B}' : IExporter,
	'{A5674E7A-6E30-4212-9EB8-F18F737BE098}' : IExporter2,
	'{A2847431-D884-4466-9D53-7647F44E8928}' : IExporter3,
	'{43E268FF-FE9E-404E-BB8D-918059BE3E25}' : Exporter,
	'{807B7C59-949C-42C1-AB88-D0E72E4DA54C}' : IExporterSymbol,
	'{29F3568E-2799-4174-8A4E-88C7EC90A65C}' : ExporterSymbol,
	'{E7EA5FC7-7172-4D40-83B5-E17A72202735}' : IExporterSymbols,
	'{0A9BF106-1A84-4980-85E9-A1112CBBB6C7}' : ExporterSymbols,
	'{B24DAF2F-B12B-4B19-BD8D-307685D86F5B}' : IFiles,
	'{9901B40E-02EF-415D-9B00-CBBEA95B24C4}' : Files,
	'{AE48C308-8B52-4652-8DA9-3EAF8DF5DF90}' : IFilter,
	'{DF4AFDA4-21D0-48B7-BB47-A430AEB2CC00}' : Filter,
	'{C93A1EA9-65EC-4AB4-A387-1114C76D8728}' : IExporterSettings,
	'{6B557B6C-56D5-4878-AB4B-119F776FF018}' : IExporterSettings2,
	'{1466533F-5817-4FE2-9C75-F967B3D38FED}' : IExporterSettings3,
	'{E0B8E1E0-2194-4399-BE92-DCAFCA15ED00}' : IExporterSettings4,
	'{764E7139-AB99-4646-B853-F9F88E514B7B}' : ExporterSettings,
	'{F1FEFF5E-2220-480A-87F9-A1409F8AEF2C}' : IExporterMdfSettings,
	'{B0FAF0B3-CD17-47FC-A4FC-31D23DD6A846}' : IExporterMdfSettings2,
	'{B5D35582-40D9-499B-95FC-D34C838F3ED5}' : ExporterMdfSettings,
	'{DA95146C-34A4-4981-AE69-5DF7B0E31F5C}' : IExporterDiademSettings,
	'{B9AB63A2-B46C-465F-B27A-CCF64DA7D4AC}' : ExporterDiademSettings,
	'{A4CFCA98-EA99-452D-8AAE-9F6CFC1A1DDC}' : IExporterMatlabSettings,
	'{F5B22B9D-7014-4ADF-A5D7-ED68D44709D8}' : IExporterMatlabSettings2,
	'{47FA0D24-EBF5-41C2-ADF2-7C2BC47DED97}' : ExporterMatlabSettings,
	'{74510D3B-CB8F-4C26-A273-A72E7EF4313F}' : IExporterCsvSettings,
	'{9BAEDEA1-533F-41FE-8AEE-1C8EE43357B0}' : ExporterCsvSettings,
	'{6146220C-F1E5-4FF0-BDBA-C136078723D2}' : IExporterCsvSettingsExt,
	'{13755E82-7617-4C0F-91C6-4197C334FB24}' : ExporterCsvSettingsExt,
	'{9F20E5A7-BD30-49F6-B863-FAF08A6725FD}' : IExporterXMLSettings,
	'{943F8293-B2CA-4B7E-B219-466F7482DFCB}' : ExporterXMLSettings,
	'{2B637549-F35E-4677-83D6-A33662590A7C}' : IExporterASCIISettings,
	'{BC646559-E963-4803-8747-59BCE4982B57}' : IExporterASCIISettings2,
	'{C8DDE103-2060-43B2-8CC6-8AA9F8CF7027}' : ExporterASCIISettings,
	'{B440D9AC-7226-46E4-A4BD-F17E22960740}' : ILoggingFileNameOptions,
	'{DD4129B5-8CBD-4A93-A6B3-A85DB99533E8}' : LoggingFileNameOptions,
	'{23DBC0EB-4827-47D5-A6AC-915EA2A54391}' : ILoggingFilter,
	'{948BA572-6E11-4C3A-A88E-8AE183BF76C4}' : LoggingFilter,
	'{89AA4460-BBA0-4AB1-A926-D81BAD5A1436}' : ITrigger,
	'{83844F35-B2F1-4692-AA7C-48AE8DD6ACCB}' : Trigger,
	'{FD859B9B-4E28-11D3-854C-00105A3E017B}' : ILogging,
	'{3BC4EED0-D25F-11D3-85E6-00105A3E017B}' : ILogging2,
	'{BD603B4E-CCEF-4AF8-A39B-B263EE8D381D}' : ILogging3,
	'{600B69E4-B501-474A-ABB6-81F0FAE3E3F4}' : ILogging4,
	'{34DCE56F-F608-4478-A2F0-371D22F78E2D}' : ILogging5,
	'{FD859B9C-4E28-11D3-854C-00105A3E017B}' : Logging,
	'{FD859B99-4E28-11D3-854C-00105A3E017B}' : ILoggingCollection,
	'{41313720-D242-11D3-85E6-00105A3E017B}' : ILoggingCollection2,
	'{FD859B9A-4E28-11D3-854C-00105A3E017B}' : LoggingCollection,
	'{FCE0251F-6728-429B-A26B-511903B7090B}' : IChannelMapping,
	'{5CE8F12F-09B4-4521-A7DC-558557DD2123}' : ChannelMapping,
	'{FD0624C6-8033-430F-8554-AD323A46CDB5}' : IChannelMappingSet,
	'{B12BE5BC-E26F-48C6-A6ED-554E34D8B615}' : ChannelMappingSet,
	'{32E135DC-1ABC-4D9D-8276-546393F7FCDE}' : IChannelMappingSets,
	'{EC8BE2DF-4F01-432C-AAA5-FF6D52C41C71}' : ChannelMappingSets,
	'{BCD7DA0D-D0A3-4394-BC11-25E23503A102}' : ITimeSection,
	'{E0BFE606-E6A6-4797-AA5E-FF4B38F927D8}' : TimeSection,
	'{DA475018-9635-4372-9F22-B3A2FB91BFCC}' : ITimeSettings,
	'{2E3E2DB6-AA45-4C2D-BC9B-04179D23092F}' : TimeSettings,
	'{F25C4137-A660-47D4-8E11-9AA0E0A58BC7}' : IOfflineSource,
	'{54D5BCF7-73A6-43AA-8E3F-D07EC9FCB456}' : IOfflineSource2,
	'{737BBFED-F0C7-4556-887B-18319F58361B}' : IOfflineSource3,
	'{876B6592-0F87-4978-BDC2-9C105C5D8833}' : IOfflineSource4,
	'{7FBBDC0F-2CBD-41D5-9B01-4FF9188856E1}' : IOfflineSource5,
	'{D180177F-4F3F-4B02-A3D2-990A975BABB1}' : OfflineSource,
	'{5BF6EF1D-62C2-4C87-B312-FE49C0184DAD}' : IOfflineTargets,
	'{DFB1D3D7-D0B8-4C5C-BE31-01A9BB3016FD}' : OfflineTargets,
	'{2E69C9DD-51F3-43E7-A1AD-51893C17264F}' : IOfflineSourceEx,
	'{9637D60A-DC57-4A60-9D8F-268F86FE2E20}' : IOfflineGroup,
	'{73FF6BA0-1C7C-4B28-BD63-7A44BEBA0602}' : IOfflineSourceExes,
	'{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}' : IOfflineLogFile,
	'{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}' : IOfflineVideo,
	'{15C303D0-7428-491F-9EB5-CE56E3049536}' : IOfflineImageSequence,
	'{1618BDCC-A2BB-40E1-A136-E569F81B7933}' : IOfflineGroups,
	'{483ADE4F-A34F-45AD-90E8-2DBD7FC3A2DC}' : IOfflineLogFiles,
	'{BE54D021-BE83-44E0-B9EC-7EDE4A9BC621}' : IOfflineVideos,
	'{12371007-ACAA-4ADE-BEB1-3C7B3D13738E}' : IOfflineImageSequences,
	'{79708026-C765-44D5-B633-9ACF8DBF8C47}' : OfflineSourceExes,
	'{12B51663-BB9C-4010-8308-56E3A2F2247C}' : IOfflineLogFile2,
	'{238A7264-980F-44EC-B8C5-F81777C5E93F}' : OfflineLogFile,
	'{D5F7A3F3-C1C6-4372-9B1E-81CFC3ACF408}' : OfflineLogFiles,
	'{D92BE9B6-DEED-45FC-9D6F-8FC806C052D8}' : OfflineVideo,
	'{F5BBD2E5-DA95-42DC-8C34-09D90EF1C8CF}' : OfflineVideos,
	'{1B5B551E-1260-4A63-B956-AD554A1DC0B0}' : OfflineImageSequence,
	'{2EFFFDB9-5ADE-4843-A5C7-F7CB7B9D34FF}' : OfflineImageSequences,
	'{6B6D944A-C4B1-4862-9C06-0420FF60FB5F}' : IOfflineGroup2,
	'{E27D9B1D-5DFD-4922-9DB8-50BC07867F3A}' : OfflineGroup,
	'{71845BBF-0E3B-450E-B95C-A0074B19761D}' : OfflineGroups,
	'{48461819-4502-11D3-8539-00105A3E017B}' : IMeasurementSetup,
	'{1F83A4C3-84C3-4AEC-896B-2B02E7E66D8B}' : IMeasurementSetup2,
	'{FD8C3E9D-7E1A-4CB7-BBA9-F8A18ADE703D}' : IMeasurementSetup3,
	'{2D583E50-64AB-435F-921C-44FD62076603}' : IMeasurementSetup4,
	'{93F4F447-DB35-4C9B-8EC8-56A65FB91D76}' : IMeasurementSetup5,
	'{71A7F1BA-0648-4858-BA2A-E53D82C5F86C}' : IMeasurementSetup6,
	'{A420AB31-1D1D-4744-AB74-5E5B6C208A61}' : IMeasurementSetup7,
	'{5E75239C-77D2-43BE-B753-117E42CD933F}' : IMeasurementSetup8,
	'{4846181B-4502-11D3-8539-00105A3E017B}' : _IMeasurementSetupEvents,
	'{4846181A-4502-11D3-8539-00105A3E017B}' : MeasurementSetup,
	'{0BF3185A-C2C0-4C2C-8DFD-5F324D078D0D}' : IViewSynchronization,
	'{F258EB3B-C1D5-4427-B712-A550D88E3926}' : IViewSynchronization2,
	'{DF8ABAE7-2A2F-442E-A37D-AB7DDB974BD7}' : _IViewSynchronizationEvents,
	'{6F214176-B587-49D1-826F-0776E127F1CA}' : ViewSynchronization,
	'{9E2F76EB-D239-11D3-85E6-00105A3E017B}' : INode,
	'{B2352A28-276B-448F-B37E-84501CA4FACC}' : INode2,
	'{6C852CF1-36B8-429B-9929-9663BEAE689D}' : INode3,
	'{25020040-8368-4238-AE0B-C0F7DCCA2F31}' : INode4,
	'{29AD5000-AFEF-448F-A349-29B63FC16DE6}' : INode5,
	'{C4F5ABAD-5B61-4C11-823C-CBA26599A8AD}' : INode6,
	'{C97D381B-ABA0-4D5F-80DB-78B1D67BD73D}' : INode7,
	'{184B1F6C-1BF1-487C-8D0C-EB936DFE395D}' : INode8,
	'{FD96E0A3-BE9F-4B65-8619-D839ABA29CAB}' : Node,
	'{9E2F76E3-D239-11D3-85E6-00105A3E017B}' : INodes,
	'{681BB5AD-8130-4BB7-A968-8C733E8351C2}' : INodes2,
	'{9E2F76E4-D239-11D3-85E6-00105A3E017B}' : Nodes,
	'{563ED100-7544-11D5-87D4-00105A3E017B}' : IGenerator,
	'{563ED101-7544-11D5-87D4-00105A3E017B}' : Generator,
	'{75718C11-7540-11D5-87D4-00105A3E017B}' : IGenerators,
	'{75718C12-7540-11D5-87D4-00105A3E017B}' : Generators,
	'{563ED102-7544-11D5-87D4-00105A3E017B}' : IInteractiveGenerator,
	'{563ED103-7544-11D5-87D4-00105A3E017B}' : InteractiveGenerator,
	'{75718C13-7540-11D5-87D4-00105A3E017B}' : IInteractiveGenerators,
	'{75718C14-7540-11D5-87D4-00105A3E017B}' : InteractiveGenerators,
	'{563ED104-7544-11D5-87D4-00105A3E017B}' : IReplayBlock,
	'{28F947A9-28D4-46A2-A35E-4F8D59B4DEE9}' : IReplayBlock2,
	'{563ED105-7544-11D5-87D4-00105A3E017B}' : ReplayBlock,
	'{75718C15-7540-11D5-87D4-00105A3E017B}' : IReplayCollection,
	'{75718C16-7540-11D5-87D4-00105A3E017B}' : ReplayCollection,
	'{884DBC02-7A76-11D3-8571-00105A3E017B}' : IBus,
	'{F7D40DFF-E021-46E8-9B7D-6659494332A3}' : IBus2,
	'{4F97CF13-EA62-45FA-B550-3742BDD1FA42}' : IBus3,
	'{03349138-55AD-445B-9613-D5A66E1B1945}' : IBusVB,
	'{2AB47E6A-B582-49A2-9FFE-7FAB4458AE76}' : IBusVB2,
	'{9BAA357B-E0D9-41B2-986F-AF11768825CA}' : IBusVB3,
	'{4E8960AC-3D6A-436F-9358-A2F2A030B6FE}' : IBusVB4,
	'{2F7C3359-835F-4F0F-A2DA-2DF1AB7F81B5}' : IBusVB5,
	'{884DBC03-7A76-11D3-8571-00105A3E017B}' : Bus,
	'{7BD20670-E36C-4752-928A-8782BE05E89C}' : IBuses,
	'{13F71310-908A-4E7C-9D03-1C8308909C33}' : IBuses2,
	'{41C470FC-DB1F-4286-9723-A5C39BBBDDAF}' : Buses,
	'{9E2F76E0-D239-11D3-85E6-00105A3E017B}' : ISimulationSetup,
	'{A97B6751-BD4A-41CB-96E2-7421211D5BAD}' : ISimulationSetup2,
	'{9E2F76E1-D239-11D3-85E6-00105A3E017B}' : _ISimulationSetupEvents,
	'{9E2F76E2-D239-11D3-85E6-00105A3E017B}' : SimulationSetup,
	'{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}' : IUserFile,
	'{8E2AE92D-9FD5-42DA-A902-4E66DE545BFC}' : UserFile,
	'{61CB1B7A-EC25-47EE-A956-0A6EE39FF651}' : IUserFiles,
	'{63BDF234-52E1-45C9-BBEB-AD6220B21ACA}' : UserFiles,
	'{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}' : IFDXFile,
	'{E6D06532-D722-42FC-AC35-3FBE5859B63E}' : FDXFile,
	'{F593A749-643D-4E0B-9053-E4499F966E6B}' : IFDXFiles,
	'{D1746F51-D04A-4BA3-A677-9C21992F5238}' : FDXFiles,
	'{8ED3F7CC-8617-43F7-BC5F-4B8B81FE301B}' : IFDXControl,
	'{BBFE8AE2-AB1A-4306-8B94-49B4DA8ADF9C}' : FDXControl,
	'{099E8EAA-5EBB-4296-BF34-9776CE620DAF}' : ICLibrary,
	'{B0DC4058-4BB9-4A81-BCAC-79BF2A272598}' : CLibrary,
	'{8E192C75-180E-42C1-9AEE-B4576C4A1CF3}' : ICLibraries,
	'{2FB74EE4-AFC4-47E8-8BE2-4C0193A82EDA}' : CLibraries,
	'{8CB2B4AC-9015-46F3-ADE2-1125E3211287}' : IStandaloneMode,
	'{DC2B1DF0-A135-4EFF-9E92-70CE86745D5D}' : StandaloneMode,
	'{CA8B2D7A-D1A3-4554-AB11-F22FCC057735}' : ISymbolMappings,
	'{321EF8A7-4CE1-4369-9506-ACC3CF936586}' : SymbolMappings,
	'{48461813-4502-11D3-8539-00105A3E017B}' : IConfiguration,
	'{0DE679A3-1A8D-4A67-89E6-9947D57D08DF}' : IConfiguration2,
	'{047E335F-4753-4AA9-861C-B160C8C83E0F}' : IConfiguration3,
	'{E729DBFC-6311-42E6-BAD4-FCEBBC4A000E}' : IConfiguration4,
	'{1CD41A88-CB14-4798-99A3-B6CCCC8D7D0D}' : IConfiguration5,
	'{AB129E85-90A2-4E49-B827-5629F2824886}' : IConfiguration6,
	'{CA957442-2B22-4D10-817A-4A45C44FC9BE}' : IConfiguration7,
	'{0C020520-9AE4-4E40-B8EF-73C3C47F5ED4}' : IConfiguration8,
	'{AEF6F116-845D-4A8D-BD2B-04DF0541B695}' : IConfiguration9,
	'{3EF16D5F-63A7-4377-A140-BE75C2ADA374}' : IConfiguration10,
	'{2D946D66-8742-408F-986D-19FEFFAAC15E}' : IConfiguration11,
	'{CCE5EF07-D3D2-4379-B535-EFEEBB760FE7}' : IConfiguration12,
	'{AF23782C-059A-4AEE-BA14-F016791F088B}' : IConfiguration13,
	'{87D3AD37-9A86-4348-B1CA-390F54F892F5}' : IConfiguration14,
	'{48461815-4502-11D3-8539-00105A3E017B}' : _IConfigurationEvents,
	'{2A98FF5A-1C94-49D5-8E9E-7EB0F533E9C3}' : ICommunicationSetup,
	'{BA6A18A8-6371-4134-A5B8-E946BDFFE9F4}' : IDataSourceSetup,
	'{68326796-7AF4-450E-983C-5C88DCA473E2}' : IDataSources,
	'{0F3BAE57-2F92-450D-BA54-478F5B372173}' : IDataSource,
	'{DF1E559B-B275-4A09-9B96-C15CA68809D4}' : IDataSourceBase,
	'{8AD94E96-2EA9-470B-911C-9CB3508C2CAD}' : IDataSourceImportParameters,
	'{47E1195E-8EC7-4B43-85D7-DA57BD9F7C7A}' : IDataSourceIssues,
	'{AF1D7F3E-D2D3-4C5F-B905-F021F964B85E}' : IDataSourceIssue,
	'{AAE18347-CE12-47D8-9928-53F639EA65E3}' : ISingleFileDataSource,
	'{3A89736B-D87A-4F9D-BE14-7A046908FBE8}' : IFileGroupDataSource,
	'{0F9ABA09-6F61-41F2-B64F-C532A7DE7D74}' : IDataSourceFiles,
	'{800CA71C-6A30-4095-81FC-3051D93501F9}' : IDataSourceFile,
	'{20A1C9AC-399F-4D79-85FC-A8001A66BB53}' : IApplicationModelSetup,
	'{C9ECF396-A1B4-4FB8-938E-0ED26AD41476}' : IApplicationModels,
	'{E63A92E2-E07A-4781-9071-FE8071D9E9B7}' : IApplicationModel,
	'{75202966-657C-40F0-942B-036353D2C52D}' : IApplicationModelFiles,
	'{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}' : IApplicationModelFile,
	'{102584C6-E00E-4A63-B2FA-5B79F7DA4DD9}' : IParticipants,
	'{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}' : IParticipant,
	'{D06241F9-C503-42D5-B148-10E8604F8959}' : IVttSutImportResult,
	'{B94CE167-6B2A-4673-9535-B5A51D46F2E6}' : IConfiguration15,
	'{BA9C4A1F-D0C7-47CD-B1DD-1B264D86D239}' : IConfiguration16,
	'{C48CBD4D-37D9-4600-AF6C-7C6ABF88F2D4}' : IConfiguration17,
	'{48461814-4502-11D3-8539-00105A3E017B}' : Configuration,
	'{3A1BEFB4-D9DD-4D31-901F-05CC393242F3}' : IVersion2,
	'{1B6FDCD2-317D-4D78-BF4B-0BD9E2A91840}' : Version,
	'{8CCE6464-54AE-11D3-8554-00105A3E017B}' : ICAPLFunction,
	'{A8507FAB-33D6-43C5-B9F5-3B74451A4C41}' : ICAPLFunction2,
	'{8CCE6465-54AE-11D3-8554-00105A3E017B}' : CAPLFunction,
	'{8CCE6460-54AE-11D3-8554-00105A3E017B}' : ICAPL,
	'{64DB5A30-CA9A-11D3-85DE-00105A3E017B}' : ICAPL2,
	'{295FD188-1876-4546-B8C3-6B4A5B6ED2F8}' : ICAPL3,
	'{958225A5-78A4-4698-98AE-5FCCA72BDF9A}' : ICAPL4,
	'{2AC67D1C-489D-4212-83ED-E7E58D616422}' : ICAPL5,
	'{8CCE6461-54AE-11D3-8554-00105A3E017B}' : CAPL,
	'{28978A10-8FA3-11D4-86C5-00105A3E017B}' : IEnvironmentInfo,
	'{28978A11-8FA3-11D4-86C5-00105A3E017B}' : EnvironmentInfo,
	'{8CCE6462-54AE-11D3-8554-00105A3E017B}' : IEnvironment,
	'{62C53880-8F88-11D4-86C5-00105A3E017B}' : IEnvironment2,
	'{6A1F8425-4994-4966-AC12-00EAB8B8F0B1}' : IEnvironment3,
	'{8CCE6463-54AE-11D3-8554-00105A3E017B}' : Environment,
	'{4793A120-7008-11D3-8566-00105A3E017B}' : IEnvironmentVariable,
	'{0D44F5D2-9B74-11D4-86D0-00105A3E017B}' : IEnvironmentVariable2,
	'{4793A122-7008-11D3-8566-00105A3E017B}' : _IEnvironmentVariableEvents,
	'{4793A121-7008-11D3-8566-00105A3E017B}' : EnvironmentVariable,
	'{4C9FD952-7671-11D3-856E-00105A3E017B}' : IEnvironmentArray,
	'{4C9FD953-7671-11D3-856E-00105A3E017B}' : EnvironmentArray,
	'{4C9FD950-7671-11D3-856E-00105A3E017B}' : IEnvironmentGroup,
	'{4C9FD951-7671-11D3-856E-00105A3E017B}' : EnvironmentGroup,
	'{884DBC00-7A76-11D3-8571-00105A3E017B}' : IUI,
	'{6CA22AED-1400-4811-A022-3C791766280F}' : IUI2,
	'{884DBC01-7A76-11D3-8571-00105A3E017B}' : UI,
	'{884DBC04-7A76-11D3-8571-00105A3E017B}' : ISignal,
	'{2A3D09AF-9CB5-4AC0-84CE-7F793629E408}' : ISignal2,
	'{C55B7B99-7017-4E0B-86DD-3D54D8E920A1}' : ISignal3,
	'{085534D2-1425-4710-90FF-B7D5C48ED627}' : ISignal4,
	'{884DBC05-7A76-11D3-8571-00105A3E017B}' : Signal,
	'{754F2E9C-1578-434F-8649-89C8C4715B1B}' : ISignals,
	'{E12E5261-5F8B-402A-8E85-C9CE9E53E864}' : ISignals2,
	'{F7882897-2BFA-45FE-BE03-29B52EC09CB0}' : Signals,
	'{277C0778-3DF7-415C-8335-69BD2C81914F}' : IMessage2,
	'{7AAAC432-B249-49E7-BD53-C397334DB8A3}' : Message,
	'{318BD7A4-9A09-4D38-A315-7946EDF75DE2}' : IMessages,
	'{6AE9A276-8F06-4DD6-ACB9-59FB2DA16E50}' : Messages,
	'{32B6F3C0-A271-11D3-85B9-00105A3E017B}' : ISimulation,
	'{0D44F5D0-9B74-11D4-86D0-00105A3E017B}' : ISimulation2,
	'{BF709443-6C1F-4A3F-8378-A07CAC452CE2}' : ISimulationVB,
	'{0D44F5D1-9B74-11D4-86D0-00105A3E017B}' : _ISimulationEvents,
	'{CA5C18B0-A1B0-11D3-85B7-00105A3E017B}' : Simulation,
	'{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}' : ISharedMemory,
	'{F95C2C1A-2BE7-4025-9318-7628D72823F5}' : ISharedMemory2,
	'{11E865EB-97B1-467A-B742-DF816A4035BE}' : ISharedMemory3,
	'{A047357E-67BA-4E2A-8982-44CE46F31975}' : ISharedMemory4,
	'{1DE7E1C5-53FB-495A-9404-D701572D71EA}' : ISharedMemory5,
	'{C64A9DB3-3856-4E6D-A042-EA086E4C88F0}' : ISharedMemory6,
	'{9AB9CC7B-77FC-4262-A067-A85987E1E5D6}' : ISharedMemory7,
	'{701B2FB6-58BF-4E6E-84D4-33540FB5F117}' : ISharedMemory8,
	'{D3711CB7-3059-4EFC-B7CD-B7898336598D}' : SharedMemory,
	'{54635EF1-0977-4317-AB0C-9E44E08F7DA6}' : ISharedMemorySetup,
	'{81ED9CE4-9097-4505-BD85-29653D997E97}' : ISharedMemorySetup2,
	'{5033D337-934B-428D-8A9F-8AEAEF097F43}' : ISharedMemorySetup3,
	'{9A0820B4-F046-4F26-9B53-704B87787A96}' : SharedMemorySetup,
	'{F87D41F0-7A2C-4212-9A3C-3436AF7B4A08}' : IEncoding,
	'{33276274-0E5C-4C7A-A134-B681E81BE6C6}' : Encoding,
	'{5CD2AC60-98D6-45C7-8872-B3E77F3D433A}' : IEncodings,
	'{E4664608-17D8-4DA1-9038-2A0A42B8FC74}' : Encodings,
	'{E172E995-EF4B-46FE-99BF-B99DAE854305}' : IVariable,
	'{D6898505-EBE9-4453-AF67-E8CAFE344D41}' : IVariable2,
	'{8CC2F044-16F7-4D33-92E4-9E92BBAD6D70}' : IVariable3,
	'{8B8AF3AF-4FF4-4DA5-952B-7C07FF654671}' : IVariable4,
	'{ED343C77-A3D5-418F-9059-8FBB9D0608EB}' : IVariable5,
	'{3F0112A4-A816-44DC-A95D-2E075EA1BAA5}' : IVariable6,
	'{6B50964C-B914-4EDF-921F-0A6F9E5AD6B9}' : IVariable7,
	'{B42FB853-B9BE-41DF-9085-E5821465B7E4}' : IVariable8,
	'{B98EB387-B9C7-4699-A3F2-01E216C9536E}' : IVariable9,
	'{4FB65BCF-FBBB-44BC-9DC3-61F58966BF6F}' : IVariable10,
	'{F25DC68D-2894-4D3F-BFF1-8E7464FEA91B}' : IVariable11,
	'{6AC60F41-28E6-47DD-A172-6AA345462974}' : _IVariableEvents,
	'{FB1A8BBE-584F-4669-B927-3567D70FF952}' : Variable,
	'{4D27AA78-B622-42E7-A237-3DA76B14A23D}' : IVariables,
	'{D667F629-CD0B-459E-B0DC-A9EF928568B5}' : IVariables2,
	'{2FB1BA83-C881-4B48-9366-94F2BFBE4AC6}' : IVariables3,
	'{A3D77EE1-0B95-4AEC-8D67-072E9657C7D3}' : Variables,
	'{894AADD6-AF47-4FF1-8973-D3DDEF44B3E8}' : IVariableArray,
	'{51315E01-B623-4484-9F05-6D20C02B7799}' : VariableArray,
	'{CE6F377E-4D0D-4E81-8C0D-83E86E059138}' : INamespace,
	'{E6CA6D70-305C-48F1-9110-E9C10681A317}' : INamespace2,
	'{AAF3953B-C75D-49EF-9FA6-40C7E1454B28}' : INamespace3,
	'{A76DB45F-6BBD-46CD-9B92-4AE56C6AE44F}' : Namespace,
	'{364BE355-1A0A-42B5-88A5-F30C425E680B}' : INamespaces,
	'{A3A324E4-AD29-424B-985A-45D5CBA39AA9}' : INamespaces2,
	'{DD6D4307-85D2-4869-84F8-72DE34DDFBC8}' : Namespaces,
	'{85D7B36A-E777-4521-BAC5-426DB03472B0}' : ISystem,
	'{E56B7F82-29B3-4977-85FD-E7994A570D03}' : IVariablesFile,
	'{A35AC08F-4B92-470A-A2C1-7C1C75319964}' : VariablesFile,
	'{2CE0ED53-874C-4C36-A84D-C5F189CD11DD}' : IVariablesFiles,
	'{1F59FD71-7B7C-4D7E-83F5-8E995EBB5508}' : VariablesFiles,
	'{CD3CCC4D-0EBF-4CA3-A341-3B5AD516293B}' : ISystem2,
	'{26745CBC-FF87-49A8-8625-0BB135957336}' : ISystem3,
	'{0EC3B32A-A27C-4165-B5AD-7FAECBA029C5}' : System,
	'{3A78038C-7975-4B22-B6E6-3B7FA14DB05F}' : INetworkInterface,
	'{BA8F7E90-DB49-403F-BD00-607BDF234358}' : IMostNetworkInterface,
	'{96A3DA17-7495-4E69-92CB-54986C3020AE}' : IMostNetworkInterface2,
	'{3A4DC1F2-D27C-454D-B1D8-B76D53B7B049}' : _IMostNetworkInterfaceEvents,
	'{1465BF57-23AD-4253-A4E9-52F615FAC47D}' : MostNetworkInterface,
	'{04EAB7E4-C61E-450F-93C0-63C4D404CE82}' : IMostApplicationFilter,
	'{8DC32A61-B317-4A52-A285-AC90B9F02367}' : MostApplicationFilter,
	'{BD0A81B5-73E5-471E-BD7B-768BE955461E}' : IApplicationSocket,
	'{3AD52BF6-800A-45CF-867E-D7AE77E32F08}' : _IApplicationSocketEvents,
	'{9894BF32-15B0-41D8-A5B8-C3CF911CF43C}' : ApplicationSocket,
	'{C794A707-99AF-4ED8-9A19-C99200795EA1}' : IAudioInterface,
	'{9E8E090A-ED0B-4CE8-BCA3-499856FAEA28}' : _IAudioInterfaceEvents,
	'{00F559D5-19A5-4118-BC6D-82EA6AF9749C}' : AudioInterface,
	'{640786C6-C75E-4EC3-88AA-DFC243B7D8B1}' : IMostDisassembler,
	'{C0921F97-0A08-477E-B383-D43BA8AEA47E}' : MostDisassembler,
	'{A4426049-F697-4710-8AB7-A2061D7A4829}' : IDisassembler,
	'{B122211A-DCA8-4A70-8198-C9193549409C}' : Disassembler,
	'{5F8F2157-19DA-4120-8847-7B93520F5584}' : NetworkInterface,
	'{4AE8E10D-C377-4D91-8B98-93001D597118}' : INetworkInterfaces,
	'{D6ABB000-1FE9-464B-A7BB-2C8BDC2155AC}' : NetworkInterfaces,
	'{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}' : IDevice,
	'{4AC62A49-AE4C-4417-BE90-34669360AF23}' : IDevice2,
	'{A4C7D0B0-4FEE-4C9D-89B3-4E9D43B57410}' : Device,
	'{6E19159C-1FFA-431A-9E50-E4ABDCF48E8E}' : IDevices,
	'{63B261DC-118F-4E71-BF6A-EC7B54B1B95D}' : Devices,
	'{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}' : INetwork,
	'{D2211BE8-670B-43E5-9897-F3E605807A0D}' : INetwork2,
	'{1B1447DB-1D6C-4637-B985-35FB7381960C}' : Network,
	'{0C8F9BF3-B15B-45C8-B3D2-0FDCD3D7C1CF}' : INetworks,
	'{C4D6EC2F-9E5B-46B7-9E29-543F160CCEA2}' : Networks,
	'{7C9AAED7-6F33-46AE-8B36-2B3FDC916EA7}' : IMacroSetup,
	'{7D7AA38C-5FFA-45B6-A511-7110E68E0C6A}' : MacroSetup,
	'{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}' : IMacro,
	'{044D15FF-F799-4964-90C9-05C94E7991B2}' : Macro,
	'{C3F935CF-F4D4-40A9-BB1A-8FDC72039A11}' : IMacros,
	'{E4B3EC09-AD48-43D5-8B50-3137F9933B2E}' : Macros,
	'{83D44C26-1EF7-4904-8786-59601330AFDD}' : ISnippetSetup,
	'{DBBFCDE8-7397-4892-97C7-B16A61D1F9D0}' : SnippetSetup,
	'{643C3621-EEF6-4274-97D7-C3AA1171EF5B}' : ISnippet,
	'{ABBDCC90-DDEA-43D9-B467-8268E3C151C6}' : Snippet,
	'{BE8EBE57-228C-4991-8B33-AD3E16FB5011}' : ISnippets,
	'{35EB8527-B815-4EA3-823A-69BDB263AA95}' : Snippets,
	'{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}' : ISnippetFile,
	'{36A3BDB7-640A-442E-A003-1F2955B4C283}' : SnippetFile,
	'{1BE207E7-5D66-4CC6-9CD7-43E36AE8D90E}' : ISnippetFiles,
	'{E9A42FF9-261E-4362-9A67-91F4A401F835}' : SnippetFiles,
	'{0B784BA8-4F32-11D3-854D-00105A3E017B}' : IApplication,
	'{828B275A-A2F3-4C5E-8A36-657577D39F93}' : IApplication2,
	'{BC190DA3-8645-4A14-BEE8-CE0486609043}' : IApplication3,
	'{7F4AF1B3-4CD9-495F-BD15-F95BD03A2516}' : IApplication4,
	'{4B6659E2-C9F5-46D8-B497-1E364FCE5A7A}' : IApplication5,
	'{4A0D68E0-E2E0-4260-A5EE-2363AD2BDB4B}' : IApplication6,
	'{4C8C05A7-13BB-4B14-983C-10C739C0C089}' : IApplication7,
	'{EC124917-C29B-4DEE-9690-D5F8E5E3DF1B}' : IApplication8,
	'{C38503D5-925B-4025-A5FD-74078957B257}' : IApplication9,
	'{D3F8A64F-7847-40F9-AA19-B50918174FA1}' : IApplication10,
	'{CD866FB4-44BF-11D3-8538-00105A3E017B}' : _IApplicationEvents,
	'{7F31DEB1-5BCC-11D3-8562-00105A3E017B}' : Application,
	'{73F7D5C1-E5BC-11D2-A3D7-00609768736E}' : ISIM,
	'{D54CED00-A490-11D2-A3D7-00609768736E}' : CANoeServer,
	'{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}' : IMcCANSettings,
	'{BBFCFB7E-7E6F-4271-A064-CD2AC49F7D91}' : IMcCANSettings1,
	'{67454196-BCD1-41FE-9942-9AD5E09751B3}' : IMcCANSettings2,
	'{F63D68FE-9255-40DF-A3F9-6E347A42BFC5}' : McCANSettings,
	'{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}' : IMcEthernetSettings,
	'{0F4C589B-ED4C-4FA6-BBB6-53E20E807207}' : McEthernetSettings,
	'{5D3422DB-CEFD-4D0E-93A9-84549709F577}' : IMcFlexRaySettings,
	'{BB4D9F36-C012-4A47-8765-4361F619EB09}' : IMcFlexRaySettings1,
	'{02FCFE42-E542-4BEC-8D16-F024B05C9A7B}' : McFlexRaySettings,
	'{E2575D00-23CD-4A17-8E3D-ACA974E63BFA}' : IMcLINSettings,
	'{AB1EEE97-FAE1-4762-AC91-DC5266B04946}' : McLINSettings,
	'{2C5CB149-1C81-43BF-8356-9FC01E7F4445}' : IMcDatabaseSignal,
	'{67812C38-1688-4651-8AAB-5DC651048E74}' : McDatabaseSignal,
	'{9A6830FC-0406-412B-B89A-00E4B36B6536}' : IMcDatabaseSignals,
	'{7095B02E-FAC2-4746-88C0-60BCE901B808}' : McDatabaseSignals,
	'{9143BDF8-5801-42C7-832C-CFABE5FE3948}' : IMcConfiguredSignal,
	'{F22E1DC6-E6A4-4392-B1F7-F8B613575E23}' : McConfiguredSignal,
	'{3B4B1378-DADB-405C-888C-42FAB14A0937}' : IMcConfiguredSignals,
	'{16FD50D3-D638-41CE-A7EB-7CC94BCE6887}' : McConfiguredSignals,
	'{98830394-D91B-4165-874A-9F3EA5885EA1}' : IMcParameter,
	'{9D815F19-D88D-4F34-9F49-D7DA65D7298C}' : McParameter,
	'{9CE780C2-C24D-4134-8FF6-8BA66173B9D9}' : IMcParameters,
	'{1895FF43-EFA7-4DCB-9E51-FAFFE6B60CAA}' : McParameters,
	'{7AD9B166-03A7-42CD-8672-31B107A57806}' : IMcMeasurementGroup,
	'{97329791-2957-4E7A-AFA6-ABA838244E58}' : IMcMeasurementGroup1,
	'{82B94993-4095-4C8E-99E0-72D0CFD100F9}' : McMeasurementGroup,
	'{9D75612D-C799-4D08-9F96-3996AE447EF2}' : IMcMeasurementGroups,
	'{8F2884CA-69EB-4102-983C-E6E5C2B387A3}' : McMeasurementGroups,
	'{64C33E85-D215-4166-840E-F6651DA438F0}' : IMcECU,
	'{379A92F4-9305-4D2C-835C-2469D0D6A79D}' : IMcECU1,
	'{D0C1E1A6-7AB8-4DD8-B8DA-515F37C44967}' : IMcECU2,
	'{0581A64F-476C-4BC6-B865-B45B60F16FC5}' : IMcECU3,
	'{017D194C-5BBC-4A49-B552-922908CFCEC2}' : IMcECU4,
	'{58867B26-B1C4-4171-A8FD-510A74BFE9C5}' : IMcECU5,
	'{2289A1A7-DAA6-418A-8601-7858B97BA150}' : IMcECU6,
	'{97E18ED8-FFAF-4CAF-A85F-43375E0EA4DE}' : McECU,
	'{42199FA2-ABAC-4494-AA99-C21F0BBA9C66}' : IMcECUs,
	'{1B987168-9FA2-460B-BAE5-7194F7CAE469}' : IMcECUs1,
	'{076B5716-A5ED-4BD2-891A-E365411BF3DC}' : McECUs,
	'{AEC1E946-BE26-4981-AAF7-0A9ECA360436}' : IXCPSetup,
	'{665DC99E-CAD9-49A0-A678-BECBC71DD93A}' : XCPSetup,
	'{F99938B4-3A2F-4B36-ABE2-31C4962B531F}' : ICCPSetup,
	'{202F6E75-6E15-4E85-86F5-1E31AEE16B71}' : CCPSetup,
	'{F245E20D-53FA-4C82-A849-1EB2F92450D6}' : IDiagnosticsSetup,
	'{E913F4F9-D757-4625-9E9A-BD5A649B77EC}' : DiagnosticsSetup,
	'{0F8B4279-132B-4AD1-88DF-96837286F5D0}' : IDiagVariant,
	'{0549FFD8-44EB-4AF0-90C3-4E72AF6F273D}' : DiagVariant,
	'{A6D6D5B8-B94A-4E5C-9627-8A379EFCADB2}' : IDiagVariants,
	'{9ED438B7-D055-4B03-ADF2-C1771A374AA0}' : DiagVariants,
	'{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}' : IDiagDescription,
	'{0B764757-2F83-4493-A185-E4AA29BD8EEF}' : IAdditionalDescription,
	'{094FC1CC-96B5-43B9-84D0-4AED35E4678C}' : AdditionalDescription,
	'{30A3777D-547E-4B3A-AE6E-242132FC426C}' : IAdditionalDescriptions,
	'{A1082BC2-71A2-4390-8DE9-C887C889984A}' : AdditionalDescriptions,
	'{BF67872C-7B26-4505-B1FF-CBDC26F6E011}' : IInterpretationOrder,
	'{73285601-F71A-4F73-B086-DC317658B740}' : InterpretationOrder,
	'{E99F67E5-C326-468E-BDD6-C2EB11695006}' : IDiagDescription2,
	'{8942AFAD-7E6A-4643-82C6-FBFE9DF6E8B2}' : IDiagDescription3,
	'{992386A7-CB76-4875-9B65-DEBADC98DEF2}' : IDiagDescription4,
	'{B33D021E-DF9F-491D-8E98-48B3461E71B3}' : IDiagDescription5,
	'{8B5D3D37-8158-4E98-99CB-168043AAEF49}' : IDiagDescription6,
	'{0ECA866E-61D3-4874-9FFE-D6BD9AEC7E02}' : DiagDescription,
	'{4BDE2B63-9C03-4434-AB9D-2A09FF7B6F80}' : IDiagDescriptions,
	'{BC600EF4-0210-4D7C-9CC5-FB44EE09C294}' : IDiagDescriptions2,
	'{9CED63DB-D1C2-4CAB-8718-CE238D10E91C}' : DiagDescriptions,
	'{283D0C00-B32E-4EE4-BD03-441F5CDA810F}' : ICompileResult,
	'{031CD126-8258-4CD4-8264-CC848B0BFBBD}' : CompileResult,
	'{BA4CBD24-0E31-4C72-8758-78842128A91F}' : IOpenConfigurationResult,
	'{18584844-AFCE-451F-A155-CCA1CED12B15}' : OpenConfigurationResult,
	'{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}' : ISendNode,
	'{F344C7F7-A4A2-4FC0-BD13-C6F6050D3426}' : SendNode,
	'{1170E6A0-7C88-4E73-B387-6BADE0B0A48B}' : ISendNodes,
	'{40A12CBD-AB8B-427F-A304-419DB8CF28E2}' : SendNodes,
	'{E3BBD70F-A187-4A83-AD8B-03D78265B2AF}' : IPerformance,
	'{DE9CCB1F-FE4A-43F4-942D-C27013A7B397}' : Performance,
	'{8924FA59-9F14-4A3A-818D-FA1D1C2AFE2F}' : ITestUnitReport,
	'{79C2403E-14B1-4C4C-81E7-F1D5DDA9C143}' : ITestUnitReport2,
	'{E3420774-A352-4FA5-B4F0-E2693A76FE3B}' : ITestUnitReport3,
	'{C36F463D-B9FF-4E16-A2C0-B1964C8421FA}' : _ITestUnitReportEvents,
	'{C0A2A4FC-26B3-431E-BA90-3D725012FB04}' : TestUnitReport,
	'{57D81B0F-19E6-4682-8C24-6CF10A984A81}' : ITestTreeElement1,
	'{09E17429-8E58-4B7D-96BD-860B634F075C}' : ITestTreeElement2,
	'{7B0669D3-5B36-43F2-B513-AC08AE6093E0}' : TestTreeElement,
	'{A00F3381-2821-4258-ACD4-7AACD16FD1FF}' : ITestTreeElements,
	'{2A3433D9-C68B-41DA-BBFF-BD808F501D06}' : TestTreeElements,
	'{A25AD662-DCDC-4844-983D-F750631753F3}' : ITestUnit,
	'{7101A9AF-332E-4295-BF95-4A543D257F21}' : ITestUnit2,
	'{B2EF4B1D-1908-4C2A-A9AF-07EDFC50010C}' : ITestUnit3,
	'{B59ED397-7804-4FBB-95C1-87FF759E760F}' : TestUnit,
	'{CC055F08-5DF6-4FD0-B375-E67976E81F42}' : ITestUnits,
	'{0ABE0B62-8C71-4DD4-BFF5-19B18C0CB345}' : ITestUnits2,
	'{B66F5723-54E6-4D53-89E1-CA25B0D1B5B8}' : TestUnits,
	'{55217A2D-832D-4768-BAD7-1B6B3D19D9A6}' : ITestConfigurationReportFilterSettings,
	'{6DFAB307-89D8-4344-BB5B-BF40EEDFAC48}' : TestConfigurationReportFilterSettings,
	'{BC887636-BB88-42E7-911D-97B8D0681467}' : ITestConfigurationReport,
	'{E970C973-243C-4F44-AD57-EED6AC429342}' : ITestConfigurationReport2,
	'{BAAEF49A-D7AD-4EA1-A3F6-B4318D1FAD41}' : ITestConfigurationReport3,
	'{9E85F768-1B1C-4D26-9EEB-3A0BBAEBA374}' : ITestConfigurationReport4,
	'{840961AD-15FB-45B7-8493-C0AC2DE5C5D3}' : _ITestConfigurationReportEvents,
	'{AB1EE4BF-EB3E-4AF0-96AC-4C4050633EA3}' : TestConfigurationReport,
	'{8D16877F-6BB0-4149-AD69-E44F6FBB330C}' : ITestConfigurationSettings,
	'{32D8C5C4-4E98-4D35-85E8-4FFFBFD0B7C5}' : ITestConfigurationSettings2,
	'{73138884-E89A-4560-91E4-ABE2A8B4D5AE}' : ITestConfigurationSettings3,
	'{369D42D9-095C-402E-82B7-DE421D0CC79C}' : ITestConfigurationSettings4,
	'{242CE8FB-6C01-456C-BAF6-38AFA74F7843}' : TestConfigurationSettings,
	'{9F64CBD2-C6F2-4BB7-B656-5D856796A16D}' : IVariantProfileNames,
	'{E73129B3-B05A-419A-B00F-118AA3E0E38F}' : VariantProfileNames,
	'{41AA0642-6523-473C-8A58-57123E020859}' : ITestConfiguration,
	'{0E81621C-E241-41C2-B18C-913EFA939A05}' : ITestConfiguration2,
	'{D3B9590D-503A-43BA-8BEE-190E0BDDF9B4}' : ITestConfiguration3,
	'{BAC68327-029F-458D-9C87-6C7EFC276CA9}' : ITestConfiguration4,
	'{490B7A27-FB8E-47ED-BE1F-274166004269}' : ITestConfiguration5,
	'{6E686DFA-9F5C-49C7-9993-D7CBD4E9DB6A}' : ITestConfiguration6,
	'{EC34E24D-11A5-40C1-809A-53258622E1ED}' : ITestConfiguration7,
	'{1E0577C8-B62F-43E7-A896-3E171A1BA9DF}' : _ITestConfigurationEvents,
	'{B00A2245-2B50-408B-B2A9-597460111486}' : TestConfiguration,
	'{CC065BBC-C124-4F43-A8C8-BE54D736197E}' : ITestConfigurations,
	'{CC053D94-6CC0-481A-BACA-EF0B0BC33FFD}' : TestConfigurations,
	'{63008CF3-5A5C-42A8-9095-4B996EC15FC8}' : IVideoWindow,
	'{63008CF3-5A5C-42A8-9095-4B996EC15FC9}' : IVideoWindow2,
	'{5BAE3260-AD4F-45F9-A110-F64CADC955AA}' : VideoWindow,
	'{53E11521-81AC-4D16-A147-17A68F40A7B7}' : IVideoWindows,
	'{AEAEF5EF-E37E-4CD1-A65E-27C5EC8C903A}' : VideoWindows,
	'{82D6EC01-1A53-46FD-8026-C3E9F24DBCAC}' : IStartValueList,
	'{2B6E6A79-8C83-4CAB-837C-D218FCB4F75B}' : StartValueList,
	'{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}' : IIpNetworkAddress,
	'{5CBFC6F5-3BFE-4DAC-B54F-62DFA410464C}' : IpNetworkAddress,
	'{A19229D7-CD25-4877-8C52-7691E1EECA8F}' : IIpNetworkAddressList,
	'{861C0BCA-45BC-4A0F-9257-F128A93790BF}' : IpNetworkAddressList,
	'{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}' : IVlan,
	'{EE0F1462-1359-4FBD-933F-3912CD5865E6}' : Vlan,
	'{8A32A0E9-C1A1-4E8B-94DA-C6910338C058}' : IVlans,
	'{145F2519-541A-407E-85A9-B6F18AECE6C4}' : Vlans,
	'{D898B690-6B35-40D2-9968-3B97DA3CB932}' : IIpSetting,
	'{E995CBE7-526C-464D-83F7-F72F8D08B8B1}' : IpSetting,
	'{212A97ED-1940-4733-8FE1-901B0AF8DB14}' : ITcpIpAdapter,
	'{C023D52A-E45A-49AA-B6A0-40A654A33592}' : TcpIpAdapter,
	'{2E642C88-22F4-4F61-8A3A-FE9790A1F3C2}' : ITcpIpAdapters,
	'{BA3A99FC-F8C5-44E1-ABC9-0060090ED9BD}' : TcpIpAdapters,
	'{61E75232-C8A9-4C15-8818-4C41DD579A23}' : ITcpIpStackSetting,
	'{24EC9175-1C91-493D-96FF-89DC8E1A1543}' : TcpIpStackSetting,
	'{D5FE2796-B4E3-4370-B567-89455FEBFE9B}' : IPort,
	'{56722E45-899F-4733-9638-627A0743BECD}' : IPort2,
	'{836A0C24-4BBD-4D44-9CEC-A715FFF9CA82}' : Port,
	'{15E2A6C6-48F5-4F00-9406-4CF1A8B576A0}' : IPorts,
	'{8E121922-A12C-47FB-8A33-47ACA0D80751}' : IPorts2,
	'{5C63E7EC-50FD-4844-A457-C08184E33DD5}' : Ports,
	'{E56FBBB1-317E-4340-A588-0DDA95B2922E}' : IARXMLImportParameters,
	'{CD8065CD-59C5-4681-81FD-C39946FAFB8C}' : CommunicationSetup,
	'{0C44B6A3-FEB2-4913-AC3C-E8CF54ACA3C2}' : VttSutImportResult,
	'{64D565BE-4D4F-421C-9058-5433260703A6}' : DataSourceIssue,
	'{A49B6C3A-0923-4DAE-AD77-459AC1DDEBBA}' : DataSourceSetup,
	'{D4C1E81F-3858-453B-9F4E-E57BDD4D2B0A}' : DataSourceBase,
	'{FF9081E5-8A96-461A-8A1A-3BEBEED16DA5}' : DataSource,
	'{EF5B78B7-A7EF-46AE-909E-A97FAE458FB9}' : SingleFileDataSource,
	'{F492F7DA-6D46-49FD-8254-1C0633791B34}' : FileGroupDataSource,
	'{32BF5C41-397A-42B6-82D3-3842E90DD832}' : DataSourceFile,
	'{8727551E-24B3-46D2-8C63-FAF798CA70EB}' : ApplicationModelSetup,
	'{DAB1810C-B0CB-4D4C-9BFD-C9AB8FB2E68F}' : ApplicationModel,
	'{2306E68C-5EFD-4CDF-9B1B-46A306C627F2}' : ApplicationModelFile,
	'{DD8CA9BA-EE85-481B-B107-FB7A46680151}' : Participant,
	'{F38D7030-C528-4CE0-B38A-952EE58E0A7F}' : ARXMLImportParameters,
	'{2A37DADB-03E5-4980-8794-73A935C14DB7}' : DataSourceIssues,
	'{6F30F320-A550-4286-9FBD-AD71D89F68FB}' : DataSources,
	'{5FEE3F8C-4781-42CF-98B4-FF3CEFEAFEEF}' : DataSourceFiles,
	'{3FA83260-DC0B-4AA5-8550-8FAF585944F5}' : ApplicationModels,
	'{14E96426-79F5-4D61-8B78-25CEDD7C8325}' : ApplicationModelFiles,
	'{44C130F9-7508-4464-AE48-37FA7BAD6613}' : Participants,
	'{CB14D616-FD76-46C7-9F77-48247EF3ED71}' : ICANoe4Server,
	'{A1FDF8F0-4ABF-4FBE-97F2-D05456D3A985}' : CANoe4Server,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
	'{7AB2423A-58A5-4DEF-A50F-09547CFE38A1}' : 'ITestSetupFolders',
	'{E263A3BA-4C7A-4520-9784-47A45296ADA1}' : 'ITestSetupFolderExt',
	'{16086855-B312-436F-A11F-5C1FCA126BBC}' : 'ITestModules',
	'{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}' : 'ITSTestModule',
	'{2E27EBE7-EC01-46E4-A6B8-813E8CBA5EAD}' : 'ITestSetupItem',
	'{71409476-01CA-46EB-89EA-960C6BB08B4D}' : 'ITSTestModule2',
	'{A774A824-018E-4A43-A546-E2659EB42860}' : 'ITSTestModule3',
	'{46A0D3DE-9A25-47E7-9A53-C685E1B07B34}' : 'ITSTestModule4',
	'{B117FD73-313E-4EC9-80E5-2A6611F25D23}' : 'ITSTestModule5',
	'{F500EEE4-D61F-4DF9-B292-B1436B13FC8D}' : 'ITSTestModule6',
	'{B7DF9A0C-BF22-442C-B378-21CDDEF5A11B}' : 'ILinProtocolVersion',
	'{890EA72F-67EF-480D-AD38-C9841A7D053B}' : 'ITesterSettings',
	'{86F18849-87B2-4DB2-8CF4-D4838C784E8A}' : 'IIUTSettings',
	'{A040F2ED-8FA7-4C0F-961C-1DA7D3362CB9}' : 'IIUTSettings2',
	'{C889E7FD-B60A-4EDB-85DA-89B3102425E5}' : 'IIUTInitializationSettings',
	'{7665020C-4F6E-459C-8C1E-58E792EA825D}' : 'ILinSlaveConformanceTester',
	'{D8CBC484-7179-4C23-ADF4-99AB03A8C89C}' : 'ILinSlaveConformanceTester2',
	'{BD53021B-F3EC-4B1B-950D-B7687DCBFB56}' : 'ILinSlaveConformanceTester3',
	'{02510C83-7ED1-404A-BB78-00C2B7B7D529}' : 'ITestSetupFolder',
	'{02BCC0B6-446D-4ED1-9EBE-038B1557290F}' : 'ILinSlaveConformanceTesters',
	'{3277C299-D4BB-4033-98BA-F29ED83453AB}' : 'ITestModules2',
	'{C7616799-F96E-4D03-861E-A7577ECB6741}' : 'ITestEnvironment',
	'{6CA91FF6-FC46-4855-BCD8-B8D5F4EC948F}' : 'ITestEnvironment2',
	'{832AD38C-C919-4BD1-8EEE-15C4628F409F}' : 'ITestEnvironments',
	'{A715D071-E0FE-4010-9790-E100D69D1287}' : 'ITestSetup',
	'{88399322-23E3-4241-832C-5B5B19F948DD}' : 'IReportFilterSettings',
	'{F725388B-C761-4253-8614-84D979737488}' : 'IReportFilterSettings2',
	'{1A19D0B2-6D95-402B-9D50-4E378636471D}' : 'ITestReport',
	'{5ECE511C-1419-4670-BFA9-49AA21F53F26}' : 'ITestReport2',
	'{C535C206-FAB5-4BCE-A597-BEA6D44E52B4}' : 'ITestReport3',
	'{C9B2849C-9342-4182-B6F7-119D51E2D10B}' : 'ITestReport4',
	'{D6370BF7-0091-4DB8-A645-54465C00F336}' : 'ITestReport5',
	'{B7CC0F27-2EE0-416B-852F-898D99F5F01F}' : 'ITestSetupItems',
	'{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}' : 'ITestLibrary',
	'{D7C09086-A9C6-4287-93A3-64D8230DED0F}' : 'ITestLibraries',
	'{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}' : 'IReference',
	'{D8A35CD7-6FF9-42E6-A73A-DAE19E7392D0}' : 'IReferences',
	'{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}' : 'IModule',
	'{19A5E120-E223-46AA-BAA7-8D861C706F92}' : 'IModule2',
	'{5CB88F40-B525-436E-AC68-27D86DED6FE5}' : 'IModules',
	'{603B588F-FC85-49BA-A21B-7EDBAFB0E815}' : 'ICANopen',
	'{82813530-A143-438E-B2A7-50BEC44064BD}' : 'ITestSequenceItem',
	'{7DD67620-CC5F-4234-8390-778053B1FF01}' : 'ITestCase',
	'{00C60991-E30D-424C-9851-0382F338F394}' : 'ITestGroup',
	'{A7CD44E7-7CFC-4B71-9F7C-F3A947BA015F}' : 'ITestSequence',
	'{97FBEA50-A327-11D3-85BA-00105A3E017B}' : 'IWrite',
	'{2676A0A7-8EBB-4C0A-B355-F49CE34852FE}' : 'IWrite2',
	'{EF692849-4DFE-41A0-BCBA-4F4803B815A2}' : 'IWrite3',
	'{CD866FB5-44BF-11D3-8538-00105A3E017B}' : 'IMeasurement',
	'{A844C1E0-F5CE-11D3-8612-00105A3E017B}' : 'IMeasurement2',
	'{B7C2B23A-B181-42C8-90A1-EAA9BB186CFE}' : 'IMeasurement3',
	'{C595EF75-B5B9-44A0-8811-BE195DE32B83}' : 'IMeasurement4',
	'{24CA2025-28DB-4982-AB11-C8BCB9C84782}' : 'IMeasurement5',
	'{2FCA3565-CDA6-11D3-85E1-00105A3E017B}' : 'IPanel',
	'{29FD885E-3E2D-47F9-86CD-02ED21730A36}' : 'IPanel2',
	'{2FCA3562-CDA6-11D3-85E1-00105A3E017B}' : 'IPanels',
	'{2FCA3561-CDA6-11D3-85E1-00105A3E017B}' : 'IPanelSetup',
	'{6C0F41B3-BA71-4DD2-8D5C-EE263A874125}' : 'IPanelSetup2',
	'{6952A532-6F9B-459E-90EA-1CFBFF495FAF}' : 'IPanelSetup3',
	'{886978D0-CE60-11D3-85E2-00105A3E017B}' : 'ICANController',
	'{D2714009-2320-4F80-A822-FB3D82963BCF}' : 'ICANController2',
	'{7F07100E-0A04-43F1-AB50-25DD0351109B}' : 'ICANController3',
	'{FC1A677B-F176-4B58-A595-28AEBD452CCA}' : 'ICANController4',
	'{52716DB7-DAE9-4365-8B5B-18B1492F728A}' : 'IChannel',
	'{9E0D95D2-4E76-4639-83AC-18BF4C1F13E8}' : 'IChannels',
	'{9E2F76F2-D239-11D3-85E6-00105A3E017B}' : 'IDatabase',
	'{F053D71F-6F03-4C73-9944-EA0E505736F3}' : 'IDatabase2',
	'{9E2F76F0-D239-11D3-85E6-00105A3E017B}' : 'IDatabases',
	'{01A28209-9EC7-4F34-B749-7CFCE9A5E6FB}' : 'IDatabases2',
	'{882F452B-AE76-4F45-ABA5-D57764E1B742}' : 'IDatabases3',
	'{9E2F76ED-D239-11D3-85E6-00105A3E017B}' : 'IDatabaseSetup',
	'{E79270BF-53D4-4580-B16D-B12F8AD3E863}' : 'IDatabaseSetup2',
	'{48461816-4502-11D3-8539-00105A3E017B}' : 'IGeneralSetup',
	'{2FCA3560-CDA6-11D3-85E1-00105A3E017B}' : 'IGeneralSetup2',
	'{631B6EF2-9569-4CEB-B4CA-9F904931746E}' : 'IGeneralSetup3',
	'{307C84DA-3D82-4B89-8463-07002865E321}' : 'IGeneralSetup4',
	'{0A3615F3-7CBE-46DB-A7B4-B856D64FCE8C}' : 'IGeneralSetup5',
	'{9EE233E3-9DA7-4275-909D-CCC7864FA836}' : 'IGeneralSetup6',
	'{C736DD92-342C-43A3-B7F0-C5DA139D0E69}' : 'IGeneralSetup7',
	'{A7566B40-D7E8-11D3-85EE-00105A3E017B}' : 'ICANBusStatistic',
	'{A7566B42-D7E8-11D3-85EE-00105A3E017B}' : 'IVANBusStatistic',
	'{A7566B44-D7E8-11D3-85EE-00105A3E017B}' : 'IMOSTBusStatistic',
	'{A7566B46-D7E8-11D3-85EE-00105A3E017B}' : 'IBusStatistics',
	'{86501547-EE2A-4C9B-AB8D-DBE8DFC4898B}' : 'IExporter',
	'{A5674E7A-6E30-4212-9EB8-F18F737BE098}' : 'IExporter2',
	'{A2847431-D884-4466-9D53-7647F44E8928}' : 'IExporter3',
	'{807B7C59-949C-42C1-AB88-D0E72E4DA54C}' : 'IExporterSymbol',
	'{E7EA5FC7-7172-4D40-83B5-E17A72202735}' : 'IExporterSymbols',
	'{B24DAF2F-B12B-4B19-BD8D-307685D86F5B}' : 'IFiles',
	'{AE48C308-8B52-4652-8DA9-3EAF8DF5DF90}' : 'IFilter',
	'{C93A1EA9-65EC-4AB4-A387-1114C76D8728}' : 'IExporterSettings',
	'{6B557B6C-56D5-4878-AB4B-119F776FF018}' : 'IExporterSettings2',
	'{1466533F-5817-4FE2-9C75-F967B3D38FED}' : 'IExporterSettings3',
	'{E0B8E1E0-2194-4399-BE92-DCAFCA15ED00}' : 'IExporterSettings4',
	'{F1FEFF5E-2220-480A-87F9-A1409F8AEF2C}' : 'IExporterMdfSettings',
	'{B0FAF0B3-CD17-47FC-A4FC-31D23DD6A846}' : 'IExporterMdfSettings2',
	'{DA95146C-34A4-4981-AE69-5DF7B0E31F5C}' : 'IExporterDiademSettings',
	'{A4CFCA98-EA99-452D-8AAE-9F6CFC1A1DDC}' : 'IExporterMatlabSettings',
	'{F5B22B9D-7014-4ADF-A5D7-ED68D44709D8}' : 'IExporterMatlabSettings2',
	'{74510D3B-CB8F-4C26-A273-A72E7EF4313F}' : 'IExporterCsvSettings',
	'{6146220C-F1E5-4FF0-BDBA-C136078723D2}' : 'IExporterCsvSettingsExt',
	'{9F20E5A7-BD30-49F6-B863-FAF08A6725FD}' : 'IExporterXMLSettings',
	'{2B637549-F35E-4677-83D6-A33662590A7C}' : 'IExporterASCIISettings',
	'{BC646559-E963-4803-8747-59BCE4982B57}' : 'IExporterASCIISettings2',
	'{B440D9AC-7226-46E4-A4BD-F17E22960740}' : 'ILoggingFileNameOptions',
	'{23DBC0EB-4827-47D5-A6AC-915EA2A54391}' : 'ILoggingFilter',
	'{89AA4460-BBA0-4AB1-A926-D81BAD5A1436}' : 'ITrigger',
	'{FD859B9B-4E28-11D3-854C-00105A3E017B}' : 'ILogging',
	'{3BC4EED0-D25F-11D3-85E6-00105A3E017B}' : 'ILogging2',
	'{BD603B4E-CCEF-4AF8-A39B-B263EE8D381D}' : 'ILogging3',
	'{600B69E4-B501-474A-ABB6-81F0FAE3E3F4}' : 'ILogging4',
	'{34DCE56F-F608-4478-A2F0-371D22F78E2D}' : 'ILogging5',
	'{FD859B99-4E28-11D3-854C-00105A3E017B}' : 'ILoggingCollection',
	'{41313720-D242-11D3-85E6-00105A3E017B}' : 'ILoggingCollection2',
	'{FCE0251F-6728-429B-A26B-511903B7090B}' : 'IChannelMapping',
	'{FD0624C6-8033-430F-8554-AD323A46CDB5}' : 'IChannelMappingSet',
	'{32E135DC-1ABC-4D9D-8276-546393F7FCDE}' : 'IChannelMappingSets',
	'{BCD7DA0D-D0A3-4394-BC11-25E23503A102}' : 'ITimeSection',
	'{DA475018-9635-4372-9F22-B3A2FB91BFCC}' : 'ITimeSettings',
	'{F25C4137-A660-47D4-8E11-9AA0E0A58BC7}' : 'IOfflineSource',
	'{54D5BCF7-73A6-43AA-8E3F-D07EC9FCB456}' : 'IOfflineSource2',
	'{737BBFED-F0C7-4556-887B-18319F58361B}' : 'IOfflineSource3',
	'{876B6592-0F87-4978-BDC2-9C105C5D8833}' : 'IOfflineSource4',
	'{7FBBDC0F-2CBD-41D5-9B01-4FF9188856E1}' : 'IOfflineSource5',
	'{5BF6EF1D-62C2-4C87-B312-FE49C0184DAD}' : 'IOfflineTargets',
	'{2E69C9DD-51F3-43E7-A1AD-51893C17264F}' : 'IOfflineSourceEx',
	'{9637D60A-DC57-4A60-9D8F-268F86FE2E20}' : 'IOfflineGroup',
	'{73FF6BA0-1C7C-4B28-BD63-7A44BEBA0602}' : 'IOfflineSourceExes',
	'{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}' : 'IOfflineLogFile',
	'{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}' : 'IOfflineVideo',
	'{15C303D0-7428-491F-9EB5-CE56E3049536}' : 'IOfflineImageSequence',
	'{1618BDCC-A2BB-40E1-A136-E569F81B7933}' : 'IOfflineGroups',
	'{483ADE4F-A34F-45AD-90E8-2DBD7FC3A2DC}' : 'IOfflineLogFiles',
	'{BE54D021-BE83-44E0-B9EC-7EDE4A9BC621}' : 'IOfflineVideos',
	'{12371007-ACAA-4ADE-BEB1-3C7B3D13738E}' : 'IOfflineImageSequences',
	'{12B51663-BB9C-4010-8308-56E3A2F2247C}' : 'IOfflineLogFile2',
	'{6B6D944A-C4B1-4862-9C06-0420FF60FB5F}' : 'IOfflineGroup2',
	'{48461819-4502-11D3-8539-00105A3E017B}' : 'IMeasurementSetup',
	'{1F83A4C3-84C3-4AEC-896B-2B02E7E66D8B}' : 'IMeasurementSetup2',
	'{FD8C3E9D-7E1A-4CB7-BBA9-F8A18ADE703D}' : 'IMeasurementSetup3',
	'{2D583E50-64AB-435F-921C-44FD62076603}' : 'IMeasurementSetup4',
	'{93F4F447-DB35-4C9B-8EC8-56A65FB91D76}' : 'IMeasurementSetup5',
	'{71A7F1BA-0648-4858-BA2A-E53D82C5F86C}' : 'IMeasurementSetup6',
	'{A420AB31-1D1D-4744-AB74-5E5B6C208A61}' : 'IMeasurementSetup7',
	'{5E75239C-77D2-43BE-B753-117E42CD933F}' : 'IMeasurementSetup8',
	'{0BF3185A-C2C0-4C2C-8DFD-5F324D078D0D}' : 'IViewSynchronization',
	'{F258EB3B-C1D5-4427-B712-A550D88E3926}' : 'IViewSynchronization2',
	'{9E2F76EB-D239-11D3-85E6-00105A3E017B}' : 'INode',
	'{B2352A28-276B-448F-B37E-84501CA4FACC}' : 'INode2',
	'{6C852CF1-36B8-429B-9929-9663BEAE689D}' : 'INode3',
	'{25020040-8368-4238-AE0B-C0F7DCCA2F31}' : 'INode4',
	'{29AD5000-AFEF-448F-A349-29B63FC16DE6}' : 'INode5',
	'{C4F5ABAD-5B61-4C11-823C-CBA26599A8AD}' : 'INode6',
	'{C97D381B-ABA0-4D5F-80DB-78B1D67BD73D}' : 'INode7',
	'{184B1F6C-1BF1-487C-8D0C-EB936DFE395D}' : 'INode8',
	'{9E2F76E3-D239-11D3-85E6-00105A3E017B}' : 'INodes',
	'{681BB5AD-8130-4BB7-A968-8C733E8351C2}' : 'INodes2',
	'{563ED100-7544-11D5-87D4-00105A3E017B}' : 'IGenerator',
	'{75718C11-7540-11D5-87D4-00105A3E017B}' : 'IGenerators',
	'{563ED102-7544-11D5-87D4-00105A3E017B}' : 'IInteractiveGenerator',
	'{75718C13-7540-11D5-87D4-00105A3E017B}' : 'IInteractiveGenerators',
	'{563ED104-7544-11D5-87D4-00105A3E017B}' : 'IReplayBlock',
	'{28F947A9-28D4-46A2-A35E-4F8D59B4DEE9}' : 'IReplayBlock2',
	'{75718C15-7540-11D5-87D4-00105A3E017B}' : 'IReplayCollection',
	'{884DBC02-7A76-11D3-8571-00105A3E017B}' : 'IBus',
	'{F7D40DFF-E021-46E8-9B7D-6659494332A3}' : 'IBus2',
	'{4F97CF13-EA62-45FA-B550-3742BDD1FA42}' : 'IBus3',
	'{03349138-55AD-445B-9613-D5A66E1B1945}' : 'IBusVB',
	'{2AB47E6A-B582-49A2-9FFE-7FAB4458AE76}' : 'IBusVB2',
	'{9BAA357B-E0D9-41B2-986F-AF11768825CA}' : 'IBusVB3',
	'{4E8960AC-3D6A-436F-9358-A2F2A030B6FE}' : 'IBusVB4',
	'{2F7C3359-835F-4F0F-A2DA-2DF1AB7F81B5}' : 'IBusVB5',
	'{7BD20670-E36C-4752-928A-8782BE05E89C}' : 'IBuses',
	'{13F71310-908A-4E7C-9D03-1C8308909C33}' : 'IBuses2',
	'{9E2F76E0-D239-11D3-85E6-00105A3E017B}' : 'ISimulationSetup',
	'{A97B6751-BD4A-41CB-96E2-7421211D5BAD}' : 'ISimulationSetup2',
	'{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}' : 'IUserFile',
	'{61CB1B7A-EC25-47EE-A956-0A6EE39FF651}' : 'IUserFiles',
	'{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}' : 'IFDXFile',
	'{F593A749-643D-4E0B-9053-E4499F966E6B}' : 'IFDXFiles',
	'{8ED3F7CC-8617-43F7-BC5F-4B8B81FE301B}' : 'IFDXControl',
	'{099E8EAA-5EBB-4296-BF34-9776CE620DAF}' : 'ICLibrary',
	'{8E192C75-180E-42C1-9AEE-B4576C4A1CF3}' : 'ICLibraries',
	'{8CB2B4AC-9015-46F3-ADE2-1125E3211287}' : 'IStandaloneMode',
	'{CA8B2D7A-D1A3-4554-AB11-F22FCC057735}' : 'ISymbolMappings',
	'{48461813-4502-11D3-8539-00105A3E017B}' : 'IConfiguration',
	'{0DE679A3-1A8D-4A67-89E6-9947D57D08DF}' : 'IConfiguration2',
	'{047E335F-4753-4AA9-861C-B160C8C83E0F}' : 'IConfiguration3',
	'{E729DBFC-6311-42E6-BAD4-FCEBBC4A000E}' : 'IConfiguration4',
	'{1CD41A88-CB14-4798-99A3-B6CCCC8D7D0D}' : 'IConfiguration5',
	'{AB129E85-90A2-4E49-B827-5629F2824886}' : 'IConfiguration6',
	'{CA957442-2B22-4D10-817A-4A45C44FC9BE}' : 'IConfiguration7',
	'{0C020520-9AE4-4E40-B8EF-73C3C47F5ED4}' : 'IConfiguration8',
	'{AEF6F116-845D-4A8D-BD2B-04DF0541B695}' : 'IConfiguration9',
	'{3EF16D5F-63A7-4377-A140-BE75C2ADA374}' : 'IConfiguration10',
	'{2D946D66-8742-408F-986D-19FEFFAAC15E}' : 'IConfiguration11',
	'{CCE5EF07-D3D2-4379-B535-EFEEBB760FE7}' : 'IConfiguration12',
	'{AF23782C-059A-4AEE-BA14-F016791F088B}' : 'IConfiguration13',
	'{87D3AD37-9A86-4348-B1CA-390F54F892F5}' : 'IConfiguration14',
	'{2A98FF5A-1C94-49D5-8E9E-7EB0F533E9C3}' : 'ICommunicationSetup',
	'{BA6A18A8-6371-4134-A5B8-E946BDFFE9F4}' : 'IDataSourceSetup',
	'{68326796-7AF4-450E-983C-5C88DCA473E2}' : 'IDataSources',
	'{0F3BAE57-2F92-450D-BA54-478F5B372173}' : 'IDataSource',
	'{DF1E559B-B275-4A09-9B96-C15CA68809D4}' : 'IDataSourceBase',
	'{8AD94E96-2EA9-470B-911C-9CB3508C2CAD}' : 'IDataSourceImportParameters',
	'{47E1195E-8EC7-4B43-85D7-DA57BD9F7C7A}' : 'IDataSourceIssues',
	'{AF1D7F3E-D2D3-4C5F-B905-F021F964B85E}' : 'IDataSourceIssue',
	'{AAE18347-CE12-47D8-9928-53F639EA65E3}' : 'ISingleFileDataSource',
	'{3A89736B-D87A-4F9D-BE14-7A046908FBE8}' : 'IFileGroupDataSource',
	'{0F9ABA09-6F61-41F2-B64F-C532A7DE7D74}' : 'IDataSourceFiles',
	'{800CA71C-6A30-4095-81FC-3051D93501F9}' : 'IDataSourceFile',
	'{20A1C9AC-399F-4D79-85FC-A8001A66BB53}' : 'IApplicationModelSetup',
	'{C9ECF396-A1B4-4FB8-938E-0ED26AD41476}' : 'IApplicationModels',
	'{E63A92E2-E07A-4781-9071-FE8071D9E9B7}' : 'IApplicationModel',
	'{75202966-657C-40F0-942B-036353D2C52D}' : 'IApplicationModelFiles',
	'{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}' : 'IApplicationModelFile',
	'{102584C6-E00E-4A63-B2FA-5B79F7DA4DD9}' : 'IParticipants',
	'{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}' : 'IParticipant',
	'{D06241F9-C503-42D5-B148-10E8604F8959}' : 'IVttSutImportResult',
	'{B94CE167-6B2A-4673-9535-B5A51D46F2E6}' : 'IConfiguration15',
	'{BA9C4A1F-D0C7-47CD-B1DD-1B264D86D239}' : 'IConfiguration16',
	'{C48CBD4D-37D9-4600-AF6C-7C6ABF88F2D4}' : 'IConfiguration17',
	'{3A1BEFB4-D9DD-4D31-901F-05CC393242F3}' : 'IVersion2',
	'{8CCE6464-54AE-11D3-8554-00105A3E017B}' : 'ICAPLFunction',
	'{A8507FAB-33D6-43C5-B9F5-3B74451A4C41}' : 'ICAPLFunction2',
	'{8CCE6460-54AE-11D3-8554-00105A3E017B}' : 'ICAPL',
	'{64DB5A30-CA9A-11D3-85DE-00105A3E017B}' : 'ICAPL2',
	'{295FD188-1876-4546-B8C3-6B4A5B6ED2F8}' : 'ICAPL3',
	'{958225A5-78A4-4698-98AE-5FCCA72BDF9A}' : 'ICAPL4',
	'{2AC67D1C-489D-4212-83ED-E7E58D616422}' : 'ICAPL5',
	'{28978A10-8FA3-11D4-86C5-00105A3E017B}' : 'IEnvironmentInfo',
	'{8CCE6462-54AE-11D3-8554-00105A3E017B}' : 'IEnvironment',
	'{62C53880-8F88-11D4-86C5-00105A3E017B}' : 'IEnvironment2',
	'{6A1F8425-4994-4966-AC12-00EAB8B8F0B1}' : 'IEnvironment3',
	'{4793A120-7008-11D3-8566-00105A3E017B}' : 'IEnvironmentVariable',
	'{0D44F5D2-9B74-11D4-86D0-00105A3E017B}' : 'IEnvironmentVariable2',
	'{4C9FD952-7671-11D3-856E-00105A3E017B}' : 'IEnvironmentArray',
	'{4C9FD950-7671-11D3-856E-00105A3E017B}' : 'IEnvironmentGroup',
	'{884DBC00-7A76-11D3-8571-00105A3E017B}' : 'IUI',
	'{6CA22AED-1400-4811-A022-3C791766280F}' : 'IUI2',
	'{884DBC04-7A76-11D3-8571-00105A3E017B}' : 'ISignal',
	'{2A3D09AF-9CB5-4AC0-84CE-7F793629E408}' : 'ISignal2',
	'{C55B7B99-7017-4E0B-86DD-3D54D8E920A1}' : 'ISignal3',
	'{085534D2-1425-4710-90FF-B7D5C48ED627}' : 'ISignal4',
	'{754F2E9C-1578-434F-8649-89C8C4715B1B}' : 'ISignals',
	'{E12E5261-5F8B-402A-8E85-C9CE9E53E864}' : 'ISignals2',
	'{277C0778-3DF7-415C-8335-69BD2C81914F}' : 'IMessage2',
	'{318BD7A4-9A09-4D38-A315-7946EDF75DE2}' : 'IMessages',
	'{32B6F3C0-A271-11D3-85B9-00105A3E017B}' : 'ISimulation',
	'{0D44F5D0-9B74-11D4-86D0-00105A3E017B}' : 'ISimulation2',
	'{BF709443-6C1F-4A3F-8378-A07CAC452CE2}' : 'ISimulationVB',
	'{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}' : 'ISharedMemory',
	'{F95C2C1A-2BE7-4025-9318-7628D72823F5}' : 'ISharedMemory2',
	'{11E865EB-97B1-467A-B742-DF816A4035BE}' : 'ISharedMemory3',
	'{A047357E-67BA-4E2A-8982-44CE46F31975}' : 'ISharedMemory4',
	'{1DE7E1C5-53FB-495A-9404-D701572D71EA}' : 'ISharedMemory5',
	'{C64A9DB3-3856-4E6D-A042-EA086E4C88F0}' : 'ISharedMemory6',
	'{9AB9CC7B-77FC-4262-A067-A85987E1E5D6}' : 'ISharedMemory7',
	'{701B2FB6-58BF-4E6E-84D4-33540FB5F117}' : 'ISharedMemory8',
	'{54635EF1-0977-4317-AB0C-9E44E08F7DA6}' : 'ISharedMemorySetup',
	'{81ED9CE4-9097-4505-BD85-29653D997E97}' : 'ISharedMemorySetup2',
	'{5033D337-934B-428D-8A9F-8AEAEF097F43}' : 'ISharedMemorySetup3',
	'{F87D41F0-7A2C-4212-9A3C-3436AF7B4A08}' : 'IEncoding',
	'{5CD2AC60-98D6-45C7-8872-B3E77F3D433A}' : 'IEncodings',
	'{E172E995-EF4B-46FE-99BF-B99DAE854305}' : 'IVariable',
	'{D6898505-EBE9-4453-AF67-E8CAFE344D41}' : 'IVariable2',
	'{8CC2F044-16F7-4D33-92E4-9E92BBAD6D70}' : 'IVariable3',
	'{8B8AF3AF-4FF4-4DA5-952B-7C07FF654671}' : 'IVariable4',
	'{ED343C77-A3D5-418F-9059-8FBB9D0608EB}' : 'IVariable5',
	'{3F0112A4-A816-44DC-A95D-2E075EA1BAA5}' : 'IVariable6',
	'{6B50964C-B914-4EDF-921F-0A6F9E5AD6B9}' : 'IVariable7',
	'{B42FB853-B9BE-41DF-9085-E5821465B7E4}' : 'IVariable8',
	'{B98EB387-B9C7-4699-A3F2-01E216C9536E}' : 'IVariable9',
	'{4FB65BCF-FBBB-44BC-9DC3-61F58966BF6F}' : 'IVariable10',
	'{F25DC68D-2894-4D3F-BFF1-8E7464FEA91B}' : 'IVariable11',
	'{4D27AA78-B622-42E7-A237-3DA76B14A23D}' : 'IVariables',
	'{D667F629-CD0B-459E-B0DC-A9EF928568B5}' : 'IVariables2',
	'{2FB1BA83-C881-4B48-9366-94F2BFBE4AC6}' : 'IVariables3',
	'{894AADD6-AF47-4FF1-8973-D3DDEF44B3E8}' : 'IVariableArray',
	'{CE6F377E-4D0D-4E81-8C0D-83E86E059138}' : 'INamespace',
	'{E6CA6D70-305C-48F1-9110-E9C10681A317}' : 'INamespace2',
	'{AAF3953B-C75D-49EF-9FA6-40C7E1454B28}' : 'INamespace3',
	'{364BE355-1A0A-42B5-88A5-F30C425E680B}' : 'INamespaces',
	'{A3A324E4-AD29-424B-985A-45D5CBA39AA9}' : 'INamespaces2',
	'{85D7B36A-E777-4521-BAC5-426DB03472B0}' : 'ISystem',
	'{E56B7F82-29B3-4977-85FD-E7994A570D03}' : 'IVariablesFile',
	'{2CE0ED53-874C-4C36-A84D-C5F189CD11DD}' : 'IVariablesFiles',
	'{CD3CCC4D-0EBF-4CA3-A341-3B5AD516293B}' : 'ISystem2',
	'{26745CBC-FF87-49A8-8625-0BB135957336}' : 'ISystem3',
	'{3A78038C-7975-4B22-B6E6-3B7FA14DB05F}' : 'INetworkInterface',
	'{BA8F7E90-DB49-403F-BD00-607BDF234358}' : 'IMostNetworkInterface',
	'{96A3DA17-7495-4E69-92CB-54986C3020AE}' : 'IMostNetworkInterface2',
	'{04EAB7E4-C61E-450F-93C0-63C4D404CE82}' : 'IMostApplicationFilter',
	'{BD0A81B5-73E5-471E-BD7B-768BE955461E}' : 'IApplicationSocket',
	'{C794A707-99AF-4ED8-9A19-C99200795EA1}' : 'IAudioInterface',
	'{640786C6-C75E-4EC3-88AA-DFC243B7D8B1}' : 'IMostDisassembler',
	'{A4426049-F697-4710-8AB7-A2061D7A4829}' : 'IDisassembler',
	'{4AE8E10D-C377-4D91-8B98-93001D597118}' : 'INetworkInterfaces',
	'{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}' : 'IDevice',
	'{4AC62A49-AE4C-4417-BE90-34669360AF23}' : 'IDevice2',
	'{6E19159C-1FFA-431A-9E50-E4ABDCF48E8E}' : 'IDevices',
	'{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}' : 'INetwork',
	'{D2211BE8-670B-43E5-9897-F3E605807A0D}' : 'INetwork2',
	'{0C8F9BF3-B15B-45C8-B3D2-0FDCD3D7C1CF}' : 'INetworks',
	'{7C9AAED7-6F33-46AE-8B36-2B3FDC916EA7}' : 'IMacroSetup',
	'{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}' : 'IMacro',
	'{C3F935CF-F4D4-40A9-BB1A-8FDC72039A11}' : 'IMacros',
	'{83D44C26-1EF7-4904-8786-59601330AFDD}' : 'ISnippetSetup',
	'{643C3621-EEF6-4274-97D7-C3AA1171EF5B}' : 'ISnippet',
	'{BE8EBE57-228C-4991-8B33-AD3E16FB5011}' : 'ISnippets',
	'{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}' : 'ISnippetFile',
	'{1BE207E7-5D66-4CC6-9CD7-43E36AE8D90E}' : 'ISnippetFiles',
	'{0B784BA8-4F32-11D3-854D-00105A3E017B}' : 'IApplication',
	'{828B275A-A2F3-4C5E-8A36-657577D39F93}' : 'IApplication2',
	'{BC190DA3-8645-4A14-BEE8-CE0486609043}' : 'IApplication3',
	'{7F4AF1B3-4CD9-495F-BD15-F95BD03A2516}' : 'IApplication4',
	'{4B6659E2-C9F5-46D8-B497-1E364FCE5A7A}' : 'IApplication5',
	'{4A0D68E0-E2E0-4260-A5EE-2363AD2BDB4B}' : 'IApplication6',
	'{4C8C05A7-13BB-4B14-983C-10C739C0C089}' : 'IApplication7',
	'{EC124917-C29B-4DEE-9690-D5F8E5E3DF1B}' : 'IApplication8',
	'{C38503D5-925B-4025-A5FD-74078957B257}' : 'IApplication9',
	'{D3F8A64F-7847-40F9-AA19-B50918174FA1}' : 'IApplication10',
	'{73F7D5C1-E5BC-11D2-A3D7-00609768736E}' : 'ISIM',
	'{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}' : 'IMcCANSettings',
	'{BBFCFB7E-7E6F-4271-A064-CD2AC49F7D91}' : 'IMcCANSettings1',
	'{67454196-BCD1-41FE-9942-9AD5E09751B3}' : 'IMcCANSettings2',
	'{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}' : 'IMcEthernetSettings',
	'{5D3422DB-CEFD-4D0E-93A9-84549709F577}' : 'IMcFlexRaySettings',
	'{BB4D9F36-C012-4A47-8765-4361F619EB09}' : 'IMcFlexRaySettings1',
	'{E2575D00-23CD-4A17-8E3D-ACA974E63BFA}' : 'IMcLINSettings',
	'{2C5CB149-1C81-43BF-8356-9FC01E7F4445}' : 'IMcDatabaseSignal',
	'{9A6830FC-0406-412B-B89A-00E4B36B6536}' : 'IMcDatabaseSignals',
	'{9143BDF8-5801-42C7-832C-CFABE5FE3948}' : 'IMcConfiguredSignal',
	'{3B4B1378-DADB-405C-888C-42FAB14A0937}' : 'IMcConfiguredSignals',
	'{98830394-D91B-4165-874A-9F3EA5885EA1}' : 'IMcParameter',
	'{9CE780C2-C24D-4134-8FF6-8BA66173B9D9}' : 'IMcParameters',
	'{7AD9B166-03A7-42CD-8672-31B107A57806}' : 'IMcMeasurementGroup',
	'{97329791-2957-4E7A-AFA6-ABA838244E58}' : 'IMcMeasurementGroup1',
	'{9D75612D-C799-4D08-9F96-3996AE447EF2}' : 'IMcMeasurementGroups',
	'{64C33E85-D215-4166-840E-F6651DA438F0}' : 'IMcECU',
	'{379A92F4-9305-4D2C-835C-2469D0D6A79D}' : 'IMcECU1',
	'{D0C1E1A6-7AB8-4DD8-B8DA-515F37C44967}' : 'IMcECU2',
	'{0581A64F-476C-4BC6-B865-B45B60F16FC5}' : 'IMcECU3',
	'{017D194C-5BBC-4A49-B552-922908CFCEC2}' : 'IMcECU4',
	'{58867B26-B1C4-4171-A8FD-510A74BFE9C5}' : 'IMcECU5',
	'{2289A1A7-DAA6-418A-8601-7858B97BA150}' : 'IMcECU6',
	'{42199FA2-ABAC-4494-AA99-C21F0BBA9C66}' : 'IMcECUs',
	'{1B987168-9FA2-460B-BAE5-7194F7CAE469}' : 'IMcECUs1',
	'{AEC1E946-BE26-4981-AAF7-0A9ECA360436}' : 'IXCPSetup',
	'{F99938B4-3A2F-4B36-ABE2-31C4962B531F}' : 'ICCPSetup',
	'{F245E20D-53FA-4C82-A849-1EB2F92450D6}' : 'IDiagnosticsSetup',
	'{0F8B4279-132B-4AD1-88DF-96837286F5D0}' : 'IDiagVariant',
	'{A6D6D5B8-B94A-4E5C-9627-8A379EFCADB2}' : 'IDiagVariants',
	'{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}' : 'IDiagDescription',
	'{0B764757-2F83-4493-A185-E4AA29BD8EEF}' : 'IAdditionalDescription',
	'{30A3777D-547E-4B3A-AE6E-242132FC426C}' : 'IAdditionalDescriptions',
	'{BF67872C-7B26-4505-B1FF-CBDC26F6E011}' : 'IInterpretationOrder',
	'{E99F67E5-C326-468E-BDD6-C2EB11695006}' : 'IDiagDescription2',
	'{8942AFAD-7E6A-4643-82C6-FBFE9DF6E8B2}' : 'IDiagDescription3',
	'{992386A7-CB76-4875-9B65-DEBADC98DEF2}' : 'IDiagDescription4',
	'{B33D021E-DF9F-491D-8E98-48B3461E71B3}' : 'IDiagDescription5',
	'{8B5D3D37-8158-4E98-99CB-168043AAEF49}' : 'IDiagDescription6',
	'{4BDE2B63-9C03-4434-AB9D-2A09FF7B6F80}' : 'IDiagDescriptions',
	'{BC600EF4-0210-4D7C-9CC5-FB44EE09C294}' : 'IDiagDescriptions2',
	'{283D0C00-B32E-4EE4-BD03-441F5CDA810F}' : 'ICompileResult',
	'{BA4CBD24-0E31-4C72-8758-78842128A91F}' : 'IOpenConfigurationResult',
	'{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}' : 'ISendNode',
	'{1170E6A0-7C88-4E73-B387-6BADE0B0A48B}' : 'ISendNodes',
	'{E3BBD70F-A187-4A83-AD8B-03D78265B2AF}' : 'IPerformance',
	'{8924FA59-9F14-4A3A-818D-FA1D1C2AFE2F}' : 'ITestUnitReport',
	'{79C2403E-14B1-4C4C-81E7-F1D5DDA9C143}' : 'ITestUnitReport2',
	'{E3420774-A352-4FA5-B4F0-E2693A76FE3B}' : 'ITestUnitReport3',
	'{57D81B0F-19E6-4682-8C24-6CF10A984A81}' : 'ITestTreeElement1',
	'{09E17429-8E58-4B7D-96BD-860B634F075C}' : 'ITestTreeElement2',
	'{A00F3381-2821-4258-ACD4-7AACD16FD1FF}' : 'ITestTreeElements',
	'{A25AD662-DCDC-4844-983D-F750631753F3}' : 'ITestUnit',
	'{7101A9AF-332E-4295-BF95-4A543D257F21}' : 'ITestUnit2',
	'{B2EF4B1D-1908-4C2A-A9AF-07EDFC50010C}' : 'ITestUnit3',
	'{CC055F08-5DF6-4FD0-B375-E67976E81F42}' : 'ITestUnits',
	'{0ABE0B62-8C71-4DD4-BFF5-19B18C0CB345}' : 'ITestUnits2',
	'{55217A2D-832D-4768-BAD7-1B6B3D19D9A6}' : 'ITestConfigurationReportFilterSettings',
	'{BC887636-BB88-42E7-911D-97B8D0681467}' : 'ITestConfigurationReport',
	'{E970C973-243C-4F44-AD57-EED6AC429342}' : 'ITestConfigurationReport2',
	'{BAAEF49A-D7AD-4EA1-A3F6-B4318D1FAD41}' : 'ITestConfigurationReport3',
	'{9E85F768-1B1C-4D26-9EEB-3A0BBAEBA374}' : 'ITestConfigurationReport4',
	'{8D16877F-6BB0-4149-AD69-E44F6FBB330C}' : 'ITestConfigurationSettings',
	'{32D8C5C4-4E98-4D35-85E8-4FFFBFD0B7C5}' : 'ITestConfigurationSettings2',
	'{73138884-E89A-4560-91E4-ABE2A8B4D5AE}' : 'ITestConfigurationSettings3',
	'{369D42D9-095C-402E-82B7-DE421D0CC79C}' : 'ITestConfigurationSettings4',
	'{9F64CBD2-C6F2-4BB7-B656-5D856796A16D}' : 'IVariantProfileNames',
	'{41AA0642-6523-473C-8A58-57123E020859}' : 'ITestConfiguration',
	'{0E81621C-E241-41C2-B18C-913EFA939A05}' : 'ITestConfiguration2',
	'{D3B9590D-503A-43BA-8BEE-190E0BDDF9B4}' : 'ITestConfiguration3',
	'{BAC68327-029F-458D-9C87-6C7EFC276CA9}' : 'ITestConfiguration4',
	'{490B7A27-FB8E-47ED-BE1F-274166004269}' : 'ITestConfiguration5',
	'{6E686DFA-9F5C-49C7-9993-D7CBD4E9DB6A}' : 'ITestConfiguration6',
	'{EC34E24D-11A5-40C1-809A-53258622E1ED}' : 'ITestConfiguration7',
	'{CC065BBC-C124-4F43-A8C8-BE54D736197E}' : 'ITestConfigurations',
	'{63008CF3-5A5C-42A8-9095-4B996EC15FC8}' : 'IVideoWindow',
	'{63008CF3-5A5C-42A8-9095-4B996EC15FC9}' : 'IVideoWindow2',
	'{53E11521-81AC-4D16-A147-17A68F40A7B7}' : 'IVideoWindows',
	'{82D6EC01-1A53-46FD-8026-C3E9F24DBCAC}' : 'IStartValueList',
	'{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}' : 'IIpNetworkAddress',
	'{A19229D7-CD25-4877-8C52-7691E1EECA8F}' : 'IIpNetworkAddressList',
	'{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}' : 'IVlan',
	'{8A32A0E9-C1A1-4E8B-94DA-C6910338C058}' : 'IVlans',
	'{D898B690-6B35-40D2-9968-3B97DA3CB932}' : 'IIpSetting',
	'{212A97ED-1940-4733-8FE1-901B0AF8DB14}' : 'ITcpIpAdapter',
	'{2E642C88-22F4-4F61-8A3A-FE9790A1F3C2}' : 'ITcpIpAdapters',
	'{61E75232-C8A9-4C15-8818-4C41DD579A23}' : 'ITcpIpStackSetting',
	'{D5FE2796-B4E3-4370-B567-89455FEBFE9B}' : 'IPort',
	'{56722E45-899F-4733-9638-627A0743BECD}' : 'IPort2',
	'{15E2A6C6-48F5-4F00-9406-4CF1A8B576A0}' : 'IPorts',
	'{8E121922-A12C-47FB-8A33-47ACA0D80751}' : 'IPorts2',
	'{E56FBBB1-317E-4340-A588-0DDA95B2922E}' : 'IARXMLImportParameters',
	'{CB14D616-FD76-46C7-9F77-48247EF3ED71}' : 'ICANoe4Server',
}


NamesToIIDMap = {
	'ITestSetupFolders' : '{7AB2423A-58A5-4DEF-A50F-09547CFE38A1}',
	'ITestSetupFolderExt' : '{E263A3BA-4C7A-4520-9784-47A45296ADA1}',
	'ITestModules' : '{16086855-B312-436F-A11F-5C1FCA126BBC}',
	'ITSTestModule' : '{24DEFCE5-8FFC-4AE3-9BDC-14C7E1EB23A9}',
	'ITestSetupItem' : '{2E27EBE7-EC01-46E4-A6B8-813E8CBA5EAD}',
	'ITSTestModule2' : '{71409476-01CA-46EB-89EA-960C6BB08B4D}',
	'ITSTestModule3' : '{A774A824-018E-4A43-A546-E2659EB42860}',
	'ITSTestModule4' : '{46A0D3DE-9A25-47E7-9A53-C685E1B07B34}',
	'ITSTestModule5' : '{B117FD73-313E-4EC9-80E5-2A6611F25D23}',
	'ITSTestModule6' : '{F500EEE4-D61F-4DF9-B292-B1436B13FC8D}',
	'_ITSTestModuleEvents' : '{C6DB40F8-210C-40E2-A950-FCF23AF2BE62}',
	'ILinProtocolVersion' : '{B7DF9A0C-BF22-442C-B378-21CDDEF5A11B}',
	'ITesterSettings' : '{890EA72F-67EF-480D-AD38-C9841A7D053B}',
	'IIUTSettings' : '{86F18849-87B2-4DB2-8CF4-D4838C784E8A}',
	'IIUTSettings2' : '{A040F2ED-8FA7-4C0F-961C-1DA7D3362CB9}',
	'IIUTInitializationSettings' : '{C889E7FD-B60A-4EDB-85DA-89B3102425E5}',
	'ILinSlaveConformanceTester' : '{7665020C-4F6E-459C-8C1E-58E792EA825D}',
	'ILinSlaveConformanceTester2' : '{D8CBC484-7179-4C23-ADF4-99AB03A8C89C}',
	'ILinSlaveConformanceTester3' : '{BD53021B-F3EC-4B1B-950D-B7687DCBFB56}',
	'ITestSetupFolder' : '{02510C83-7ED1-404A-BB78-00C2B7B7D529}',
	'ILinSlaveConformanceTesters' : '{02BCC0B6-446D-4ED1-9EBE-038B1557290F}',
	'ITestModules2' : '{3277C299-D4BB-4033-98BA-F29ED83453AB}',
	'ITestEnvironment' : '{C7616799-F96E-4D03-861E-A7577ECB6741}',
	'ITestEnvironment2' : '{6CA91FF6-FC46-4855-BCD8-B8D5F4EC948F}',
	'ITestEnvironments' : '{832AD38C-C919-4BD1-8EEE-15C4628F409F}',
	'ITestSetup' : '{A715D071-E0FE-4010-9790-E100D69D1287}',
	'IReportFilterSettings' : '{88399322-23E3-4241-832C-5B5B19F948DD}',
	'IReportFilterSettings2' : '{F725388B-C761-4253-8614-84D979737488}',
	'ITestReport' : '{1A19D0B2-6D95-402B-9D50-4E378636471D}',
	'ITestReport2' : '{5ECE511C-1419-4670-BFA9-49AA21F53F26}',
	'ITestReport3' : '{C535C206-FAB5-4BCE-A597-BEA6D44E52B4}',
	'ITestReport4' : '{C9B2849C-9342-4182-B6F7-119D51E2D10B}',
	'ITestReport5' : '{D6370BF7-0091-4DB8-A645-54465C00F336}',
	'_ITestReportEvents' : '{02B511AB-85FC-45C1-A971-7D81B7E7C4A0}',
	'ITestSetupItems' : '{B7CC0F27-2EE0-416B-852F-898D99F5F01F}',
	'ITestLibrary' : '{FFF525CC-1BE9-4A9D-9405-39AFCC4F5BD8}',
	'ITestLibraries' : '{D7C09086-A9C6-4287-93A3-64D8230DED0F}',
	'IReference' : '{BFD8D2B6-F7FD-46E5-AAC2-16AC0B0D7990}',
	'IReferences' : '{D8A35CD7-6FF9-42E6-A73A-DAE19E7392D0}',
	'IModule' : '{BE7ACD9D-7E54-438A-BEBD-F11A5375D6E7}',
	'IModule2' : '{19A5E120-E223-46AA-BAA7-8D861C706F92}',
	'IModules' : '{5CB88F40-B525-436E-AC68-27D86DED6FE5}',
	'ICANopen' : '{603B588F-FC85-49BA-A21B-7EDBAFB0E815}',
	'ITestSequenceItem' : '{82813530-A143-438E-B2A7-50BEC44064BD}',
	'ITestCase' : '{7DD67620-CC5F-4234-8390-778053B1FF01}',
	'ITestGroup' : '{00C60991-E30D-424C-9851-0382F338F394}',
	'ITestSequence' : '{A7CD44E7-7CFC-4B71-9F7C-F3A947BA015F}',
	'IWrite' : '{97FBEA50-A327-11D3-85BA-00105A3E017B}',
	'IWrite2' : '{2676A0A7-8EBB-4C0A-B355-F49CE34852FE}',
	'IWrite3' : '{EF692849-4DFE-41A0-BCBA-4F4803B815A2}',
	'IMeasurement' : '{CD866FB5-44BF-11D3-8538-00105A3E017B}',
	'IMeasurement2' : '{A844C1E0-F5CE-11D3-8612-00105A3E017B}',
	'IMeasurement3' : '{B7C2B23A-B181-42C8-90A1-EAA9BB186CFE}',
	'IMeasurement4' : '{C595EF75-B5B9-44A0-8811-BE195DE32B83}',
	'IMeasurement5' : '{24CA2025-28DB-4982-AB11-C8BCB9C84782}',
	'_IMeasurementEvents' : '{CD866FB7-44BF-11D3-8538-00105A3E017B}',
	'IPanel' : '{2FCA3565-CDA6-11D3-85E1-00105A3E017B}',
	'IPanel2' : '{29FD885E-3E2D-47F9-86CD-02ED21730A36}',
	'IPanels' : '{2FCA3562-CDA6-11D3-85E1-00105A3E017B}',
	'IPanelSetup' : '{2FCA3561-CDA6-11D3-85E1-00105A3E017B}',
	'IPanelSetup2' : '{6C0F41B3-BA71-4DD2-8D5C-EE263A874125}',
	'IPanelSetup3' : '{6952A532-6F9B-459E-90EA-1CFBFF495FAF}',
	'_IPanelSetupEvents' : '{3BC4EED1-D25F-11D3-85E6-00105A3E017B}',
	'ICANController' : '{886978D0-CE60-11D3-85E2-00105A3E017B}',
	'ICANController2' : '{D2714009-2320-4F80-A822-FB3D82963BCF}',
	'ICANController3' : '{7F07100E-0A04-43F1-AB50-25DD0351109B}',
	'ICANController4' : '{FC1A677B-F176-4B58-A595-28AEBD452CCA}',
	'IChannel' : '{52716DB7-DAE9-4365-8B5B-18B1492F728A}',
	'IChannels' : '{9E0D95D2-4E76-4639-83AC-18BF4C1F13E8}',
	'IDatabase' : '{9E2F76F2-D239-11D3-85E6-00105A3E017B}',
	'IDatabase2' : '{F053D71F-6F03-4C73-9944-EA0E505736F3}',
	'IDatabases' : '{9E2F76F0-D239-11D3-85E6-00105A3E017B}',
	'IDatabases2' : '{01A28209-9EC7-4F34-B749-7CFCE9A5E6FB}',
	'IDatabases3' : '{882F452B-AE76-4F45-ABA5-D57764E1B742}',
	'IDatabaseSetup' : '{9E2F76ED-D239-11D3-85E6-00105A3E017B}',
	'IDatabaseSetup2' : '{E79270BF-53D4-4580-B16D-B12F8AD3E863}',
	'_IDatabaseSetupEvents' : '{9E2F76EE-D239-11D3-85E6-00105A3E017B}',
	'IGeneralSetup' : '{48461816-4502-11D3-8539-00105A3E017B}',
	'IGeneralSetup2' : '{2FCA3560-CDA6-11D3-85E1-00105A3E017B}',
	'IGeneralSetup3' : '{631B6EF2-9569-4CEB-B4CA-9F904931746E}',
	'IGeneralSetup4' : '{307C84DA-3D82-4B89-8463-07002865E321}',
	'IGeneralSetup5' : '{0A3615F3-7CBE-46DB-A7B4-B856D64FCE8C}',
	'IGeneralSetup6' : '{9EE233E3-9DA7-4275-909D-CCC7864FA836}',
	'IGeneralSetup7' : '{C736DD92-342C-43A3-B7F0-C5DA139D0E69}',
	'_IGeneralSetupEvents' : '{48461818-4502-11D3-8539-00105A3E017B}',
	'ICANBusStatistic' : '{A7566B40-D7E8-11D3-85EE-00105A3E017B}',
	'IVANBusStatistic' : '{A7566B42-D7E8-11D3-85EE-00105A3E017B}',
	'IMOSTBusStatistic' : '{A7566B44-D7E8-11D3-85EE-00105A3E017B}',
	'IBusStatistics' : '{A7566B46-D7E8-11D3-85EE-00105A3E017B}',
	'IExporter' : '{86501547-EE2A-4C9B-AB8D-DBE8DFC4898B}',
	'IExporter2' : '{A5674E7A-6E30-4212-9EB8-F18F737BE098}',
	'IExporter3' : '{A2847431-D884-4466-9D53-7647F44E8928}',
	'IExporterSymbol' : '{807B7C59-949C-42C1-AB88-D0E72E4DA54C}',
	'IExporterSymbols' : '{E7EA5FC7-7172-4D40-83B5-E17A72202735}',
	'IFiles' : '{B24DAF2F-B12B-4B19-BD8D-307685D86F5B}',
	'IFilter' : '{AE48C308-8B52-4652-8DA9-3EAF8DF5DF90}',
	'IExporterSettings' : '{C93A1EA9-65EC-4AB4-A387-1114C76D8728}',
	'IExporterSettings2' : '{6B557B6C-56D5-4878-AB4B-119F776FF018}',
	'IExporterSettings3' : '{1466533F-5817-4FE2-9C75-F967B3D38FED}',
	'IExporterSettings4' : '{E0B8E1E0-2194-4399-BE92-DCAFCA15ED00}',
	'IExporterMdfSettings' : '{F1FEFF5E-2220-480A-87F9-A1409F8AEF2C}',
	'IExporterMdfSettings2' : '{B0FAF0B3-CD17-47FC-A4FC-31D23DD6A846}',
	'IExporterDiademSettings' : '{DA95146C-34A4-4981-AE69-5DF7B0E31F5C}',
	'IExporterMatlabSettings' : '{A4CFCA98-EA99-452D-8AAE-9F6CFC1A1DDC}',
	'IExporterMatlabSettings2' : '{F5B22B9D-7014-4ADF-A5D7-ED68D44709D8}',
	'IExporterCsvSettings' : '{74510D3B-CB8F-4C26-A273-A72E7EF4313F}',
	'IExporterCsvSettingsExt' : '{6146220C-F1E5-4FF0-BDBA-C136078723D2}',
	'IExporterXMLSettings' : '{9F20E5A7-BD30-49F6-B863-FAF08A6725FD}',
	'IExporterASCIISettings' : '{2B637549-F35E-4677-83D6-A33662590A7C}',
	'IExporterASCIISettings2' : '{BC646559-E963-4803-8747-59BCE4982B57}',
	'ILoggingFileNameOptions' : '{B440D9AC-7226-46E4-A4BD-F17E22960740}',
	'ILoggingFilter' : '{23DBC0EB-4827-47D5-A6AC-915EA2A54391}',
	'ITrigger' : '{89AA4460-BBA0-4AB1-A926-D81BAD5A1436}',
	'ILogging' : '{FD859B9B-4E28-11D3-854C-00105A3E017B}',
	'ILogging2' : '{3BC4EED0-D25F-11D3-85E6-00105A3E017B}',
	'ILogging3' : '{BD603B4E-CCEF-4AF8-A39B-B263EE8D381D}',
	'ILogging4' : '{600B69E4-B501-474A-ABB6-81F0FAE3E3F4}',
	'ILogging5' : '{34DCE56F-F608-4478-A2F0-371D22F78E2D}',
	'ILoggingCollection' : '{FD859B99-4E28-11D3-854C-00105A3E017B}',
	'ILoggingCollection2' : '{41313720-D242-11D3-85E6-00105A3E017B}',
	'IChannelMapping' : '{FCE0251F-6728-429B-A26B-511903B7090B}',
	'IChannelMappingSet' : '{FD0624C6-8033-430F-8554-AD323A46CDB5}',
	'IChannelMappingSets' : '{32E135DC-1ABC-4D9D-8276-546393F7FCDE}',
	'ITimeSection' : '{BCD7DA0D-D0A3-4394-BC11-25E23503A102}',
	'ITimeSettings' : '{DA475018-9635-4372-9F22-B3A2FB91BFCC}',
	'IOfflineSource' : '{F25C4137-A660-47D4-8E11-9AA0E0A58BC7}',
	'IOfflineSource2' : '{54D5BCF7-73A6-43AA-8E3F-D07EC9FCB456}',
	'IOfflineSource3' : '{737BBFED-F0C7-4556-887B-18319F58361B}',
	'IOfflineSource4' : '{876B6592-0F87-4978-BDC2-9C105C5D8833}',
	'IOfflineSource5' : '{7FBBDC0F-2CBD-41D5-9B01-4FF9188856E1}',
	'IOfflineTargets' : '{5BF6EF1D-62C2-4C87-B312-FE49C0184DAD}',
	'IOfflineSourceEx' : '{2E69C9DD-51F3-43E7-A1AD-51893C17264F}',
	'IOfflineGroup' : '{9637D60A-DC57-4A60-9D8F-268F86FE2E20}',
	'IOfflineSourceExes' : '{73FF6BA0-1C7C-4B28-BD63-7A44BEBA0602}',
	'IOfflineLogFile' : '{4B40871A-AF53-4680-9FE9-6BA9CD77FBDB}',
	'IOfflineVideo' : '{CC1B5185-11A9-4D29-ACAF-999DE58DFB3C}',
	'IOfflineImageSequence' : '{15C303D0-7428-491F-9EB5-CE56E3049536}',
	'IOfflineGroups' : '{1618BDCC-A2BB-40E1-A136-E569F81B7933}',
	'IOfflineLogFiles' : '{483ADE4F-A34F-45AD-90E8-2DBD7FC3A2DC}',
	'IOfflineVideos' : '{BE54D021-BE83-44E0-B9EC-7EDE4A9BC621}',
	'IOfflineImageSequences' : '{12371007-ACAA-4ADE-BEB1-3C7B3D13738E}',
	'IOfflineLogFile2' : '{12B51663-BB9C-4010-8308-56E3A2F2247C}',
	'IOfflineGroup2' : '{6B6D944A-C4B1-4862-9C06-0420FF60FB5F}',
	'IMeasurementSetup' : '{48461819-4502-11D3-8539-00105A3E017B}',
	'IMeasurementSetup2' : '{1F83A4C3-84C3-4AEC-896B-2B02E7E66D8B}',
	'IMeasurementSetup3' : '{FD8C3E9D-7E1A-4CB7-BBA9-F8A18ADE703D}',
	'IMeasurementSetup4' : '{2D583E50-64AB-435F-921C-44FD62076603}',
	'IMeasurementSetup5' : '{93F4F447-DB35-4C9B-8EC8-56A65FB91D76}',
	'IMeasurementSetup6' : '{71A7F1BA-0648-4858-BA2A-E53D82C5F86C}',
	'IMeasurementSetup7' : '{A420AB31-1D1D-4744-AB74-5E5B6C208A61}',
	'IMeasurementSetup8' : '{5E75239C-77D2-43BE-B753-117E42CD933F}',
	'_IMeasurementSetupEvents' : '{4846181B-4502-11D3-8539-00105A3E017B}',
	'IViewSynchronization' : '{0BF3185A-C2C0-4C2C-8DFD-5F324D078D0D}',
	'IViewSynchronization2' : '{F258EB3B-C1D5-4427-B712-A550D88E3926}',
	'_IViewSynchronizationEvents' : '{DF8ABAE7-2A2F-442E-A37D-AB7DDB974BD7}',
	'INode' : '{9E2F76EB-D239-11D3-85E6-00105A3E017B}',
	'INode2' : '{B2352A28-276B-448F-B37E-84501CA4FACC}',
	'INode3' : '{6C852CF1-36B8-429B-9929-9663BEAE689D}',
	'INode4' : '{25020040-8368-4238-AE0B-C0F7DCCA2F31}',
	'INode5' : '{29AD5000-AFEF-448F-A349-29B63FC16DE6}',
	'INode6' : '{C4F5ABAD-5B61-4C11-823C-CBA26599A8AD}',
	'INode7' : '{C97D381B-ABA0-4D5F-80DB-78B1D67BD73D}',
	'INode8' : '{184B1F6C-1BF1-487C-8D0C-EB936DFE395D}',
	'INodes' : '{9E2F76E3-D239-11D3-85E6-00105A3E017B}',
	'INodes2' : '{681BB5AD-8130-4BB7-A968-8C733E8351C2}',
	'IGenerator' : '{563ED100-7544-11D5-87D4-00105A3E017B}',
	'IGenerators' : '{75718C11-7540-11D5-87D4-00105A3E017B}',
	'IInteractiveGenerator' : '{563ED102-7544-11D5-87D4-00105A3E017B}',
	'IInteractiveGenerators' : '{75718C13-7540-11D5-87D4-00105A3E017B}',
	'IReplayBlock' : '{563ED104-7544-11D5-87D4-00105A3E017B}',
	'IReplayBlock2' : '{28F947A9-28D4-46A2-A35E-4F8D59B4DEE9}',
	'IReplayCollection' : '{75718C15-7540-11D5-87D4-00105A3E017B}',
	'IBus' : '{884DBC02-7A76-11D3-8571-00105A3E017B}',
	'IBus2' : '{F7D40DFF-E021-46E8-9B7D-6659494332A3}',
	'IBus3' : '{4F97CF13-EA62-45FA-B550-3742BDD1FA42}',
	'IBusVB' : '{03349138-55AD-445B-9613-D5A66E1B1945}',
	'IBusVB2' : '{2AB47E6A-B582-49A2-9FFE-7FAB4458AE76}',
	'IBusVB3' : '{9BAA357B-E0D9-41B2-986F-AF11768825CA}',
	'IBusVB4' : '{4E8960AC-3D6A-436F-9358-A2F2A030B6FE}',
	'IBusVB5' : '{2F7C3359-835F-4F0F-A2DA-2DF1AB7F81B5}',
	'IBuses' : '{7BD20670-E36C-4752-928A-8782BE05E89C}',
	'IBuses2' : '{13F71310-908A-4E7C-9D03-1C8308909C33}',
	'ISimulationSetup' : '{9E2F76E0-D239-11D3-85E6-00105A3E017B}',
	'ISimulationSetup2' : '{A97B6751-BD4A-41CB-96E2-7421211D5BAD}',
	'_ISimulationSetupEvents' : '{9E2F76E1-D239-11D3-85E6-00105A3E017B}',
	'IUserFile' : '{0F9C3583-0B20-4ACB-9B44-9C68A4EDD095}',
	'IUserFiles' : '{61CB1B7A-EC25-47EE-A956-0A6EE39FF651}',
	'IFDXFile' : '{5A7CBACF-009D-4E5F-82D5-CB0876EE94E9}',
	'IFDXFiles' : '{F593A749-643D-4E0B-9053-E4499F966E6B}',
	'IFDXControl' : '{8ED3F7CC-8617-43F7-BC5F-4B8B81FE301B}',
	'ICLibrary' : '{099E8EAA-5EBB-4296-BF34-9776CE620DAF}',
	'ICLibraries' : '{8E192C75-180E-42C1-9AEE-B4576C4A1CF3}',
	'IStandaloneMode' : '{8CB2B4AC-9015-46F3-ADE2-1125E3211287}',
	'ISymbolMappings' : '{CA8B2D7A-D1A3-4554-AB11-F22FCC057735}',
	'IConfiguration' : '{48461813-4502-11D3-8539-00105A3E017B}',
	'IConfiguration2' : '{0DE679A3-1A8D-4A67-89E6-9947D57D08DF}',
	'IConfiguration3' : '{047E335F-4753-4AA9-861C-B160C8C83E0F}',
	'IConfiguration4' : '{E729DBFC-6311-42E6-BAD4-FCEBBC4A000E}',
	'IConfiguration5' : '{1CD41A88-CB14-4798-99A3-B6CCCC8D7D0D}',
	'IConfiguration6' : '{AB129E85-90A2-4E49-B827-5629F2824886}',
	'IConfiguration7' : '{CA957442-2B22-4D10-817A-4A45C44FC9BE}',
	'IConfiguration8' : '{0C020520-9AE4-4E40-B8EF-73C3C47F5ED4}',
	'IConfiguration9' : '{AEF6F116-845D-4A8D-BD2B-04DF0541B695}',
	'IConfiguration10' : '{3EF16D5F-63A7-4377-A140-BE75C2ADA374}',
	'IConfiguration11' : '{2D946D66-8742-408F-986D-19FEFFAAC15E}',
	'IConfiguration12' : '{CCE5EF07-D3D2-4379-B535-EFEEBB760FE7}',
	'IConfiguration13' : '{AF23782C-059A-4AEE-BA14-F016791F088B}',
	'IConfiguration14' : '{87D3AD37-9A86-4348-B1CA-390F54F892F5}',
	'_IConfigurationEvents' : '{48461815-4502-11D3-8539-00105A3E017B}',
	'ICommunicationSetup' : '{2A98FF5A-1C94-49D5-8E9E-7EB0F533E9C3}',
	'IDataSourceSetup' : '{BA6A18A8-6371-4134-A5B8-E946BDFFE9F4}',
	'IDataSources' : '{68326796-7AF4-450E-983C-5C88DCA473E2}',
	'IDataSource' : '{0F3BAE57-2F92-450D-BA54-478F5B372173}',
	'IDataSourceBase' : '{DF1E559B-B275-4A09-9B96-C15CA68809D4}',
	'IDataSourceImportParameters' : '{8AD94E96-2EA9-470B-911C-9CB3508C2CAD}',
	'IDataSourceIssues' : '{47E1195E-8EC7-4B43-85D7-DA57BD9F7C7A}',
	'IDataSourceIssue' : '{AF1D7F3E-D2D3-4C5F-B905-F021F964B85E}',
	'ISingleFileDataSource' : '{AAE18347-CE12-47D8-9928-53F639EA65E3}',
	'IFileGroupDataSource' : '{3A89736B-D87A-4F9D-BE14-7A046908FBE8}',
	'IDataSourceFiles' : '{0F9ABA09-6F61-41F2-B64F-C532A7DE7D74}',
	'IDataSourceFile' : '{800CA71C-6A30-4095-81FC-3051D93501F9}',
	'IApplicationModelSetup' : '{20A1C9AC-399F-4D79-85FC-A8001A66BB53}',
	'IApplicationModels' : '{C9ECF396-A1B4-4FB8-938E-0ED26AD41476}',
	'IApplicationModel' : '{E63A92E2-E07A-4781-9071-FE8071D9E9B7}',
	'IApplicationModelFiles' : '{75202966-657C-40F0-942B-036353D2C52D}',
	'IApplicationModelFile' : '{372B3ABA-F1D8-4A22-B8DB-0852425F7E2D}',
	'IParticipants' : '{102584C6-E00E-4A63-B2FA-5B79F7DA4DD9}',
	'IParticipant' : '{90CA14C8-EEF1-4A78-9F17-9FDCF79BADD2}',
	'IVttSutImportResult' : '{D06241F9-C503-42D5-B148-10E8604F8959}',
	'IConfiguration15' : '{B94CE167-6B2A-4673-9535-B5A51D46F2E6}',
	'IConfiguration16' : '{BA9C4A1F-D0C7-47CD-B1DD-1B264D86D239}',
	'IConfiguration17' : '{C48CBD4D-37D9-4600-AF6C-7C6ABF88F2D4}',
	'IVersion2' : '{3A1BEFB4-D9DD-4D31-901F-05CC393242F3}',
	'ICAPLFunction' : '{8CCE6464-54AE-11D3-8554-00105A3E017B}',
	'ICAPLFunction2' : '{A8507FAB-33D6-43C5-B9F5-3B74451A4C41}',
	'ICAPL' : '{8CCE6460-54AE-11D3-8554-00105A3E017B}',
	'ICAPL2' : '{64DB5A30-CA9A-11D3-85DE-00105A3E017B}',
	'ICAPL3' : '{295FD188-1876-4546-B8C3-6B4A5B6ED2F8}',
	'ICAPL4' : '{958225A5-78A4-4698-98AE-5FCCA72BDF9A}',
	'ICAPL5' : '{2AC67D1C-489D-4212-83ED-E7E58D616422}',
	'IEnvironmentInfo' : '{28978A10-8FA3-11D4-86C5-00105A3E017B}',
	'IEnvironment' : '{8CCE6462-54AE-11D3-8554-00105A3E017B}',
	'IEnvironment2' : '{62C53880-8F88-11D4-86C5-00105A3E017B}',
	'IEnvironment3' : '{6A1F8425-4994-4966-AC12-00EAB8B8F0B1}',
	'IEnvironmentVariable' : '{4793A120-7008-11D3-8566-00105A3E017B}',
	'IEnvironmentVariable2' : '{0D44F5D2-9B74-11D4-86D0-00105A3E017B}',
	'_IEnvironmentVariableEvents' : '{4793A122-7008-11D3-8566-00105A3E017B}',
	'IEnvironmentArray' : '{4C9FD952-7671-11D3-856E-00105A3E017B}',
	'IEnvironmentGroup' : '{4C9FD950-7671-11D3-856E-00105A3E017B}',
	'IUI' : '{884DBC00-7A76-11D3-8571-00105A3E017B}',
	'IUI2' : '{6CA22AED-1400-4811-A022-3C791766280F}',
	'ISignal' : '{884DBC04-7A76-11D3-8571-00105A3E017B}',
	'ISignal2' : '{2A3D09AF-9CB5-4AC0-84CE-7F793629E408}',
	'ISignal3' : '{C55B7B99-7017-4E0B-86DD-3D54D8E920A1}',
	'ISignal4' : '{085534D2-1425-4710-90FF-B7D5C48ED627}',
	'ISignals' : '{754F2E9C-1578-434F-8649-89C8C4715B1B}',
	'ISignals2' : '{E12E5261-5F8B-402A-8E85-C9CE9E53E864}',
	'IMessage2' : '{277C0778-3DF7-415C-8335-69BD2C81914F}',
	'IMessages' : '{318BD7A4-9A09-4D38-A315-7946EDF75DE2}',
	'ISimulation' : '{32B6F3C0-A271-11D3-85B9-00105A3E017B}',
	'ISimulation2' : '{0D44F5D0-9B74-11D4-86D0-00105A3E017B}',
	'ISimulationVB' : '{BF709443-6C1F-4A3F-8378-A07CAC452CE2}',
	'_ISimulationEvents' : '{0D44F5D1-9B74-11D4-86D0-00105A3E017B}',
	'ISharedMemory' : '{7F6D10D7-1CA5-40D2-A26C-7BDF64101B7B}',
	'ISharedMemory2' : '{F95C2C1A-2BE7-4025-9318-7628D72823F5}',
	'ISharedMemory3' : '{11E865EB-97B1-467A-B742-DF816A4035BE}',
	'ISharedMemory4' : '{A047357E-67BA-4E2A-8982-44CE46F31975}',
	'ISharedMemory5' : '{1DE7E1C5-53FB-495A-9404-D701572D71EA}',
	'ISharedMemory6' : '{C64A9DB3-3856-4E6D-A042-EA086E4C88F0}',
	'ISharedMemory7' : '{9AB9CC7B-77FC-4262-A067-A85987E1E5D6}',
	'ISharedMemory8' : '{701B2FB6-58BF-4E6E-84D4-33540FB5F117}',
	'ISharedMemorySetup' : '{54635EF1-0977-4317-AB0C-9E44E08F7DA6}',
	'ISharedMemorySetup2' : '{81ED9CE4-9097-4505-BD85-29653D997E97}',
	'ISharedMemorySetup3' : '{5033D337-934B-428D-8A9F-8AEAEF097F43}',
	'IEncoding' : '{F87D41F0-7A2C-4212-9A3C-3436AF7B4A08}',
	'IEncodings' : '{5CD2AC60-98D6-45C7-8872-B3E77F3D433A}',
	'IVariable' : '{E172E995-EF4B-46FE-99BF-B99DAE854305}',
	'IVariable2' : '{D6898505-EBE9-4453-AF67-E8CAFE344D41}',
	'IVariable3' : '{8CC2F044-16F7-4D33-92E4-9E92BBAD6D70}',
	'IVariable4' : '{8B8AF3AF-4FF4-4DA5-952B-7C07FF654671}',
	'IVariable5' : '{ED343C77-A3D5-418F-9059-8FBB9D0608EB}',
	'IVariable6' : '{3F0112A4-A816-44DC-A95D-2E075EA1BAA5}',
	'IVariable7' : '{6B50964C-B914-4EDF-921F-0A6F9E5AD6B9}',
	'IVariable8' : '{B42FB853-B9BE-41DF-9085-E5821465B7E4}',
	'IVariable9' : '{B98EB387-B9C7-4699-A3F2-01E216C9536E}',
	'IVariable10' : '{4FB65BCF-FBBB-44BC-9DC3-61F58966BF6F}',
	'IVariable11' : '{F25DC68D-2894-4D3F-BFF1-8E7464FEA91B}',
	'_IVariableEvents' : '{6AC60F41-28E6-47DD-A172-6AA345462974}',
	'IVariables' : '{4D27AA78-B622-42E7-A237-3DA76B14A23D}',
	'IVariables2' : '{D667F629-CD0B-459E-B0DC-A9EF928568B5}',
	'IVariables3' : '{2FB1BA83-C881-4B48-9366-94F2BFBE4AC6}',
	'IVariableArray' : '{894AADD6-AF47-4FF1-8973-D3DDEF44B3E8}',
	'INamespace' : '{CE6F377E-4D0D-4E81-8C0D-83E86E059138}',
	'INamespace2' : '{E6CA6D70-305C-48F1-9110-E9C10681A317}',
	'INamespace3' : '{AAF3953B-C75D-49EF-9FA6-40C7E1454B28}',
	'INamespaces' : '{364BE355-1A0A-42B5-88A5-F30C425E680B}',
	'INamespaces2' : '{A3A324E4-AD29-424B-985A-45D5CBA39AA9}',
	'ISystem' : '{85D7B36A-E777-4521-BAC5-426DB03472B0}',
	'IVariablesFile' : '{E56B7F82-29B3-4977-85FD-E7994A570D03}',
	'IVariablesFiles' : '{2CE0ED53-874C-4C36-A84D-C5F189CD11DD}',
	'ISystem2' : '{CD3CCC4D-0EBF-4CA3-A341-3B5AD516293B}',
	'ISystem3' : '{26745CBC-FF87-49A8-8625-0BB135957336}',
	'INetworkInterface' : '{3A78038C-7975-4B22-B6E6-3B7FA14DB05F}',
	'IMostNetworkInterface' : '{BA8F7E90-DB49-403F-BD00-607BDF234358}',
	'IMostNetworkInterface2' : '{96A3DA17-7495-4E69-92CB-54986C3020AE}',
	'_IMostNetworkInterfaceEvents' : '{3A4DC1F2-D27C-454D-B1D8-B76D53B7B049}',
	'IMostApplicationFilter' : '{04EAB7E4-C61E-450F-93C0-63C4D404CE82}',
	'IApplicationSocket' : '{BD0A81B5-73E5-471E-BD7B-768BE955461E}',
	'_IApplicationSocketEvents' : '{3AD52BF6-800A-45CF-867E-D7AE77E32F08}',
	'IAudioInterface' : '{C794A707-99AF-4ED8-9A19-C99200795EA1}',
	'_IAudioInterfaceEvents' : '{9E8E090A-ED0B-4CE8-BCA3-499856FAEA28}',
	'IMostDisassembler' : '{640786C6-C75E-4EC3-88AA-DFC243B7D8B1}',
	'IDisassembler' : '{A4426049-F697-4710-8AB7-A2061D7A4829}',
	'INetworkInterfaces' : '{4AE8E10D-C377-4D91-8B98-93001D597118}',
	'IDevice' : '{021EA2C6-73D6-4745-9CAB-35E09B6A1F74}',
	'IDevice2' : '{4AC62A49-AE4C-4417-BE90-34669360AF23}',
	'IDevices' : '{6E19159C-1FFA-431A-9E50-E4ABDCF48E8E}',
	'INetwork' : '{0E96BBCB-23DE-48DD-8C10-3911DD330D1D}',
	'INetwork2' : '{D2211BE8-670B-43E5-9897-F3E605807A0D}',
	'INetworks' : '{0C8F9BF3-B15B-45C8-B3D2-0FDCD3D7C1CF}',
	'IMacroSetup' : '{7C9AAED7-6F33-46AE-8B36-2B3FDC916EA7}',
	'IMacro' : '{0F5F79AF-9B85-4B88-B333-DEBA6BADB4E2}',
	'IMacros' : '{C3F935CF-F4D4-40A9-BB1A-8FDC72039A11}',
	'ISnippetSetup' : '{83D44C26-1EF7-4904-8786-59601330AFDD}',
	'ISnippet' : '{643C3621-EEF6-4274-97D7-C3AA1171EF5B}',
	'ISnippets' : '{BE8EBE57-228C-4991-8B33-AD3E16FB5011}',
	'ISnippetFile' : '{BE4E5C67-F6B6-4A9D-AE6A-1F5A3CB450AA}',
	'ISnippetFiles' : '{1BE207E7-5D66-4CC6-9CD7-43E36AE8D90E}',
	'IApplication' : '{0B784BA8-4F32-11D3-854D-00105A3E017B}',
	'IApplication2' : '{828B275A-A2F3-4C5E-8A36-657577D39F93}',
	'IApplication3' : '{BC190DA3-8645-4A14-BEE8-CE0486609043}',
	'IApplication4' : '{7F4AF1B3-4CD9-495F-BD15-F95BD03A2516}',
	'IApplication5' : '{4B6659E2-C9F5-46D8-B497-1E364FCE5A7A}',
	'IApplication6' : '{4A0D68E0-E2E0-4260-A5EE-2363AD2BDB4B}',
	'IApplication7' : '{4C8C05A7-13BB-4B14-983C-10C739C0C089}',
	'IApplication8' : '{EC124917-C29B-4DEE-9690-D5F8E5E3DF1B}',
	'IApplication9' : '{C38503D5-925B-4025-A5FD-74078957B257}',
	'IApplication10' : '{D3F8A64F-7847-40F9-AA19-B50918174FA1}',
	'_IApplicationEvents' : '{CD866FB4-44BF-11D3-8538-00105A3E017B}',
	'ISIM' : '{73F7D5C1-E5BC-11D2-A3D7-00609768736E}',
	'IMcCANSettings' : '{3BD84D53-E1A8-4A72-AA64-CB25318F1BB0}',
	'IMcCANSettings1' : '{BBFCFB7E-7E6F-4271-A064-CD2AC49F7D91}',
	'IMcCANSettings2' : '{67454196-BCD1-41FE-9942-9AD5E09751B3}',
	'IMcEthernetSettings' : '{4C8986D4-BCD0-4503-9B89-FA7DA49F3264}',
	'IMcFlexRaySettings' : '{5D3422DB-CEFD-4D0E-93A9-84549709F577}',
	'IMcFlexRaySettings1' : '{BB4D9F36-C012-4A47-8765-4361F619EB09}',
	'IMcLINSettings' : '{E2575D00-23CD-4A17-8E3D-ACA974E63BFA}',
	'IMcDatabaseSignal' : '{2C5CB149-1C81-43BF-8356-9FC01E7F4445}',
	'IMcDatabaseSignals' : '{9A6830FC-0406-412B-B89A-00E4B36B6536}',
	'IMcConfiguredSignal' : '{9143BDF8-5801-42C7-832C-CFABE5FE3948}',
	'IMcConfiguredSignals' : '{3B4B1378-DADB-405C-888C-42FAB14A0937}',
	'IMcParameter' : '{98830394-D91B-4165-874A-9F3EA5885EA1}',
	'IMcParameters' : '{9CE780C2-C24D-4134-8FF6-8BA66173B9D9}',
	'IMcMeasurementGroup' : '{7AD9B166-03A7-42CD-8672-31B107A57806}',
	'IMcMeasurementGroup1' : '{97329791-2957-4E7A-AFA6-ABA838244E58}',
	'IMcMeasurementGroups' : '{9D75612D-C799-4D08-9F96-3996AE447EF2}',
	'IMcECU' : '{64C33E85-D215-4166-840E-F6651DA438F0}',
	'IMcECU1' : '{379A92F4-9305-4D2C-835C-2469D0D6A79D}',
	'IMcECU2' : '{D0C1E1A6-7AB8-4DD8-B8DA-515F37C44967}',
	'IMcECU3' : '{0581A64F-476C-4BC6-B865-B45B60F16FC5}',
	'IMcECU4' : '{017D194C-5BBC-4A49-B552-922908CFCEC2}',
	'IMcECU5' : '{58867B26-B1C4-4171-A8FD-510A74BFE9C5}',
	'IMcECU6' : '{2289A1A7-DAA6-418A-8601-7858B97BA150}',
	'IMcECUs' : '{42199FA2-ABAC-4494-AA99-C21F0BBA9C66}',
	'IMcECUs1' : '{1B987168-9FA2-460B-BAE5-7194F7CAE469}',
	'IXCPSetup' : '{AEC1E946-BE26-4981-AAF7-0A9ECA360436}',
	'ICCPSetup' : '{F99938B4-3A2F-4B36-ABE2-31C4962B531F}',
	'IDiagnosticsSetup' : '{F245E20D-53FA-4C82-A849-1EB2F92450D6}',
	'IDiagVariant' : '{0F8B4279-132B-4AD1-88DF-96837286F5D0}',
	'IDiagVariants' : '{A6D6D5B8-B94A-4E5C-9627-8A379EFCADB2}',
	'IDiagDescription' : '{8BDDB46D-7835-4FCE-9872-A208BE41ECC1}',
	'IAdditionalDescription' : '{0B764757-2F83-4493-A185-E4AA29BD8EEF}',
	'IAdditionalDescriptions' : '{30A3777D-547E-4B3A-AE6E-242132FC426C}',
	'IInterpretationOrder' : '{BF67872C-7B26-4505-B1FF-CBDC26F6E011}',
	'IDiagDescription2' : '{E99F67E5-C326-468E-BDD6-C2EB11695006}',
	'IDiagDescription3' : '{8942AFAD-7E6A-4643-82C6-FBFE9DF6E8B2}',
	'IDiagDescription4' : '{992386A7-CB76-4875-9B65-DEBADC98DEF2}',
	'IDiagDescription5' : '{B33D021E-DF9F-491D-8E98-48B3461E71B3}',
	'IDiagDescription6' : '{8B5D3D37-8158-4E98-99CB-168043AAEF49}',
	'IDiagDescriptions' : '{4BDE2B63-9C03-4434-AB9D-2A09FF7B6F80}',
	'IDiagDescriptions2' : '{BC600EF4-0210-4D7C-9CC5-FB44EE09C294}',
	'ICompileResult' : '{283D0C00-B32E-4EE4-BD03-441F5CDA810F}',
	'IOpenConfigurationResult' : '{BA4CBD24-0E31-4C72-8758-78842128A91F}',
	'ISendNode' : '{1FCCEC32-1400-4F9C-A53B-36C547D26B7C}',
	'ISendNodes' : '{1170E6A0-7C88-4E73-B387-6BADE0B0A48B}',
	'IPerformance' : '{E3BBD70F-A187-4A83-AD8B-03D78265B2AF}',
	'ITestUnitReport' : '{8924FA59-9F14-4A3A-818D-FA1D1C2AFE2F}',
	'ITestUnitReport2' : '{79C2403E-14B1-4C4C-81E7-F1D5DDA9C143}',
	'ITestUnitReport3' : '{E3420774-A352-4FA5-B4F0-E2693A76FE3B}',
	'_ITestUnitReportEvents' : '{C36F463D-B9FF-4E16-A2C0-B1964C8421FA}',
	'ITestTreeElement1' : '{57D81B0F-19E6-4682-8C24-6CF10A984A81}',
	'ITestTreeElement2' : '{09E17429-8E58-4B7D-96BD-860B634F075C}',
	'ITestTreeElements' : '{A00F3381-2821-4258-ACD4-7AACD16FD1FF}',
	'ITestUnit' : '{A25AD662-DCDC-4844-983D-F750631753F3}',
	'ITestUnit2' : '{7101A9AF-332E-4295-BF95-4A543D257F21}',
	'ITestUnit3' : '{B2EF4B1D-1908-4C2A-A9AF-07EDFC50010C}',
	'ITestUnits' : '{CC055F08-5DF6-4FD0-B375-E67976E81F42}',
	'ITestUnits2' : '{0ABE0B62-8C71-4DD4-BFF5-19B18C0CB345}',
	'ITestConfigurationReportFilterSettings' : '{55217A2D-832D-4768-BAD7-1B6B3D19D9A6}',
	'ITestConfigurationReport' : '{BC887636-BB88-42E7-911D-97B8D0681467}',
	'ITestConfigurationReport2' : '{E970C973-243C-4F44-AD57-EED6AC429342}',
	'ITestConfigurationReport3' : '{BAAEF49A-D7AD-4EA1-A3F6-B4318D1FAD41}',
	'ITestConfigurationReport4' : '{9E85F768-1B1C-4D26-9EEB-3A0BBAEBA374}',
	'_ITestConfigurationReportEvents' : '{840961AD-15FB-45B7-8493-C0AC2DE5C5D3}',
	'ITestConfigurationSettings' : '{8D16877F-6BB0-4149-AD69-E44F6FBB330C}',
	'ITestConfigurationSettings2' : '{32D8C5C4-4E98-4D35-85E8-4FFFBFD0B7C5}',
	'ITestConfigurationSettings3' : '{73138884-E89A-4560-91E4-ABE2A8B4D5AE}',
	'ITestConfigurationSettings4' : '{369D42D9-095C-402E-82B7-DE421D0CC79C}',
	'IVariantProfileNames' : '{9F64CBD2-C6F2-4BB7-B656-5D856796A16D}',
	'ITestConfiguration' : '{41AA0642-6523-473C-8A58-57123E020859}',
	'ITestConfiguration2' : '{0E81621C-E241-41C2-B18C-913EFA939A05}',
	'ITestConfiguration3' : '{D3B9590D-503A-43BA-8BEE-190E0BDDF9B4}',
	'ITestConfiguration4' : '{BAC68327-029F-458D-9C87-6C7EFC276CA9}',
	'ITestConfiguration5' : '{490B7A27-FB8E-47ED-BE1F-274166004269}',
	'ITestConfiguration6' : '{6E686DFA-9F5C-49C7-9993-D7CBD4E9DB6A}',
	'ITestConfiguration7' : '{EC34E24D-11A5-40C1-809A-53258622E1ED}',
	'_ITestConfigurationEvents' : '{1E0577C8-B62F-43E7-A896-3E171A1BA9DF}',
	'ITestConfigurations' : '{CC065BBC-C124-4F43-A8C8-BE54D736197E}',
	'IVideoWindow' : '{63008CF3-5A5C-42A8-9095-4B996EC15FC8}',
	'IVideoWindow2' : '{63008CF3-5A5C-42A8-9095-4B996EC15FC9}',
	'IVideoWindows' : '{53E11521-81AC-4D16-A147-17A68F40A7B7}',
	'IStartValueList' : '{82D6EC01-1A53-46FD-8026-C3E9F24DBCAC}',
	'IIpNetworkAddress' : '{BDD56164-3B20-4F29-B5BB-5161F67EEBCE}',
	'IIpNetworkAddressList' : '{A19229D7-CD25-4877-8C52-7691E1EECA8F}',
	'IVlan' : '{A5FC831B-C2E5-47A0-BD28-777DCE0FE5A9}',
	'IVlans' : '{8A32A0E9-C1A1-4E8B-94DA-C6910338C058}',
	'IIpSetting' : '{D898B690-6B35-40D2-9968-3B97DA3CB932}',
	'ITcpIpAdapter' : '{212A97ED-1940-4733-8FE1-901B0AF8DB14}',
	'ITcpIpAdapters' : '{2E642C88-22F4-4F61-8A3A-FE9790A1F3C2}',
	'ITcpIpStackSetting' : '{61E75232-C8A9-4C15-8818-4C41DD579A23}',
	'IPort' : '{D5FE2796-B4E3-4370-B567-89455FEBFE9B}',
	'IPort2' : '{56722E45-899F-4733-9638-627A0743BECD}',
	'IPorts' : '{15E2A6C6-48F5-4F00-9406-4CF1A8B576A0}',
	'IPorts2' : '{8E121922-A12C-47FB-8A33-47ACA0D80751}',
	'IARXMLImportParameters' : '{E56FBBB1-317E-4340-A588-0DDA95B2922E}',
	'ICANoe4Server' : '{CB14D616-FD76-46C7-9F77-48247EF3ED71}',
}

win32com.client.constants.__dicts__.append(constants.__dict__)

